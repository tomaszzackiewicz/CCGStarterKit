using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using UnityEngine.UI;

namespace Caerwent{

	public class DeckManager : MonoBehaviour {

		//Static reference variable for this class
		public static DeckManager deckManager;
		
		#region Variables definition
		private Ray ray;
		private RaycastHit hit;
		private Vector3 centerPosition;
		public Vector3 modelCardScale;
		public Vector3 lockedCardScale;
		public Vector3 normalCardScale;
		private float lastClickTime;
		public List<GameObject> cardsToSpawn = new List<GameObject>();
		
		private int indexArray;
		private GameObject spawnPointList;
		
		public bool switcher1;
		public bool switcher2;
		public bool switcher3;
		
		private GameObject spawnPoint1;
		private GameObject spawnPoint2;
		private GameObject spawnPoint3;
		
		private GameObject[] allObjects;
		private GameObject[] allObjects1;
		
		public List<GameObject> cards1 = new List<GameObject>();
		public List<GameObject> cards2 = new List<GameObject>();
		public List<GameObject> cards3 = new List<GameObject>();
		
		public List<GameObject> spawnPoints1 = new List<GameObject>();
		public List<GameObject> spawnPoints2 = new List<GameObject>();
		public List<GameObject> spawnPoints3 = new List<GameObject>();
		
		private List<GameObject> deck1Cards = new List<GameObject>();
		private List<GameObject> deck2Cards = new List<GameObject>();
		private List<GameObject> deck3Cards = new List<GameObject>();
		
		public bool cardDeck1;
		public bool cardDeck2;
		public bool cardDeck3;
		
		public int numberOfCards;
		public int numberOfInstances;
		public int numberOfInstancesCounter;
		public float catchTime = 0.25f;
		private GameObject inputFieldSwitcher1;
		private GameObject inputFieldSwitcher2;
		private GameObject inputFieldSwitcher3;
		private GameObject tipText;
		private GameObject deckSize;
		
		public Text totalScore;
		
		private int instances1;
		private int instances1a;
		private int instances1b;
		private int instances1c;
		private int instances2;
		private int instances2a;
		private int instances2b;
		private int instances2c;
		private int instances3;
		private int instances3a;
		private int instances3b;
		private int instances3c;
		private int instances4;
		private int instances4a;
		private int instances4b;
		private int instances4c;
		private int instances5;
		private int instances5a;
		private int instances5b;
		private int instances5c;
		private int instances6;
		private int instances6a;
		private int instances6b;
		private int instances6c;
		private int instances7;
		private int instances7a;
		private int instances7b;
		private int instances7c;
		private int instances8;
		private int instances8a;
		private int instances8b;
		private int instances8c;
		private int instances9;
		private int instances9a;
		private int instances9b;
		private int instances9c;
		private int instances10;
		private int instances10a;
		private int instances10b;
		private int instances10c;
		private int instances11;
		private int instances11a;
		private int instances11b;
		private int instances11c;
		private int instances12;
		private int instances12a;
		private int instances12b;
		private int instances12c;
		private int instances13;
		private int instances13a;
		private int instances13b;
		private int instances13c;
		private int instances14;
		private int instances14a;
		private int instances14b;
		private int instances14c;
		private int instances15;
		private int instances15a;
		private int instances15b;
		private int instances15c;
		private int instances16;
		private int instances16a;
		private int instances16b;
		private int instances16c;
		private int instances17;
		private int instances17a;
		private int instances17b;
		private int instances17c;
		private int instances18;
		private int instances18a;
		private int instances18b;
		private int instances18c;
		private int instances19;
		private int instances19a;
		private int instances19b;
		private int instances19c;
		private int instances20;
		private int instances20a;
		private int instances20b;
		private int instances20c;
		private int instances21;
		private int instances21a;
		private int instances21b;
		private int instances21c;
		private int instances22;
		private int instances22a;
		private int instances22b;
		private int instances22c;
		private int instances23;
		private int instances23a;
		private int instances23b;
		private int instances23c;
		private int instances24;
		private int instances24a;
		private int instances24b;
		private int instances24c;
		private int instances25;
		private int instances25a;
		private int instances25b;
		private int instances25c;
		private int instances26;
		private int instances26a;
		private int instances26b;
		private int instances26c;
		private int instances27;
		private int instances27a;
		private int instances27b;
		private int instances27c;
		private int instances28;
		private int instances28a;
		private int instances28b;
		private int instances28c;
		private int instances29;
		private int instances29a;
		private int instances29b;
		private int instances29c;
		private int instances30;
		private int instances30a;
		private int instances30b;
		private int instances30c;
		private int instances31;
		private int instances31a;
		private int instances31b;
		private int instances31c;
		private int instances32;
		private int instances32a;
		private int instances32b;
		private int instances32c;
		private int instances33;
		private int instances33a;
		private int instances33b;
		private int instances33c;
		private int instances34;
		private int instances34a;
		private int instances34b;
		private int instances34c;
		private int instances35;
		private int instances35a;
		private int instances35b;
		private int instances35c;
		private int instances36;
		private int instances36a;
		private int instances36b;
		private int instances36c;
		private int instances37;
		private int instances37a;
		private int instances37b;
		private int instances37c;
		private int instances38;
		private int instances38a;
		private int instances38b;
		private int instances38c;
		private int instances39;
		private int instances39a;
		private int instances39b;
		private int instances39c;
		private int instances40;
		private int instances40a;
		private int instances40b;
		private int instances40c;
		private int instances41;
		private int instances41a;
		private int instances41b;
		private int instances41c;
		private int instances42;
		private int instances42a;
		private int instances42b;
		private int instances42c;
		private int instances43;
		private int instances43a;
		private int instances43b;
		private int instances43c;
		private int instances44;
		private int instances44a;
		private int instances44b;
		private int instances44c;
		private int instances45;
		private int instances45a;
		private int instances45b;
		private int instances45c;
		private int instances46;
		private int instances46a;
		private int instances46b;
		private int instances46c;
		private int instances47;
		private int instances47a;
		private int instances47b;
		private int instances47c;
		private int instances48;
		private int instances48a;
		private int instances48b;
		private int instances48c;
		private int instances49;
		private int instances49a;
		private int instances49b;
		private int instances49c;
		private int instances50;
		private int instances50a;
		private int instances50b;
		private int instances50c;
		private int instances51;
		private int instances51a;
		private int instances51b;
		private int instances51c;
		private int instances52;
		private int instances52a;
		private int instances52b;
		private int instances52c;
		private int instances53;
		private int instances53a;
		private int instances53b;
		private int instances53c;
		private int instances54;
		private int instances54a;
		private int instances54b;
		private int instances54c;
		private int instances55;
		private int instances55a;
		private int instances55b;
		private int instances55c;
		private int instances56;
		private int instances56a;
		private int instances56b;
		private int instances56c;
		private int instances57;
		private int instances57a;
		private int instances57b;
		private int instances57c;
		private int instances58;
		private int instances58a;
		private int instances58b;
		private int instances58c;
		private int instances59;
		private int instances59a;
		private int instances59b;
		private int instances59c;
		private int instances60;
		private int instances60a;
		private int instances60b;
		private int instances60c;
		
		
		
		public static int instancesCounter1Deck1;
		public static int instancesCounter1Deck2;
		public static int instancesCounter1Deck3;
		
		public static int instancesCounter1aDeck1;
		public static int instancesCounter1aDeck2;
		public static int instancesCounter1aDeck3;
		
		public static int instancesCounter1bDeck1;
		public static int instancesCounter1bDeck2;
		public static int instancesCounter1bDeck3;
		
		public static int instancesCounter1cDeck1;
		public static int instancesCounter1cDeck2;
		public static int instancesCounter1cDeck3;
		
		public static int instancesCounter2Deck1;
		public static int instancesCounter2Deck2;
		public static int instancesCounter2Deck3;
		
		public static int instancesCounter2aDeck1;
		public static int instancesCounter2aDeck2;
		public static int instancesCounter2aDeck3;
		
		public static int instancesCounter2bDeck1;
		public static int instancesCounter2bDeck2;
		public static int instancesCounter2bDeck3;
		
		public static int instancesCounter2cDeck1;
		public static int instancesCounter2cDeck2;
		public static int instancesCounter2cDeck3;
		
		public static int instancesCounter3Deck1;
		public static int instancesCounter3Deck2;
		public static int instancesCounter3Deck3;
		
		public static int instancesCounter3aDeck1;
		public static int instancesCounter3aDeck2;
		public static int instancesCounter3aDeck3;
		
		public static int instancesCounter3bDeck1;
		public static int instancesCounter3bDeck2;
		public static int instancesCounter3bDeck3;
		
		public static int instancesCounter3cDeck1;
		public static int instancesCounter3cDeck2;
		public static int instancesCounter3cDeck3;
		
		public static int instancesCounter4Deck1;
		public static int instancesCounter4Deck2;
		public static int instancesCounter4Deck3;
		
		public static int instancesCounter4aDeck1;
		public static int instancesCounter4aDeck2;
		public static int instancesCounter4aDeck3;
		
		public static int instancesCounter4bDeck1;
		public static int instancesCounter4bDeck2;
		public static int instancesCounter4bDeck3;
		
		public static int instancesCounter4cDeck1;
		public static int instancesCounter4cDeck2;
		public static int instancesCounter4cDeck3;
		
		public static int instancesCounter5Deck1;
		public static int instancesCounter5Deck2;
		public static int instancesCounter5Deck3;
		
		public static int instancesCounter5aDeck1;
		public static int instancesCounter5aDeck2;
		public static int instancesCounter5aDeck3;
		
		public static int instancesCounter5bDeck1;
		public static int instancesCounter5bDeck2;
		public static int instancesCounter5bDeck3;
		
		public static int instancesCounter5cDeck1;
		public static int instancesCounter5cDeck2;
		public static int instancesCounter5cDeck3;
		
		public static int instancesCounter6Deck1;
		public static int instancesCounter6Deck2;
		public static int instancesCounter6Deck3;
		
		public static int instancesCounter6aDeck1;
		public static int instancesCounter6aDeck2;
		public static int instancesCounter6aDeck3;
		
		public static int instancesCounter6bDeck1;
		public static int instancesCounter6bDeck2;
		public static int instancesCounter6bDeck3;
		
		public static int instancesCounter6cDeck1;
		public static int instancesCounter6cDeck2;
		public static int instancesCounter6cDeck3;
		
		public static int instancesCounter7Deck1;
		public static int instancesCounter7Deck2;
		public static int instancesCounter7Deck3;
		
		public static int instancesCounter7aDeck1;
		public static int instancesCounter7aDeck2;
		public static int instancesCounter7aDeck3;
		
		public static int instancesCounter7bDeck1;
		public static int instancesCounter7bDeck2;
		public static int instancesCounter7bDeck3;
		
		public static int instancesCounter7cDeck1;
		public static int instancesCounter7cDeck2;
		public static int instancesCounter7cDeck3;
		
		public static int instancesCounter8Deck1;
		public static int instancesCounter8Deck2;
		public static int instancesCounter8Deck3;
		
		public static int instancesCounter8aDeck1;
		public static int instancesCounter8aDeck2;
		public static int instancesCounter8aDeck3;
		
		public static int instancesCounter8bDeck1;
		public static int instancesCounter8bDeck2;
		public static int instancesCounter8bDeck3;
		
		public static int instancesCounter8cDeck1;
		public static int instancesCounter8cDeck2;
		public static int instancesCounter8cDeck3;
		
		public static int instancesCounter9Deck1;
		public static int instancesCounter9Deck2;
		public static int instancesCounter9Deck3;
		
		public static int instancesCounter9aDeck1;
		public static int instancesCounter9aDeck2;
		public static int instancesCounter9aDeck3;
		
		public static int instancesCounter9bDeck1;
		public static int instancesCounter9bDeck2;
		public static int instancesCounter9bDeck3;
		
		public static int instancesCounter9cDeck1;
		public static int instancesCounter9cDeck2;
		public static int instancesCounter9cDeck3;
		
		public static int instancesCounter10Deck1;
		public static int instancesCounter10Deck2;
		public static int instancesCounter10Deck3;
		
		public static int instancesCounter10aDeck1;
		public static int instancesCounter10aDeck2;
		public static int instancesCounter10aDeck3;
		
		public static int instancesCounter10bDeck1;
		public static int instancesCounter10bDeck2;
		public static int instancesCounter10bDeck3;
		
		public static int instancesCounter10cDeck1;
		public static int instancesCounter10cDeck2;
		public static int instancesCounter10cDeck3;
		
		public static int instancesCounter11Deck1;
		public static int instancesCounter11Deck2;
		public static int instancesCounter11Deck3;
		
		public static int instancesCounter11aDeck1;
		public static int instancesCounter11aDeck2;
		public static int instancesCounter11aDeck3;
		
		public static int instancesCounter11bDeck1;
		public static int instancesCounter11bDeck2;
		public static int instancesCounter11bDeck3;
		
		public static int instancesCounter11cDeck1;
		public static int instancesCounter11cDeck2;
		public static int instancesCounter11cDeck3;
		
		public static int instancesCounter12Deck1;
		public static int instancesCounter12Deck2;
		public static int instancesCounter12Deck3;
		
		public static int instancesCounter12aDeck1;
		public static int instancesCounter12aDeck2;
		public static int instancesCounter12aDeck3;
		
		public static int instancesCounter12bDeck1;
		public static int instancesCounter12bDeck2;
		public static int instancesCounter12bDeck3;
		
		public static int instancesCounter12cDeck1;
		public static int instancesCounter12cDeck2;
		public static int instancesCounter12cDeck3;
		
		public static int instancesCounter13Deck1;
		public static int instancesCounter13Deck2;
		public static int instancesCounter13Deck3;
		
		public static int instancesCounter13aDeck1;
		public static int instancesCounter13aDeck2;
		public static int instancesCounter13aDeck3;
		
		public static int instancesCounter13bDeck1;
		public static int instancesCounter13bDeck2;
		public static int instancesCounter13bDeck3;
		
		public static int instancesCounter13cDeck1;
		public static int instancesCounter13cDeck2;
		public static int instancesCounter13cDeck3;
		
		public static int instancesCounter14Deck1;
		public static int instancesCounter14Deck2;
		public static int instancesCounter14Deck3;
		
		public static int instancesCounter14aDeck1;
		public static int instancesCounter14aDeck2;
		public static int instancesCounter14aDeck3;
		
		public static int instancesCounter14bDeck1;
		public static int instancesCounter14bDeck2;
		public static int instancesCounter14bDeck3;
		
		public static int instancesCounter14cDeck1;
		public static int instancesCounter14cDeck2;
		public static int instancesCounter14cDeck3;
		
		public static int instancesCounter15Deck1;
		public static int instancesCounter15Deck2;
		public static int instancesCounter15Deck3;
		
		public static int instancesCounter15aDeck1;
		public static int instancesCounter15aDeck2;
		public static int instancesCounter15aDeck3;
		
		public static int instancesCounter15bDeck1;
		public static int instancesCounter15bDeck2;
		public static int instancesCounter15bDeck3;
		
		public static int instancesCounter15cDeck1;
		public static int instancesCounter15cDeck2;
		public static int instancesCounter15cDeck3;
		
		public static int instancesCounter16Deck1;
		public static int instancesCounter16Deck2;
		public static int instancesCounter16Deck3;
		
		public static int instancesCounter16aDeck1;
		public static int instancesCounter16aDeck2;
		public static int instancesCounter16aDeck3;
		
		public static int instancesCounter16bDeck1;
		public static int instancesCounter16bDeck2;
		public static int instancesCounter16bDeck3;
		
		public static int instancesCounter16cDeck1;
		public static int instancesCounter16cDeck2;
		public static int instancesCounter16cDeck3;
		
		public static int instancesCounter17Deck1;
		public static int instancesCounter17Deck2;
		public static int instancesCounter17Deck3;
		
		public static int instancesCounter17aDeck1;
		public static int instancesCounter17aDeck2;
		public static int instancesCounter17aDeck3;
		
		public static int instancesCounter17bDeck1;
		public static int instancesCounter17bDeck2;
		public static int instancesCounter17bDeck3;
		
		public static int instancesCounter17cDeck1;
		public static int instancesCounter17cDeck2;
		public static int instancesCounter17cDeck3;
		
		public static int instancesCounter18Deck1;
		public static int instancesCounter18Deck2;
		public static int instancesCounter18Deck3;
		
		public static int instancesCounter18aDeck1;
		public static int instancesCounter18aDeck2;
		public static int instancesCounter18aDeck3;
		
		public static int instancesCounter18bDeck1;
		public static int instancesCounter18bDeck2;
		public static int instancesCounter18bDeck3;
		
		public static int instancesCounter18cDeck1;
		public static int instancesCounter18cDeck2;
		public static int instancesCounter18cDeck3;
		
		public static int instancesCounter19Deck1;
		public static int instancesCounter19Deck2;
		public static int instancesCounter19Deck3;
		
		public static int instancesCounter19aDeck1;
		public static int instancesCounter19aDeck2;
		public static int instancesCounter19aDeck3;
		
		public static int instancesCounter19bDeck1;
		public static int instancesCounter19bDeck2;
		public static int instancesCounter19bDeck3;
		
		public static int instancesCounter19cDeck1;
		public static int instancesCounter19cDeck2;
		public static int instancesCounter19cDeck3;
		
		public static int instancesCounter20Deck1;
		public static int instancesCounter20Deck2;
		public static int instancesCounter20Deck3;
		
		public static int instancesCounter20aDeck1;
		public static int instancesCounter20aDeck2;
		public static int instancesCounter20aDeck3;
		
		public static int instancesCounter20bDeck1;
		public static int instancesCounter20bDeck2;
		public static int instancesCounter20bDeck3;
		
		public static int instancesCounter20cDeck1;
		public static int instancesCounter20cDeck2;
		public static int instancesCounter20cDeck3;
		
		public static int instancesCounter21Deck1;
		public static int instancesCounter21Deck2;
		public static int instancesCounter21Deck3;
		
		public static int instancesCounter21aDeck1;
		public static int instancesCounter21aDeck2;
		public static int instancesCounter21aDeck3;
		
		public static int instancesCounter21bDeck1;
		public static int instancesCounter21bDeck2;
		public static int instancesCounter21bDeck3;
		
		public static int instancesCounter21cDeck1;
		public static int instancesCounter21cDeck2;
		public static int instancesCounter21cDeck3;
		
		public static int instancesCounter22Deck1;
		public static int instancesCounter22Deck2;
		public static int instancesCounter22Deck3;
		
		public static int instancesCounter22aDeck1;
		public static int instancesCounter22aDeck2;
		public static int instancesCounter22aDeck3;
		
		public static int instancesCounter22bDeck1;
		public static int instancesCounter22bDeck2;
		public static int instancesCounter22bDeck3;
		
		public static int instancesCounter22cDeck1;
		public static int instancesCounter22cDeck2;
		public static int instancesCounter22cDeck3;
		
		public static int instancesCounter23Deck1;
		public static int instancesCounter23Deck2;
		public static int instancesCounter23Deck3;
		
		public static int instancesCounter23aDeck1;
		public static int instancesCounter23aDeck2;
		public static int instancesCounter23aDeck3;
		
		public static int instancesCounter23bDeck1;
		public static int instancesCounter23bDeck2;
		public static int instancesCounter23bDeck3;
		
		public static int instancesCounter23cDeck1;
		public static int instancesCounter23cDeck2;
		public static int instancesCounter23cDeck3;
		
		public static int instancesCounter24Deck1;
		public static int instancesCounter24Deck2;
		public static int instancesCounter24Deck3;
		
		public static int instancesCounter24aDeck1;
		public static int instancesCounter24aDeck2;
		public static int instancesCounter24aDeck3;
		
		public static int instancesCounter24bDeck1;
		public static int instancesCounter24bDeck2;
		public static int instancesCounter24bDeck3;
		
		public static int instancesCounter24cDeck1;
		public static int instancesCounter24cDeck2;
		public static int instancesCounter24cDeck3;
		
		public static int instancesCounter25Deck1;
		public static int instancesCounter25Deck2;
		public static int instancesCounter25Deck3;
		
		public static int instancesCounter25aDeck1;
		public static int instancesCounter25aDeck2;
		public static int instancesCounter25aDeck3;
		
		public static int instancesCounter25bDeck1;
		public static int instancesCounter25bDeck2;
		public static int instancesCounter25bDeck3;
		
		public static int instancesCounter25cDeck1;
		public static int instancesCounter25cDeck2;
		public static int instancesCounter25cDeck3;
		
		public static int instancesCounter26Deck1;
		public static int instancesCounter26Deck2;
		public static int instancesCounter26Deck3;
		
		public static int instancesCounter26aDeck1;
		public static int instancesCounter26aDeck2;
		public static int instancesCounter26aDeck3;
		
		public static int instancesCounter26bDeck1;
		public static int instancesCounter26bDeck2;
		public static int instancesCounter26bDeck3;
		
		public static int instancesCounter26cDeck1;
		public static int instancesCounter26cDeck2;
		public static int instancesCounter26cDeck3;
		
		public static int instancesCounter27Deck1;
		public static int instancesCounter27Deck2;
		public static int instancesCounter27Deck3;
		
		public static int instancesCounter27aDeck1;
		public static int instancesCounter27aDeck2;
		public static int instancesCounter27aDeck3;
		
		public static int instancesCounter27bDeck1;
		public static int instancesCounter27bDeck2;
		public static int instancesCounter27bDeck3;
		
		public static int instancesCounter27cDeck1;
		public static int instancesCounter27cDeck2;
		public static int instancesCounter27cDeck3;
		
		public static int instancesCounter28Deck1;
		public static int instancesCounter28Deck2;
		public static int instancesCounter28Deck3;
		
		public static int instancesCounter28aDeck1;
		public static int instancesCounter28aDeck2;
		public static int instancesCounter28aDeck3;
		
		public static int instancesCounter28bDeck1;
		public static int instancesCounter28bDeck2;
		public static int instancesCounter28bDeck3;
		
		public static int instancesCounter28cDeck1;
		public static int instancesCounter28cDeck2;
		public static int instancesCounter28cDeck3;
		
		public static int instancesCounter29Deck1;
		public static int instancesCounter29Deck2;
		public static int instancesCounter29Deck3;
		
		public static int instancesCounter29aDeck1;
		public static int instancesCounter29aDeck2;
		public static int instancesCounter29aDeck3;
		
		public static int instancesCounter29bDeck1;
		public static int instancesCounter29bDeck2;
		public static int instancesCounter29bDeck3;
		
		public static int instancesCounter29cDeck1;
		public static int instancesCounter29cDeck2;
		public static int instancesCounter29cDeck3;
		
		public static int instancesCounter30Deck1;
		public static int instancesCounter30Deck2;
		public static int instancesCounter30Deck3;
		
		public static int instancesCounter30aDeck1;
		public static int instancesCounter30aDeck2;
		public static int instancesCounter30aDeck3;
		
		public static int instancesCounter30bDeck1;
		public static int instancesCounter30bDeck2;
		public static int instancesCounter30bDeck3;
		
		public static int instancesCounter30cDeck1;
		public static int instancesCounter30cDeck2;
		public static int instancesCounter30cDeck3;
		
		public static int instancesCounter31Deck1;
		public static int instancesCounter31Deck2;
		public static int instancesCounter31Deck3;
		
		public static int instancesCounter31aDeck1;
		public static int instancesCounter31aDeck2;
		public static int instancesCounter31aDeck3;
		
		public static int instancesCounter31bDeck1;
		public static int instancesCounter31bDeck2;
		public static int instancesCounter31bDeck3;
		
		public static int instancesCounter31cDeck1;
		public static int instancesCounter31cDeck2;
		public static int instancesCounter31cDeck3;
		
		public static int instancesCounter32Deck1;
		public static int instancesCounter32Deck2;
		public static int instancesCounter32Deck3;
		
		public static int instancesCounter32aDeck1;
		public static int instancesCounter32aDeck2;
		public static int instancesCounter32aDeck3;
		
		public static int instancesCounter32bDeck1;
		public static int instancesCounter32bDeck2;
		public static int instancesCounter32bDeck3;
		
		public static int instancesCounter32cDeck1;
		public static int instancesCounter32cDeck2;
		public static int instancesCounter32cDeck3;
		
		public static int instancesCounter33Deck1;
		public static int instancesCounter33Deck2;
		public static int instancesCounter33Deck3;
		
		public static int instancesCounter33aDeck1;
		public static int instancesCounter33aDeck2;
		public static int instancesCounter33aDeck3;
		
		public static int instancesCounter33bDeck1;
		public static int instancesCounter33bDeck2;
		public static int instancesCounter33bDeck3;
		
		public static int instancesCounter33cDeck1;
		public static int instancesCounter33cDeck2;
		public static int instancesCounter33cDeck3;
		
		public static int instancesCounter34Deck1;
		public static int instancesCounter34Deck2;
		public static int instancesCounter34Deck3;
		
		public static int instancesCounter34aDeck1;
		public static int instancesCounter34aDeck2;
		public static int instancesCounter34aDeck3;
		
		public static int instancesCounter34bDeck1;
		public static int instancesCounter34bDeck2;
		public static int instancesCounter34bDeck3;
		
		public static int instancesCounter34cDeck1;
		public static int instancesCounter34cDeck2;
		public static int instancesCounter34cDeck3;
		
		public static int instancesCounter35Deck1;
		public static int instancesCounter35Deck2;
		public static int instancesCounter35Deck3;
		
		public static int instancesCounter35aDeck1;
		public static int instancesCounter35aDeck2;
		public static int instancesCounter35aDeck3;
		
		public static int instancesCounter35bDeck1;
		public static int instancesCounter35bDeck2;
		public static int instancesCounter35bDeck3;
		
		public static int instancesCounter35cDeck1;
		public static int instancesCounter35cDeck2;
		public static int instancesCounter35cDeck3;
		
		public static int instancesCounter36Deck1;
		public static int instancesCounter36Deck2;
		public static int instancesCounter36Deck3;
		
		public static int instancesCounter36aDeck1;
		public static int instancesCounter36aDeck2;
		public static int instancesCounter36aDeck3;
		
		public static int instancesCounter36bDeck1;
		public static int instancesCounter36bDeck2;
		public static int instancesCounter36bDeck3;
		
		public static int instancesCounter36cDeck1;
		public static int instancesCounter36cDeck2;
		public static int instancesCounter36cDeck3;
		
		public static int instancesCounter37Deck1;
		public static int instancesCounter37Deck2;
		public static int instancesCounter37Deck3;
		
		public static int instancesCounter37aDeck1;
		public static int instancesCounter37aDeck2;
		public static int instancesCounter37aDeck3;
		
		public static int instancesCounter37bDeck1;
		public static int instancesCounter37bDeck2;
		public static int instancesCounter37bDeck3;
		
		public static int instancesCounter37cDeck1;
		public static int instancesCounter37cDeck2;
		public static int instancesCounter37cDeck3;
		
		public static int instancesCounter38Deck1;
		public static int instancesCounter38Deck2;
		public static int instancesCounter38Deck3;
		
		public static int instancesCounter38aDeck1;
		public static int instancesCounter38aDeck2;
		public static int instancesCounter38aDeck3;
		
		public static int instancesCounter38bDeck1;
		public static int instancesCounter38bDeck2;
		public static int instancesCounter38bDeck3;
		
		public static int instancesCounter38cDeck1;
		public static int instancesCounter38cDeck2;
		public static int instancesCounter38cDeck3;
		
		public static int instancesCounter39Deck1;
		public static int instancesCounter39Deck2;
		public static int instancesCounter39Deck3;
		
		public static int instancesCounter39aDeck1;
		public static int instancesCounter39aDeck2;
		public static int instancesCounter39aDeck3;
		
		public static int instancesCounter39bDeck1;
		public static int instancesCounter39bDeck2;
		public static int instancesCounter39bDeck3;
		
		public static int instancesCounter39cDeck1;
		public static int instancesCounter39cDeck2;
		public static int instancesCounter39cDeck3;
		
		public static int instancesCounter40Deck1;
		public static int instancesCounter40Deck2;
		public static int instancesCounter40Deck3;
		
		public static int instancesCounter40aDeck1;
		public static int instancesCounter40aDeck2;
		public static int instancesCounter40aDeck3;
		
		public static int instancesCounter40bDeck1;
		public static int instancesCounter40bDeck2;
		public static int instancesCounter40bDeck3;
		
		public static int instancesCounter40cDeck1;
		public static int instancesCounter40cDeck2;
		public static int instancesCounter40cDeck3;
		
		public static int instancesCounter41Deck1;
		public static int instancesCounter41Deck2;
		public static int instancesCounter41Deck3;
		
		public static int instancesCounter41aDeck1;
		public static int instancesCounter41aDeck2;
		public static int instancesCounter41aDeck3;
		
		public static int instancesCounter41bDeck1;
		public static int instancesCounter41bDeck2;
		public static int instancesCounter41bDeck3;
		
		public static int instancesCounter41cDeck1;
		public static int instancesCounter41cDeck2;
		public static int instancesCounter41cDeck3;
		
		public static int instancesCounter42Deck1;
		public static int instancesCounter42Deck2;
		public static int instancesCounter42Deck3;
		
		public static int instancesCounter42aDeck1;
		public static int instancesCounter42aDeck2;
		public static int instancesCounter42aDeck3;
		
		public static int instancesCounter42bDeck1;
		public static int instancesCounter42bDeck2;
		public static int instancesCounter42bDeck3;
		
		public static int instancesCounter42cDeck1;
		public static int instancesCounter42cDeck2;
		public static int instancesCounter42cDeck3;
		
		public static int instancesCounter43Deck1;
		public static int instancesCounter43Deck2;
		public static int instancesCounter43Deck3;
		
		public static int instancesCounter43aDeck1;
		public static int instancesCounter43aDeck2;
		public static int instancesCounter43aDeck3;
		
		public static int instancesCounter43bDeck1;
		public static int instancesCounter43bDeck2;
		public static int instancesCounter43bDeck3;
		
		public static int instancesCounter43cDeck1;
		public static int instancesCounter43cDeck2;
		public static int instancesCounter43cDeck3;
		
		public static int instancesCounter44Deck1;
		public static int instancesCounter44Deck2;
		public static int instancesCounter44Deck3;
		
		public static int instancesCounter44aDeck1;
		public static int instancesCounter44aDeck2;
		public static int instancesCounter44aDeck3;
		
		public static int instancesCounter44bDeck1;
		public static int instancesCounter44bDeck2;
		public static int instancesCounter44bDeck3;
		
		public static int instancesCounter44cDeck1;
		public static int instancesCounter44cDeck2;
		public static int instancesCounter44cDeck3;
		
		public static int instancesCounter45Deck1;
		public static int instancesCounter45Deck2;
		public static int instancesCounter45Deck3;
		
		public static int instancesCounter45aDeck1;
		public static int instancesCounter45aDeck2;
		public static int instancesCounter45aDeck3;
		
		public static int instancesCounter45bDeck1;
		public static int instancesCounter45bDeck2;
		public static int instancesCounter45bDeck3;
		
		public static int instancesCounter45cDeck1;
		public static int instancesCounter45cDeck2;
		public static int instancesCounter45cDeck3;
		
		public static int instancesCounter46Deck1;
		public static int instancesCounter46Deck2;
		public static int instancesCounter46Deck3;
		
		public static int instancesCounter46aDeck1;
		public static int instancesCounter46aDeck2;
		public static int instancesCounter46aDeck3;
		
		public static int instancesCounter46bDeck1;
		public static int instancesCounter46bDeck2;
		public static int instancesCounter46bDeck3;
		
		public static int instancesCounter46cDeck1;
		public static int instancesCounter46cDeck2;
		public static int instancesCounter46cDeck3;
		
		public static int instancesCounter47Deck1;
		public static int instancesCounter47Deck2;
		public static int instancesCounter47Deck3;
		
		public static int instancesCounter47aDeck1;
		public static int instancesCounter47aDeck2;
		public static int instancesCounter47aDeck3;
		
		public static int instancesCounter47bDeck1;
		public static int instancesCounter47bDeck2;
		public static int instancesCounter47bDeck3;
		
		public static int instancesCounter47cDeck1;
		public static int instancesCounter47cDeck2;
		public static int instancesCounter47cDeck3;
		
		public static int instancesCounter48Deck1;
		public static int instancesCounter48Deck2;
		public static int instancesCounter48Deck3;
		
		public static int instancesCounter48aDeck1;
		public static int instancesCounter48aDeck2;
		public static int instancesCounter48aDeck3;
		
		public static int instancesCounter48bDeck1;
		public static int instancesCounter48bDeck2;
		public static int instancesCounter48bDeck3;
		
		public static int instancesCounter48cDeck1;
		public static int instancesCounter48cDeck2;
		public static int instancesCounter48cDeck3;
		
		public static int instancesCounter49Deck1;
		public static int instancesCounter49Deck2;
		public static int instancesCounter49Deck3;
		
		public static int instancesCounter49aDeck1;
		public static int instancesCounter49aDeck2;
		public static int instancesCounter49aDeck3;
		
		public static int instancesCounter49bDeck1;
		public static int instancesCounter49bDeck2;
		public static int instancesCounter49bDeck3;
		
		public static int instancesCounter49cDeck1;
		public static int instancesCounter49cDeck2;
		public static int instancesCounter49cDeck3;
		
		public static int instancesCounter50Deck1;
		public static int instancesCounter50Deck2;
		public static int instancesCounter50Deck3;
		
		public static int instancesCounter50aDeck1;
		public static int instancesCounter50aDeck2;
		public static int instancesCounter50aDeck3;
		
		public static int instancesCounter50bDeck1;
		public static int instancesCounter50bDeck2;
		public static int instancesCounter50bDeck3;
		
		public static int instancesCounter50cDeck1;
		public static int instancesCounter50cDeck2;
		public static int instancesCounter50cDeck3;
		
		public static int instancesCounter51Deck1;
		public static int instancesCounter51Deck2;
		public static int instancesCounter51Deck3;
		
		public static int instancesCounter51aDeck1;
		public static int instancesCounter51aDeck2;
		public static int instancesCounter51aDeck3;
		
		public static int instancesCounter51bDeck1;
		public static int instancesCounter51bDeck2;
		public static int instancesCounter51bDeck3;
		
		public static int instancesCounter51cDeck1;
		public static int instancesCounter51cDeck2;
		public static int instancesCounter51cDeck3;
		
		public static int instancesCounter52Deck1;
		public static int instancesCounter52Deck2;
		public static int instancesCounter52Deck3;
		
		public static int instancesCounter52aDeck1;
		public static int instancesCounter52aDeck2;
		public static int instancesCounter52aDeck3;
		
		public static int instancesCounter52bDeck1;
		public static int instancesCounter52bDeck2;
		public static int instancesCounter52bDeck3;
		
		public static int instancesCounter52cDeck1;
		public static int instancesCounter52cDeck2;
		public static int instancesCounter52cDeck3;
		
		public static int instancesCounter53Deck1;
		public static int instancesCounter53Deck2;
		public static int instancesCounter53Deck3;
		
		public static int instancesCounter53aDeck1;
		public static int instancesCounter53aDeck2;
		public static int instancesCounter53aDeck3;
		
		public static int instancesCounter53bDeck1;
		public static int instancesCounter53bDeck2;
		public static int instancesCounter53bDeck3;
		
		public static int instancesCounter53cDeck1;
		public static int instancesCounter53cDeck2;
		public static int instancesCounter53cDeck3;
		
		public static int instancesCounter54Deck1;
		public static int instancesCounter54Deck2;
		public static int instancesCounter54Deck3;
		
		public static int instancesCounter54aDeck1;
		public static int instancesCounter54aDeck2;
		public static int instancesCounter54aDeck3;
		
		public static int instancesCounter54bDeck1;
		public static int instancesCounter54bDeck2;
		public static int instancesCounter54bDeck3;
		
		public static int instancesCounter54cDeck1;
		public static int instancesCounter54cDeck2;
		public static int instancesCounter54cDeck3;
		
		public static int instancesCounter55Deck1;
		public static int instancesCounter55Deck2;
		public static int instancesCounter55Deck3;
		
		public static int instancesCounter55aDeck1;
		public static int instancesCounter55aDeck2;
		public static int instancesCounter55aDeck3;
		
		public static int instancesCounter55bDeck1;
		public static int instancesCounter55bDeck2;
		public static int instancesCounter55bDeck3;
		
		public static int instancesCounter55cDeck1;
		public static int instancesCounter55cDeck2;
		public static int instancesCounter55cDeck3;
		
		public static int instancesCounter56Deck1;
		public static int instancesCounter56Deck2;
		public static int instancesCounter56Deck3;
		
		public static int instancesCounter56aDeck1;
		public static int instancesCounter56aDeck2;
		public static int instancesCounter56aDeck3;
		
		public static int instancesCounter56bDeck1;
		public static int instancesCounter56bDeck2;
		public static int instancesCounter56bDeck3;
		
		public static int instancesCounter56cDeck1;
		public static int instancesCounter56cDeck2;
		public static int instancesCounter56cDeck3;
		
		public static int instancesCounter57Deck1;
		public static int instancesCounter57Deck2;
		public static int instancesCounter57Deck3;
		
		public static int instancesCounter57aDeck1;
		public static int instancesCounter57aDeck2;
		public static int instancesCounter57aDeck3;
		
		public static int instancesCounter57bDeck1;
		public static int instancesCounter57bDeck2;
		public static int instancesCounter57bDeck3;
		
		public static int instancesCounter57cDeck1;
		public static int instancesCounter57cDeck2;
		public static int instancesCounter57cDeck3;
		
		public static int instancesCounter58Deck1;
		public static int instancesCounter58Deck2;
		public static int instancesCounter58Deck3;
		
		public static int instancesCounter58aDeck1;
		public static int instancesCounter58aDeck2;
		public static int instancesCounter58aDeck3;
		
		public static int instancesCounter58bDeck1;
		public static int instancesCounter58bDeck2;
		public static int instancesCounter58bDeck3;
		
		public static int instancesCounter58cDeck1;
		public static int instancesCounter58cDeck2;
		public static int instancesCounter58cDeck3;
		
		public static int instancesCounter59Deck1;
		public static int instancesCounter59Deck2;
		public static int instancesCounter59Deck3;
		
		public static int instancesCounter59aDeck1;
		public static int instancesCounter59aDeck2;
		public static int instancesCounter59aDeck3;
		
		public static int instancesCounter59bDeck1;
		public static int instancesCounter59bDeck2;
		public static int instancesCounter59bDeck3;
		
		public static int instancesCounter59cDeck1;
		public static int instancesCounter59cDeck2;
		public static int instancesCounter59cDeck3;
		
		public static int instancesCounter60Deck1;
		public static int instancesCounter60Deck2;
		public static int instancesCounter60Deck3;
		
		public static int instancesCounter60aDeck1;
		public static int instancesCounter60aDeck2;
		public static int instancesCounter60aDeck3;
		
		public static int instancesCounter60bDeck1;
		public static int instancesCounter60bDeck2;
		public static int instancesCounter60bDeck3;
		
		public static int instancesCounter60cDeck1;
		public static int instancesCounter60cDeck2;
		public static int instancesCounter60cDeck3;
		
		
		[HideInInspector]
		public GameObject instancesCounterTextObject1;
		[HideInInspector]
		public GameObject instancesCounterTextObject1a;
		[HideInInspector]
		public GameObject instancesCounterTextObject1b;
		[HideInInspector]
		public GameObject instancesCounterTextObject1c;
		[HideInInspector]
		public GameObject instancesCounterTextObject2;
		[HideInInspector]
		public GameObject instancesCounterTextObject2a;
		[HideInInspector]
		public GameObject instancesCounterTextObject2b;
		[HideInInspector]
		public GameObject instancesCounterTextObject2c;
		[HideInInspector]
		public GameObject instancesCounterTextObject3;
		[HideInInspector]
		public GameObject instancesCounterTextObject3a;
		[HideInInspector]
		public GameObject instancesCounterTextObject3b;
		[HideInInspector]
		public GameObject instancesCounterTextObject3c;
		[HideInInspector]
		public GameObject instancesCounterTextObject4;
		[HideInInspector]
		public GameObject instancesCounterTextObject4a;
		[HideInInspector]
		public GameObject instancesCounterTextObject4b;
		[HideInInspector]
		public GameObject instancesCounterTextObject4c;
		[HideInInspector]
		public GameObject instancesCounterTextObject5;
		[HideInInspector]
		public GameObject instancesCounterTextObject5a;
		[HideInInspector]
		public GameObject instancesCounterTextObject5b;
		[HideInInspector]
		public GameObject instancesCounterTextObject5c;
		[HideInInspector]
		public GameObject instancesCounterTextObject6;
		[HideInInspector]
		public GameObject instancesCounterTextObject6a;
		[HideInInspector]
		public GameObject instancesCounterTextObject6b;
		[HideInInspector]
		public GameObject instancesCounterTextObject6c;
		[HideInInspector]
		public GameObject instancesCounterTextObject7;
		[HideInInspector]
		public GameObject instancesCounterTextObject7a;
		[HideInInspector]
		public GameObject instancesCounterTextObject7b;
		[HideInInspector]
		public GameObject instancesCounterTextObject7c;
		[HideInInspector]
		public GameObject instancesCounterTextObject8;
		[HideInInspector]
		public GameObject instancesCounterTextObject8a;
		[HideInInspector]
		public GameObject instancesCounterTextObject8b;
		[HideInInspector]
		public GameObject instancesCounterTextObject8c;
		[HideInInspector]
		public GameObject instancesCounterTextObject9;
		[HideInInspector]
		public GameObject instancesCounterTextObject9a;
		[HideInInspector]
		public GameObject instancesCounterTextObject9b;
		[HideInInspector]
		public GameObject instancesCounterTextObject9c;
		[HideInInspector]
		public GameObject instancesCounterTextObject10;
		[HideInInspector]
		public GameObject instancesCounterTextObject10a;
		[HideInInspector]
		public GameObject instancesCounterTextObject10b;
		[HideInInspector]
		public GameObject instancesCounterTextObject10c;
		[HideInInspector]
		public GameObject instancesCounterTextObject11;
		[HideInInspector]
		public GameObject instancesCounterTextObject11a;
		[HideInInspector]
		public GameObject instancesCounterTextObject11b;
		[HideInInspector]
		public GameObject instancesCounterTextObject11c;
		[HideInInspector]
		public GameObject instancesCounterTextObject12;
		[HideInInspector]
		public GameObject instancesCounterTextObject12a;
		[HideInInspector]
		public GameObject instancesCounterTextObject12b;
		[HideInInspector]
		public GameObject instancesCounterTextObject12c;
		[HideInInspector]
		public GameObject instancesCounterTextObject13;
		[HideInInspector]
		public GameObject instancesCounterTextObject13a;
		[HideInInspector]
		public GameObject instancesCounterTextObject13b;
		[HideInInspector]
		public GameObject instancesCounterTextObject13c;
		[HideInInspector]
		public GameObject instancesCounterTextObject14;
		[HideInInspector]
		public GameObject instancesCounterTextObject14a;
		[HideInInspector]
		public GameObject instancesCounterTextObject14b;
		[HideInInspector]
		public GameObject instancesCounterTextObject14c;
		[HideInInspector]
		public GameObject instancesCounterTextObject15;
		[HideInInspector]
		public GameObject instancesCounterTextObject15a;
		[HideInInspector]
		public GameObject instancesCounterTextObject15b;
		[HideInInspector]
		public GameObject instancesCounterTextObject15c;
		[HideInInspector]
		public GameObject instancesCounterTextObject16;
		[HideInInspector]
		public GameObject instancesCounterTextObject16a;
		[HideInInspector]
		public GameObject instancesCounterTextObject16b;
		[HideInInspector]
		public GameObject instancesCounterTextObject16c;
		[HideInInspector]
		public GameObject instancesCounterTextObject17;
		[HideInInspector]
		public GameObject instancesCounterTextObject17a;
		[HideInInspector]
		public GameObject instancesCounterTextObject17b;
		[HideInInspector]
		public GameObject instancesCounterTextObject17c;
		[HideInInspector]
		public GameObject instancesCounterTextObject18;
		[HideInInspector]
		public GameObject instancesCounterTextObject18a;
		[HideInInspector]
		public GameObject instancesCounterTextObject18b;
		[HideInInspector]
		public GameObject instancesCounterTextObject18c;
		[HideInInspector]
		public GameObject instancesCounterTextObject19;
		[HideInInspector]
		public GameObject instancesCounterTextObject19a;
		[HideInInspector]
		public GameObject instancesCounterTextObject19b;
		[HideInInspector]
		public GameObject instancesCounterTextObject19c;
		[HideInInspector]
		public GameObject instancesCounterTextObject20;
		[HideInInspector]
		public GameObject instancesCounterTextObject20a;
		[HideInInspector]
		public GameObject instancesCounterTextObject20b;
		[HideInInspector]
		public GameObject instancesCounterTextObject20c;
		[HideInInspector]
		public GameObject instancesCounterTextObject21;
		[HideInInspector]
		public GameObject instancesCounterTextObject21a;
		[HideInInspector]
		public GameObject instancesCounterTextObject21b;
		[HideInInspector]
		public GameObject instancesCounterTextObject21c;
		[HideInInspector]
		public GameObject instancesCounterTextObject22;
		[HideInInspector]
		public GameObject instancesCounterTextObject22a;
		[HideInInspector]
		public GameObject instancesCounterTextObject22b;
		[HideInInspector]
		public GameObject instancesCounterTextObject22c;
		[HideInInspector]
		public GameObject instancesCounterTextObject23;
		[HideInInspector]
		public GameObject instancesCounterTextObject23a;
		[HideInInspector]
		public GameObject instancesCounterTextObject23b;
		[HideInInspector]
		public GameObject instancesCounterTextObject23c;
		[HideInInspector]
		public GameObject instancesCounterTextObject24;
		[HideInInspector]
		public GameObject instancesCounterTextObject24a;
		[HideInInspector]
		public GameObject instancesCounterTextObject24b;
		[HideInInspector]
		public GameObject instancesCounterTextObject24c;
		[HideInInspector]
		public GameObject instancesCounterTextObject25;
		[HideInInspector]
		public GameObject instancesCounterTextObject25a;
		[HideInInspector]
		public GameObject instancesCounterTextObject25b;
		[HideInInspector]
		public GameObject instancesCounterTextObject25c;
		[HideInInspector]
		public GameObject instancesCounterTextObject26;
		[HideInInspector]
		public GameObject instancesCounterTextObject26a;
		[HideInInspector]
		public GameObject instancesCounterTextObject26b;
		[HideInInspector]
		public GameObject instancesCounterTextObject26c;
		[HideInInspector]
		public GameObject instancesCounterTextObject27;
		[HideInInspector]
		public GameObject instancesCounterTextObject27a;
		[HideInInspector]
		public GameObject instancesCounterTextObject27b;
		[HideInInspector]
		public GameObject instancesCounterTextObject27c;
		[HideInInspector]
		public GameObject instancesCounterTextObject28;
		[HideInInspector]
		public GameObject instancesCounterTextObject28a;
		[HideInInspector]
		public GameObject instancesCounterTextObject28b;
		[HideInInspector]
		public GameObject instancesCounterTextObject28c;
		[HideInInspector]
		public GameObject instancesCounterTextObject29;
		[HideInInspector]
		public GameObject instancesCounterTextObject29a;
		[HideInInspector]
		public GameObject instancesCounterTextObject29b;
		[HideInInspector]
		public GameObject instancesCounterTextObject29c;
		[HideInInspector]
		public GameObject instancesCounterTextObject30;
		[HideInInspector]
		public GameObject instancesCounterTextObject30a;
		[HideInInspector]
		public GameObject instancesCounterTextObject30b;
		[HideInInspector]
		public GameObject instancesCounterTextObject30c;
		[HideInInspector]
		public GameObject instancesCounterTextObject31;
		[HideInInspector]
		public GameObject instancesCounterTextObject31a;
		[HideInInspector]
		public GameObject instancesCounterTextObject31b;
		[HideInInspector]
		public GameObject instancesCounterTextObject31c;
		[HideInInspector]
		public GameObject instancesCounterTextObject32;
		[HideInInspector]
		public GameObject instancesCounterTextObject32a;
		[HideInInspector]
		public GameObject instancesCounterTextObject32b;
		[HideInInspector]
		public GameObject instancesCounterTextObject32c;
		[HideInInspector]
		public GameObject instancesCounterTextObject33;
		[HideInInspector]
		public GameObject instancesCounterTextObject33a;
		[HideInInspector]
		public GameObject instancesCounterTextObject33b;
		[HideInInspector]
		public GameObject instancesCounterTextObject33c;
		[HideInInspector]
		public GameObject instancesCounterTextObject34;
		[HideInInspector]
		public GameObject instancesCounterTextObject34a;
		[HideInInspector]
		public GameObject instancesCounterTextObject34b;
		[HideInInspector]
		public GameObject instancesCounterTextObject34c;
		[HideInInspector]
		public GameObject instancesCounterTextObject35;
		[HideInInspector]
		public GameObject instancesCounterTextObject35a;
		[HideInInspector]
		public GameObject instancesCounterTextObject35b;
		[HideInInspector]
		public GameObject instancesCounterTextObject35c;
		[HideInInspector]
		public GameObject instancesCounterTextObject36;
		[HideInInspector]
		public GameObject instancesCounterTextObject36a;
		[HideInInspector]
		public GameObject instancesCounterTextObject36b;
		[HideInInspector]
		public GameObject instancesCounterTextObject36c;
		[HideInInspector]
		public GameObject instancesCounterTextObject37;
		[HideInInspector]
		public GameObject instancesCounterTextObject37a;
		[HideInInspector]
		public GameObject instancesCounterTextObject37b;
		[HideInInspector]
		public GameObject instancesCounterTextObject37c;
		[HideInInspector]
		public GameObject instancesCounterTextObject38;
		[HideInInspector]
		public GameObject instancesCounterTextObject38a;
		[HideInInspector]
		public GameObject instancesCounterTextObject38b;
		[HideInInspector]
		public GameObject instancesCounterTextObject38c;
		[HideInInspector]
		public GameObject instancesCounterTextObject39;
		[HideInInspector]
		public GameObject instancesCounterTextObject39a;
		[HideInInspector]
		public GameObject instancesCounterTextObject39b;
		[HideInInspector]
		public GameObject instancesCounterTextObject39c;
		[HideInInspector]
		public GameObject instancesCounterTextObject40;
		[HideInInspector]
		public GameObject instancesCounterTextObject40a;
		[HideInInspector]
		public GameObject instancesCounterTextObject40b;
		[HideInInspector]
		public GameObject instancesCounterTextObject40c;
		[HideInInspector]
		public GameObject instancesCounterTextObject41;
		[HideInInspector]
		public GameObject instancesCounterTextObject41a;
		[HideInInspector]
		public GameObject instancesCounterTextObject41b;
		[HideInInspector]
		public GameObject instancesCounterTextObject41c;
		[HideInInspector]
		public GameObject instancesCounterTextObject42;
		[HideInInspector]
		public GameObject instancesCounterTextObject42a;
		[HideInInspector]
		public GameObject instancesCounterTextObject42b;
		[HideInInspector]
		public GameObject instancesCounterTextObject42c;
		[HideInInspector]
		public GameObject instancesCounterTextObject43;
		[HideInInspector]
		public GameObject instancesCounterTextObject43a;
		[HideInInspector]
		public GameObject instancesCounterTextObject43b;
		[HideInInspector]
		public GameObject instancesCounterTextObject43c;
		[HideInInspector]
		public GameObject instancesCounterTextObject44;
		[HideInInspector]
		public GameObject instancesCounterTextObject44a;
		[HideInInspector]
		public GameObject instancesCounterTextObject44b;
		[HideInInspector]
		public GameObject instancesCounterTextObject44c;
		[HideInInspector]
		public GameObject instancesCounterTextObject45;
		[HideInInspector]
		public GameObject instancesCounterTextObject45a;
		[HideInInspector]
		public GameObject instancesCounterTextObject45b;
		[HideInInspector]
		public GameObject instancesCounterTextObject45c;
		[HideInInspector]
		public GameObject instancesCounterTextObject46;
		[HideInInspector]
		public GameObject instancesCounterTextObject46a;
		[HideInInspector]
		public GameObject instancesCounterTextObject46b;
		[HideInInspector]
		public GameObject instancesCounterTextObject46c;
		[HideInInspector]
		public GameObject instancesCounterTextObject47;
		[HideInInspector]
		public GameObject instancesCounterTextObject47a;
		[HideInInspector]
		public GameObject instancesCounterTextObject47b;
		[HideInInspector]
		public GameObject instancesCounterTextObject47c;
		[HideInInspector]
		public GameObject instancesCounterTextObject48;
		[HideInInspector]
		public GameObject instancesCounterTextObject48a;
		[HideInInspector]
		public GameObject instancesCounterTextObject48b;
		[HideInInspector]
		public GameObject instancesCounterTextObject48c;
		[HideInInspector]
		public GameObject instancesCounterTextObject49;
		[HideInInspector]
		public GameObject instancesCounterTextObject49a;
		[HideInInspector]
		public GameObject instancesCounterTextObject49b;
		[HideInInspector]
		public GameObject instancesCounterTextObject49c;
		[HideInInspector]
		public GameObject instancesCounterTextObject50;
		[HideInInspector]
		public GameObject instancesCounterTextObject50a;
		[HideInInspector]
		public GameObject instancesCounterTextObject50b;
		[HideInInspector]
		public GameObject instancesCounterTextObject50c;
		[HideInInspector]
		public GameObject instancesCounterTextObject51;
		[HideInInspector]
		public GameObject instancesCounterTextObject51a;
		[HideInInspector]
		public GameObject instancesCounterTextObject51b;
		[HideInInspector]
		public GameObject instancesCounterTextObject51c;
		[HideInInspector]
		public GameObject instancesCounterTextObject52;
		[HideInInspector]
		public GameObject instancesCounterTextObject52a;
		[HideInInspector]
		public GameObject instancesCounterTextObject52b;
		[HideInInspector]
		public GameObject instancesCounterTextObject52c;
		[HideInInspector]
		public GameObject instancesCounterTextObject53;
		[HideInInspector]
		public GameObject instancesCounterTextObject53a;
		[HideInInspector]
		public GameObject instancesCounterTextObject53b;
		[HideInInspector]
		public GameObject instancesCounterTextObject53c;
		[HideInInspector]
		public GameObject instancesCounterTextObject54;
		[HideInInspector]
		public GameObject instancesCounterTextObject54a;
		[HideInInspector]
		public GameObject instancesCounterTextObject54b;
		[HideInInspector]
		public GameObject instancesCounterTextObject54c;
		[HideInInspector]
		public GameObject instancesCounterTextObject55;
		[HideInInspector]
		public GameObject instancesCounterTextObject55a;
		[HideInInspector]
		public GameObject instancesCounterTextObject55b;
		[HideInInspector]
		public GameObject instancesCounterTextObject55c;
		[HideInInspector]
		public GameObject instancesCounterTextObject56;
		[HideInInspector]
		public GameObject instancesCounterTextObject56a;
		[HideInInspector]
		public GameObject instancesCounterTextObject56b;
		[HideInInspector]
		public GameObject instancesCounterTextObject56c;
		[HideInInspector]
		public GameObject instancesCounterTextObject57;
		[HideInInspector]
		public GameObject instancesCounterTextObject57a;
		[HideInInspector]
		public GameObject instancesCounterTextObject57b;
		[HideInInspector]
		public GameObject instancesCounterTextObject57c;
		[HideInInspector]
		public GameObject instancesCounterTextObject58;
		[HideInInspector]
		public GameObject instancesCounterTextObject58a;
		[HideInInspector]
		public GameObject instancesCounterTextObject58b;
		[HideInInspector]
		public GameObject instancesCounterTextObject58c;
		[HideInInspector]
		public GameObject instancesCounterTextObject59;
		[HideInInspector]
		public GameObject instancesCounterTextObject59a;
		[HideInInspector]
		public GameObject instancesCounterTextObject59b;
		[HideInInspector]
		public GameObject instancesCounterTextObject59c;
		[HideInInspector]
		public GameObject instancesCounterTextObject60;
		[HideInInspector]
		public GameObject instancesCounterTextObject60a;
		[HideInInspector]
		public GameObject instancesCounterTextObject60b;
		[HideInInspector]
		public GameObject instancesCounterTextObject60c;
		
		
		private GameObject card1;
		private GameObject card1a;
		private GameObject card1b;
		private GameObject card1c;
		private GameObject card2;
		private GameObject card2a;
		private GameObject card2b;
		private GameObject card2c;
		private GameObject card3;
		private GameObject card3a;
		private GameObject card3b;
		private GameObject card3c;
		private GameObject card4;
		private GameObject card4a;
		private GameObject card4b;
		private GameObject card4c;
		private GameObject card5;
		private GameObject card5a;
		private GameObject card5b;
		private GameObject card5c;
		private GameObject card6;
		private GameObject card6a;
		private GameObject card6b;
		private GameObject card6c;
		private GameObject card7;
		private GameObject card7a;
		private GameObject card7b;
		private GameObject card7c;
		private GameObject card8;
		private GameObject card8a;
		private GameObject card8b;
		private GameObject card8c;
		private GameObject card9;
		private GameObject card9a;
		private GameObject card9b;
		private GameObject card9c;
		private GameObject card10;
		private GameObject card10a;
		private GameObject card10b;
		private GameObject card10c;
		private GameObject card11;
		private GameObject card11a;
		private GameObject card11b;
		private GameObject card11c;
		private GameObject card12;
		private GameObject card12a;
		private GameObject card12b;
		private GameObject card12c;
		private GameObject card13;
		private GameObject card13a;
		private GameObject card13b;
		private GameObject card13c;
		private GameObject card14;
		private GameObject card14a;
		private GameObject card14b;
		private GameObject card14c;
		private GameObject card15;
		private GameObject card15a;
		private GameObject card15b;
		private GameObject card15c;
		private GameObject card16;
		private GameObject card16a;
		private GameObject card16b;
		private GameObject card16c;
		private GameObject card17;
		private GameObject card17a;
		private GameObject card17b;
		private GameObject card17c;
		private GameObject card18;
		private GameObject card18a;
		private GameObject card18b;
		private GameObject card18c;
		private GameObject card19;
		private GameObject card19a;
		private GameObject card19b;
		private GameObject card19c;
		private GameObject card20;
		private GameObject card20a;
		private GameObject card20b;
		private GameObject card20c;
		private GameObject card21;
		private GameObject card21a;
		private GameObject card21b;
		private GameObject card21c;
		private GameObject card22;
		private GameObject card22a;
		private GameObject card22b;
		private GameObject card22c;
		private GameObject card23;
		private GameObject card23a;
		private GameObject card23b;
		private GameObject card23c;
		private GameObject card24;
		private GameObject card24a;
		private GameObject card24b;
		private GameObject card24c;
		private GameObject card25;
		private GameObject card25a;
		private GameObject card25b;
		private GameObject card25c;
		private GameObject card26;
		private GameObject card26a;
		private GameObject card26b;
		private GameObject card26c;
		private GameObject card27;
		private GameObject card27a;
		private GameObject card27b;
		private GameObject card27c;
		private GameObject card28;
		private GameObject card28a;
		private GameObject card28b;
		private GameObject card28c;
		private GameObject card29;
		private GameObject card29a;
		private GameObject card29b;
		private GameObject card29c;
		private GameObject card30;
		private GameObject card30a;
		private GameObject card30b;
		private GameObject card30c;
		private GameObject card31;
		private GameObject card31a;
		private GameObject card31b;
		private GameObject card31c;
		private GameObject card32;
		private GameObject card32a;
		private GameObject card32b;
		private GameObject card32c;
		private GameObject card33;
		private GameObject card33a;
		private GameObject card33b;
		private GameObject card33c;
		private GameObject card34;
		private GameObject card34a;
		private GameObject card34b;
		private GameObject card34c;
		private GameObject card35;
		private GameObject card35a;
		private GameObject card35b;
		private GameObject card35c;
		private GameObject card36;
		private GameObject card36a;
		private GameObject card36b;
		private GameObject card36c;
		private GameObject card37;
		private GameObject card37a;
		private GameObject card37b;
		private GameObject card37c;
		private GameObject card38;
		private GameObject card38a;
		private GameObject card38b;
		private GameObject card38c;
		private GameObject card39;
		private GameObject card39a;
		private GameObject card39b;
		private GameObject card39c;
		private GameObject card40;
		private GameObject card40a;
		private GameObject card40b;
		private GameObject card40c;
		private GameObject card41;
		private GameObject card41a;
		private GameObject card41b;
		private GameObject card41c;
		private GameObject card42;
		private GameObject card42a;
		private GameObject card42b;
		private GameObject card42c;
		private GameObject card43;
		private GameObject card43a;
		private GameObject card43b;
		private GameObject card43c;
		private GameObject card44;
		private GameObject card44a;
		private GameObject card44b;
		private GameObject card44c;
		private GameObject card45;
		private GameObject card45a;
		private GameObject card45b;
		private GameObject card45c;
		private GameObject card46;
		private GameObject card46a;
		private GameObject card46b;
		private GameObject card46c;
		private GameObject card47;
		private GameObject card47a;
		private GameObject card47b;
		private GameObject card47c;
		private GameObject card48;
		private GameObject card48a;
		private GameObject card48b;
		private GameObject card48c;
		private GameObject card49;
		private GameObject card49a;
		private GameObject card49b;
		private GameObject card49c;
		private GameObject card50;
		private GameObject card50a;
		private GameObject card50b;
		private GameObject card50c;
		private GameObject card51;
		private GameObject card51a;
		private GameObject card51b;
		private GameObject card51c;
		private GameObject card52;
		private GameObject card52a;
		private GameObject card52b;
		private GameObject card52c;
		private GameObject card53;
		private GameObject card53a;
		private GameObject card53b;
		private GameObject card53c;
		private GameObject card54;
		private GameObject card54a;
		private GameObject card54b;
		private GameObject card54c;
		private GameObject card55;
		private GameObject card55a;
		private GameObject card55b;
		private GameObject card55c;
		private GameObject card56;
		private GameObject card56a;
		private GameObject card56b;
		private GameObject card56c;
		private GameObject card57;
		private GameObject card57a;
		private GameObject card57b;
		private GameObject card57c;
		private GameObject card58;
		private GameObject card58a;
		private GameObject card58b;
		private GameObject card58c;
		private GameObject card59;
		private GameObject card59a;
		private GameObject card59b;
		private GameObject card59c;
		private GameObject card60;
		private GameObject card60a;
		private GameObject card60b;
		private GameObject card60c;
		
		private GameObject deck1Slot1;
		private GameObject deck1Slot2;
		private GameObject deck1Slot3;
		private GameObject deck1Slot4;
		private GameObject deck1Slot5;
		private GameObject deck1Slot6;
		private GameObject deck1Slot7;
		private GameObject deck1Slot8;
		private GameObject deck1Slot9;
		private GameObject deck1Slot10;
		private GameObject deck1Slot11;
		private GameObject deck1Slot12;
		private GameObject deck1Slot13;
		private GameObject deck1Slot14;
		private GameObject deck1Slot15;
		private GameObject deck1Slot16;
		private GameObject deck1Slot17;
		private GameObject deck1Slot18;
		private GameObject deck1Slot19;
		private GameObject deck1Slot20;
		private GameObject deck1Slot21;
		private GameObject deck1Slot22;
		private GameObject deck1Slot23;
		private GameObject deck1Slot24;
		private GameObject deck1Slot25;
		private GameObject deck1Slot26;
		private GameObject deck1Slot27;
		private GameObject deck1Slot28;
		private GameObject deck1Slot29;
		private GameObject deck1Slot30;
		private GameObject deck1Slot31;
		private GameObject deck1Slot32;
		private GameObject deck1Slot33;
		private GameObject deck1Slot34;
		private GameObject deck1Slot35;
		private GameObject deck1Slot36;
		private GameObject deck1Slot37;
		private GameObject deck1Slot38;
		private GameObject deck1Slot39;
		private GameObject deck1Slot40;
		private GameObject deck1Slot41;
		private GameObject deck1Slot42;
		private GameObject deck1Slot43;
		private GameObject deck1Slot44;
		private GameObject deck1Slot45;
		private GameObject deck1Slot46;
		private GameObject deck1Slot47;
		private GameObject deck1Slot48;
		private GameObject deck1Slot49;
		private GameObject deck1Slot50;
		private GameObject deck1Slot51;
		private GameObject deck1Slot52;
		private GameObject deck1Slot53;
		private GameObject deck1Slot54;
		private GameObject deck1Slot55;
		private GameObject deck1Slot56;
		private GameObject deck1Slot57;
		private GameObject deck1Slot58;
		private GameObject deck1Slot59;
		private GameObject deck1Slot60;
		
		private GameObject deck2Slot1;
		private GameObject deck2Slot2;
		private GameObject deck2Slot3;
		private GameObject deck2Slot4;
		private GameObject deck2Slot5;
		private GameObject deck2Slot6;
		private GameObject deck2Slot7;
		private GameObject deck2Slot8;
		private GameObject deck2Slot9;
		private GameObject deck2Slot10;
		private GameObject deck2Slot11;
		private GameObject deck2Slot12;
		private GameObject deck2Slot13;
		private GameObject deck2Slot14;
		private GameObject deck2Slot15;
		private GameObject deck2Slot16;
		private GameObject deck2Slot17;
		private GameObject deck2Slot18;
		private GameObject deck2Slot19;
		private GameObject deck2Slot20;
		private GameObject deck2Slot21;
		private GameObject deck2Slot22;
		private GameObject deck2Slot23;
		private GameObject deck2Slot24;
		private GameObject deck2Slot25;
		private GameObject deck2Slot26;
		private GameObject deck2Slot27;
		private GameObject deck2Slot28;
		private GameObject deck2Slot29;
		private GameObject deck2Slot30;
		private GameObject deck2Slot31;
		private GameObject deck2Slot32;
		private GameObject deck2Slot33;
		private GameObject deck2Slot34;
		private GameObject deck2Slot35;
		private GameObject deck2Slot36;
		private GameObject deck2Slot37;
		private GameObject deck2Slot38;
		private GameObject deck2Slot39;
		private GameObject deck2Slot40;
		private GameObject deck2Slot41;
		private GameObject deck2Slot42;
		private GameObject deck2Slot43;
		private GameObject deck2Slot44;
		private GameObject deck2Slot45;
		private GameObject deck2Slot46;
		private GameObject deck2Slot47;
		private GameObject deck2Slot48;
		private GameObject deck2Slot49;
		private GameObject deck2Slot50;
		private GameObject deck2Slot51;
		private GameObject deck2Slot52;
		private GameObject deck2Slot53;
		private GameObject deck2Slot54;
		private GameObject deck2Slot55;
		private GameObject deck2Slot56;
		private GameObject deck2Slot57;
		private GameObject deck2Slot58;
		private GameObject deck2Slot59;
		private GameObject deck2Slot60;
		
		private GameObject deck3Slot1;
		private GameObject deck3Slot2;
		private GameObject deck3Slot3;
		private GameObject deck3Slot4;
		private GameObject deck3Slot5;
		private GameObject deck3Slot6;
		private GameObject deck3Slot7;
		private GameObject deck3Slot8;
		private GameObject deck3Slot9;
		private GameObject deck3Slot10;
		private GameObject deck3Slot11;
		private GameObject deck3Slot12;
		private GameObject deck3Slot13;
		private GameObject deck3Slot14;
		private GameObject deck3Slot15;
		private GameObject deck3Slot16;
		private GameObject deck3Slot17;
		private GameObject deck3Slot18;
		private GameObject deck3Slot19;
		private GameObject deck3Slot20;
		private GameObject deck3Slot21;
		private GameObject deck3Slot22;
		private GameObject deck3Slot23;
		private GameObject deck3Slot24;
		private GameObject deck3Slot25;
		private GameObject deck3Slot26;
		private GameObject deck3Slot27;
		private GameObject deck3Slot28;
		private GameObject deck3Slot29;
		private GameObject deck3Slot30;
		private GameObject deck3Slot31;
		private GameObject deck3Slot32;
		private GameObject deck3Slot33;
		private GameObject deck3Slot34;
		private GameObject deck3Slot35;
		private GameObject deck3Slot36;
		private GameObject deck3Slot37;
		private GameObject deck3Slot38;
		private GameObject deck3Slot39;
		private GameObject deck3Slot40;
		private GameObject deck3Slot41;
		private GameObject deck3Slot42;
		private GameObject deck3Slot43;
		private GameObject deck3Slot44;
		private GameObject deck3Slot45;
		private GameObject deck3Slot46;
		private GameObject deck3Slot47;
		private GameObject deck3Slot48;
		private GameObject deck3Slot49;
		private GameObject deck3Slot50;
		private GameObject deck3Slot51;
		private GameObject deck3Slot52;
		private GameObject deck3Slot53;
		private GameObject deck3Slot54;
		private GameObject deck3Slot55;
		private GameObject deck3Slot56;
		private GameObject deck3Slot57;
		private GameObject deck3Slot58;
		private GameObject deck3Slot59;
		private GameObject deck3Slot60;
		
		#endregion
		
		void Awake(){
			
			if(deckManager == null){

				DontDestroyOnLoad(gameObject);
				deckManager = this;
			
			}else if(deckManager != this){
			
				Destroy(gameObject);

			}
			
			
			spawnPointList = GameObject.Find("PanelWithDeckSlots");
			inputFieldSwitcher1 = GameObject.Find("InputFieldSwitcher1");
			inputFieldSwitcher2 = GameObject.Find("InputFieldSwitcher2");
			inputFieldSwitcher3 = GameObject.Find("InputFieldSwitcher3");
			tipText = GameObject.Find("TipText");
			deckSize = GameObject.Find("DeckSize");
			
			#region FindStuff definition
			
			card1 = GameObject.Find("Card1");
			card1a = GameObject.Find("Card1a");
			card1b = GameObject.Find("Card1b");
			card1c = GameObject.Find("Card1c");
			card2 = GameObject.Find("Card2");
			card2a = GameObject.Find("Card2a");
			card2b = GameObject.Find("Card2b");
			card2c = GameObject.Find("Card2c");
			card3 = GameObject.Find("Card3");
			card3a = GameObject.Find("Card3a");
			card3b = GameObject.Find("Card3b");
			card3c = GameObject.Find("Card3c");
			card4 = GameObject.Find("Card4");
			card4a = GameObject.Find("Card4a");
			card4b = GameObject.Find("Card4b");
			card4c = GameObject.Find("Card4c");
			card5 = GameObject.Find("Card5");
			card5a = GameObject.Find("Card5a");
			card5b = GameObject.Find("Card5b");
			card5c = GameObject.Find("Card5c");
			card6 = GameObject.Find("Card6");
			card6a = GameObject.Find("Card6a");
			card6b = GameObject.Find("Card6b");
			card6c = GameObject.Find("Card6c");
			card7 = GameObject.Find("Card7");
			card7a = GameObject.Find("Card7a");
			card7b = GameObject.Find("Card7b");
			card7c = GameObject.Find("Card7c");
			card8 = GameObject.Find("Card8");
			card8a = GameObject.Find("Card8a");
			card8b = GameObject.Find("Card8b");
			card8c = GameObject.Find("Card8c");
			card9 = GameObject.Find("Card9");
			card9a = GameObject.Find("Card9a");
			card9b = GameObject.Find("Card9b");
			card9c = GameObject.Find("Card9c");
			card10 = GameObject.Find("Card10");
			card10a = GameObject.Find("Card10a");
			card10b = GameObject.Find("Card10b");
			card10c = GameObject.Find("Card10c");
			card11 = GameObject.Find("Card11");
			card11a = GameObject.Find("Card11a");
			card11b = GameObject.Find("Card11b");
			card11c = GameObject.Find("Card11c");
			card12 = GameObject.Find("Card12");
			card12a = GameObject.Find("Card12a");
			card12b = GameObject.Find("Card12b");
			card12c = GameObject.Find("Card12c");
			card13 = GameObject.Find("Card13");
			card13a = GameObject.Find("Card13a");
			card13b = GameObject.Find("Card13b");
			card13c = GameObject.Find("Card13c");
			card14 = GameObject.Find("Card14");
			card14a = GameObject.Find("Card14a");
			card14b = GameObject.Find("Card14b");
			card14c = GameObject.Find("Card14c");
			card15 = GameObject.Find("Card15");
			card15a = GameObject.Find("Card15a");
			card15b = GameObject.Find("Card15b");
			card15c = GameObject.Find("Card15c");
			card16 = GameObject.Find("Card16");
			card16a = GameObject.Find("Card16a");
			card16b = GameObject.Find("Card16b");
			card16c = GameObject.Find("Card16c");
			card17 = GameObject.Find("Card17");
			card17a = GameObject.Find("Card17a");
			card17b = GameObject.Find("Card17b");
			card17c = GameObject.Find("Card17c");
			card18 = GameObject.Find("Card18");
			card18a = GameObject.Find("Card18a");
			card18b = GameObject.Find("Card18b");
			card18c = GameObject.Find("Card18c");
			card19 = GameObject.Find("Card19");
			card19a = GameObject.Find("Card19a");
			card19b = GameObject.Find("Card19b");
			card19c = GameObject.Find("Card19c");
			card20 = GameObject.Find("Card20");
			card20a = GameObject.Find("Card20a");
			card20b = GameObject.Find("Card20b");
			card20c = GameObject.Find("Card20c");
			card21 = GameObject.Find("Card21");
			card21a = GameObject.Find("Card21a");
			card21b = GameObject.Find("Card21b");
			card21c = GameObject.Find("Card21c");
			card22 = GameObject.Find("Card22");
			card22a = GameObject.Find("Card22a");
			card22b = GameObject.Find("Card22b");
			card22c = GameObject.Find("Card22c");
			card23 = GameObject.Find("Card23");
			card23a = GameObject.Find("Card23a");
			card23b = GameObject.Find("Card23b");
			card23c = GameObject.Find("Card23c");
			card24 = GameObject.Find("Card24");
			card24a = GameObject.Find("Card24a");
			card24b = GameObject.Find("Card24b");
			card24c = GameObject.Find("Card24c");
			card25 = GameObject.Find("Card25");
			card25a = GameObject.Find("Card25a");
			card25b = GameObject.Find("Card25b");
			card25c = GameObject.Find("Card25c");
			card26 = GameObject.Find("Card26");
			card26a = GameObject.Find("Card26a");
			card26b = GameObject.Find("Card26b");
			card26c = GameObject.Find("Card26c");
			card27 = GameObject.Find("Card27");
			card27a = GameObject.Find("Card27a");
			card27b = GameObject.Find("Card27b");
			card27c = GameObject.Find("Card27c");
			card28 = GameObject.Find("Card28");
			card28a = GameObject.Find("Card28a");
			card28b = GameObject.Find("Card28b");
			card28c = GameObject.Find("Card28c");
			card29 = GameObject.Find("Card29");
			card29a = GameObject.Find("Card29a");
			card29b = GameObject.Find("Card29b");
			card29c = GameObject.Find("Card29c");
			card30 = GameObject.Find("Card30");
			card30a = GameObject.Find("Card30a");
			card30b = GameObject.Find("Card30b");
			card30c = GameObject.Find("Card30c");
			card31 = GameObject.Find("Card31");
			card31a = GameObject.Find("Card31a");
			card31b = GameObject.Find("Card31b");
			card31c = GameObject.Find("Card31c");
			card32 = GameObject.Find("Card32");
			card32a = GameObject.Find("Card32a");
			card32b = GameObject.Find("Card32b");
			card32c = GameObject.Find("Card32c");
			card33 = GameObject.Find("Card33");
			card33a = GameObject.Find("Card33a");
			card33b = GameObject.Find("Card33b");
			card33c = GameObject.Find("Card33c");
			card34 = GameObject.Find("Card34");
			card34a = GameObject.Find("Card34a");
			card34b = GameObject.Find("Card34b");
			card34c = GameObject.Find("Card34c");
			card35 = GameObject.Find("Card35");
			card35a = GameObject.Find("Card35a");
			card35b = GameObject.Find("Card35b");
			card35c = GameObject.Find("Card35c");
			card36 = GameObject.Find("Card36");
			card36a = GameObject.Find("Card36a");
			card36b = GameObject.Find("Card36b");
			card36c = GameObject.Find("Card36c");
			card37 = GameObject.Find("Card37");
			card37a = GameObject.Find("Card37a");
			card37b = GameObject.Find("Card37b");
			card37c = GameObject.Find("Card37c");
			card38 = GameObject.Find("Card38");
			card38a = GameObject.Find("Card38a");
			card38b = GameObject.Find("Card38b");
			card38c = GameObject.Find("Card38c");
			card39 = GameObject.Find("Card39");
			card39a = GameObject.Find("Card39a");
			card39b = GameObject.Find("Card39b");
			card39c = GameObject.Find("Card39c");
			card40 = GameObject.Find("Card40");
			card40a = GameObject.Find("Card40a");
			card40b = GameObject.Find("Card40b");
			card40c = GameObject.Find("Card40c");
			card41 = GameObject.Find("Card41");
			card41a = GameObject.Find("Card41a");
			card41b = GameObject.Find("Card41b");
			card41c = GameObject.Find("Card41c");
			card42 = GameObject.Find("Card42");
			card42a = GameObject.Find("Card42a");
			card42b = GameObject.Find("Card42b");
			card42c = GameObject.Find("Card42c");
			card43 = GameObject.Find("Card43");
			card43a = GameObject.Find("Card43a");
			card43b = GameObject.Find("Card43b");
			card43c = GameObject.Find("Card43c");
			card44 = GameObject.Find("Card44");
			card44a = GameObject.Find("Card44a");
			card44b = GameObject.Find("Card44b");
			card44c = GameObject.Find("Card44c");
			card45 = GameObject.Find("Card45");
			card45a = GameObject.Find("Card45a");
			card45b = GameObject.Find("Card45b");
			card45c = GameObject.Find("Card45c");
			card46 = GameObject.Find("Card46");
			card46a = GameObject.Find("Card46a");
			card46b = GameObject.Find("Card46b");
			card46c = GameObject.Find("Card46c");
			card47 = GameObject.Find("Card47");
			card47a = GameObject.Find("Card47a");
			card47b = GameObject.Find("Card47b");
			card47c = GameObject.Find("Card47c");
			card48 = GameObject.Find("Card48");
			card48a = GameObject.Find("Card48a");
			card48b = GameObject.Find("Card48b");
			card48c = GameObject.Find("Card48c");
			card49 = GameObject.Find("Card49");
			card49a = GameObject.Find("Card49a");
			card49b = GameObject.Find("Card49b");
			card49c = GameObject.Find("Card49c");
			card50 = GameObject.Find("Card50");
			card50a = GameObject.Find("Card50a");
			card50b = GameObject.Find("Card50b");
			card50c = GameObject.Find("Card50c");
			card51 = GameObject.Find("Card51");
			card51a = GameObject.Find("Card51a");
			card51b = GameObject.Find("Card51b");
			card51c = GameObject.Find("Card51c");
			card52 = GameObject.Find("Card52");
			card52a = GameObject.Find("Card52a");
			card52b = GameObject.Find("Card52b");
			card52c = GameObject.Find("Card52c");
			card53 = GameObject.Find("Card53");
			card53a = GameObject.Find("Card53a");
			card53b = GameObject.Find("Card53b");
			card53c = GameObject.Find("Card53c");
			card54 = GameObject.Find("Card54");
			card54a = GameObject.Find("Card54a");
			card54b = GameObject.Find("Card54b");
			card54c = GameObject.Find("Card54c");
			card55 = GameObject.Find("Card55");
			card55a = GameObject.Find("Card55a");
			card55b = GameObject.Find("Card55b");
			card55c = GameObject.Find("Card55c");
			card56 = GameObject.Find("Card56");
			card56a = GameObject.Find("Card56a");
			card56b = GameObject.Find("Card56b");
			card56c = GameObject.Find("Card56c");
			card57 = GameObject.Find("Card57");
			card57a = GameObject.Find("Card57a");
			card57b = GameObject.Find("Card57b");
			card57c = GameObject.Find("Card57c");
			card58 = GameObject.Find("Card58");
			card58a = GameObject.Find("Card58a");
			card58b = GameObject.Find("Card58b");
			card58c = GameObject.Find("Card58c");
			card59 = GameObject.Find("Card59");
			card59a = GameObject.Find("Card59a");
			card59b = GameObject.Find("Card59b");
			card59c = GameObject.Find("Card59c");
			card60 = GameObject.Find("Card60");
			card60a = GameObject.Find("Card60a");
			card60b = GameObject.Find("Card60b");
			card60c = GameObject.Find("Card60c");
			
			
			deck1Slot1 = GameObject.Find("Deck1Slot1");
			deck1Slot2 = GameObject.Find("Deck1Slot2");
			deck1Slot3 = GameObject.Find("Deck1Slot3");
			deck1Slot4 = GameObject.Find("Deck1Slot4");
			deck1Slot5 = GameObject.Find("Deck1Slot5");
			deck1Slot6 = GameObject.Find("Deck1Slot6");
			deck1Slot7 = GameObject.Find("Deck1Slot7");
			deck1Slot8 = GameObject.Find("Deck1Slot8");
			deck1Slot9 = GameObject.Find("Deck1Slot9");
			deck1Slot10 = GameObject.Find("Deck1Slot10");
			deck1Slot11 = GameObject.Find("Deck1Slot11");
			deck1Slot12 = GameObject.Find("Deck1Slot12");
			deck1Slot13 = GameObject.Find("Deck1Slot13");
			deck1Slot14 = GameObject.Find("Deck1Slot14");
			deck1Slot15 = GameObject.Find("Deck1Slot15");
			deck1Slot16 = GameObject.Find("Deck1Slot16");
			deck1Slot17 = GameObject.Find("Deck1Slot17");
			deck1Slot18 = GameObject.Find("Deck1Slot18");
			deck1Slot19 = GameObject.Find("Deck1Slot19");
			deck1Slot20 = GameObject.Find("Deck1Slot20");
			deck1Slot21 = GameObject.Find("Deck1Slot21");
			deck1Slot22 = GameObject.Find("Deck1Slot22");
			deck1Slot23 = GameObject.Find("Deck1Slot23");
			deck1Slot24 = GameObject.Find("Deck1Slot24");
			deck1Slot25 = GameObject.Find("Deck1Slot25");
			deck1Slot26 = GameObject.Find("Deck1Slot26");
			deck1Slot27 = GameObject.Find("Deck1Slot27");
			deck1Slot28 = GameObject.Find("Deck1Slot28");
			deck1Slot29 = GameObject.Find("Deck1Slot29");
			deck1Slot30 = GameObject.Find("Deck1Slot30");
			deck1Slot31 = GameObject.Find("Deck1Slot31");
			deck1Slot32 = GameObject.Find("Deck1Slot32");
			deck1Slot33 = GameObject.Find("Deck1Slot33");
			deck1Slot34 = GameObject.Find("Deck1Slot34");
			deck1Slot35 = GameObject.Find("Deck1Slot35");
			deck1Slot36 = GameObject.Find("Deck1Slot36");
			deck1Slot37 = GameObject.Find("Deck1Slot37");
			deck1Slot38 = GameObject.Find("Deck1Slot38");
			deck1Slot39 = GameObject.Find("Deck1Slot39");
			deck1Slot40 = GameObject.Find("Deck1Slot40");
			deck1Slot41 = GameObject.Find("Deck1Slot41");
			deck1Slot42 = GameObject.Find("Deck1Slot42");
			deck1Slot43 = GameObject.Find("Deck1Slot43");
			deck1Slot44 = GameObject.Find("Deck1Slot44");
			deck1Slot45 = GameObject.Find("Deck1Slot45");
			deck1Slot46 = GameObject.Find("Deck1Slot46");
			deck1Slot47 = GameObject.Find("Deck1Slot47");
			deck1Slot48 = GameObject.Find("Deck1Slot48");
			deck1Slot49 = GameObject.Find("Deck1Slot49");
			deck1Slot50 = GameObject.Find("Deck1Slot50");
			deck1Slot51 = GameObject.Find("Deck1Slot51");
			deck1Slot52 = GameObject.Find("Deck1Slot52");
			deck1Slot53 = GameObject.Find("Deck1Slot53");
			deck1Slot54 = GameObject.Find("Deck1Slot54");
			deck1Slot55 = GameObject.Find("Deck1Slot55");
			deck1Slot56 = GameObject.Find("Deck1Slot56");
			deck1Slot57 = GameObject.Find("Deck1Slot57");
			deck1Slot58 = GameObject.Find("Deck1Slot58");
			deck1Slot59 = GameObject.Find("Deck1Slot59");
			deck1Slot60 = GameObject.Find("Deck1Slot60");
			
			deck2Slot1 = GameObject.Find("Deck2Slot1");
			deck2Slot2 = GameObject.Find("Deck2Slot2");
			deck2Slot3 = GameObject.Find("Deck2Slot3");
			deck2Slot4 = GameObject.Find("Deck2Slot4");
			deck2Slot5 = GameObject.Find("Deck2Slot5");
			deck2Slot6 = GameObject.Find("Deck2Slot6");
			deck2Slot7 = GameObject.Find("Deck2Slot7");
			deck2Slot8 = GameObject.Find("Deck2Slot8");
			deck2Slot9 = GameObject.Find("Deck2Slot9");
			deck2Slot10 = GameObject.Find("Deck2Slot10");
			deck2Slot11 = GameObject.Find("Deck1Slot11");
			deck2Slot12 = GameObject.Find("Deck1Slot12");
			deck2Slot13 = GameObject.Find("Deck1Slot13");
			deck2Slot14 = GameObject.Find("Deck1Slot14");
			deck2Slot15 = GameObject.Find("Deck1Slot15");
			deck2Slot16 = GameObject.Find("Deck1Slot16");
			deck2Slot17 = GameObject.Find("Deck1Slot17");
			deck2Slot18 = GameObject.Find("Deck1Slot18");
			deck2Slot19 = GameObject.Find("Deck1Slot19");
			deck2Slot20 = GameObject.Find("Deck1Slot20");
			deck2Slot21 = GameObject.Find("Deck1Slot21");
			deck2Slot22 = GameObject.Find("Deck1Slot22");
			deck2Slot23 = GameObject.Find("Deck1Slot23");
			deck2Slot24 = GameObject.Find("Deck1Slot24");
			deck2Slot25 = GameObject.Find("Deck1Slot25");
			deck2Slot26 = GameObject.Find("Deck1Slot26");
			deck2Slot27 = GameObject.Find("Deck1Slot27");
			deck2Slot28 = GameObject.Find("Deck1Slot28");
			deck2Slot29 = GameObject.Find("Deck1Slot29");
			deck2Slot30 = GameObject.Find("Deck1Slot30");
			deck2Slot31 = GameObject.Find("Deck1Slot31");
			deck2Slot32 = GameObject.Find("Deck1Slot32");
			deck2Slot33 = GameObject.Find("Deck1Slot33");
			deck2Slot34 = GameObject.Find("Deck1Slot34");
			deck2Slot35 = GameObject.Find("Deck1Slot35");
			deck2Slot36 = GameObject.Find("Deck1Slot36");
			deck2Slot37 = GameObject.Find("Deck1Slot37");
			deck2Slot38 = GameObject.Find("Deck1Slot38");
			deck2Slot39 = GameObject.Find("Deck1Slot39");
			deck2Slot40 = GameObject.Find("Deck1Slot40");
			deck2Slot41 = GameObject.Find("Deck1Slot41");
			deck2Slot42 = GameObject.Find("Deck1Slot42");
			deck2Slot43 = GameObject.Find("Deck1Slot43");
			deck2Slot44 = GameObject.Find("Deck1Slot44");
			deck2Slot45 = GameObject.Find("Deck1Slot45");
			deck2Slot46 = GameObject.Find("Deck1Slot46");
			deck2Slot47 = GameObject.Find("Deck1Slot47");
			deck2Slot48 = GameObject.Find("Deck1Slot48");
			deck2Slot49 = GameObject.Find("Deck1Slot49");
			deck2Slot50 = GameObject.Find("Deck1Slot50");
			deck2Slot51 = GameObject.Find("Deck1Slot51");
			deck2Slot52 = GameObject.Find("Deck1Slot52");
			deck2Slot53 = GameObject.Find("Deck1Slot53");
			deck2Slot54 = GameObject.Find("Deck1Slot54");
			deck2Slot55 = GameObject.Find("Deck1Slot55");
			deck2Slot56 = GameObject.Find("Deck1Slot56");
			deck2Slot57 = GameObject.Find("Deck1Slot57");
			deck2Slot58 = GameObject.Find("Deck1Slot58");
			deck2Slot59 = GameObject.Find("Deck1Slot59");
			deck2Slot60 = GameObject.Find("Deck1Slot60");
			
			deck3Slot1 = GameObject.Find("Deck3Slot1");
			deck3Slot2 = GameObject.Find("Deck3Slot2");
			deck3Slot3 = GameObject.Find("Deck3Slot3");
			deck3Slot4 = GameObject.Find("Deck3Slot4");
			deck3Slot5 = GameObject.Find("Deck3Slot5");
			deck3Slot6 = GameObject.Find("Deck3Slot6");
			deck3Slot7 = GameObject.Find("Deck3Slot7");
			deck3Slot8 = GameObject.Find("Deck3Slot8");
			deck3Slot9 = GameObject.Find("Deck3Slot9");
			deck3Slot10 = GameObject.Find("Deck3Slot10");
			deck3Slot11 = GameObject.Find("Deck1Slot11");
			deck3Slot12 = GameObject.Find("Deck1Slot12");
			deck3Slot13 = GameObject.Find("Deck1Slot13");
			deck3Slot14 = GameObject.Find("Deck1Slot14");
			deck3Slot15 = GameObject.Find("Deck1Slot15");
			deck3Slot16 = GameObject.Find("Deck1Slot16");
			deck3Slot17 = GameObject.Find("Deck1Slot17");
			deck3Slot18 = GameObject.Find("Deck1Slot18");
			deck3Slot19 = GameObject.Find("Deck1Slot19");
			deck3Slot20 = GameObject.Find("Deck1Slot20");
			deck3Slot21 = GameObject.Find("Deck1Slot21");
			deck3Slot22 = GameObject.Find("Deck1Slot22");
			deck3Slot23 = GameObject.Find("Deck1Slot23");
			deck3Slot24 = GameObject.Find("Deck1Slot24");
			deck3Slot25 = GameObject.Find("Deck1Slot25");
			deck3Slot26 = GameObject.Find("Deck1Slot26");
			deck3Slot27 = GameObject.Find("Deck1Slot27");
			deck3Slot28 = GameObject.Find("Deck1Slot28");
			deck3Slot29 = GameObject.Find("Deck1Slot29");
			deck3Slot30 = GameObject.Find("Deck1Slot30");
			deck3Slot31 = GameObject.Find("Deck1Slot31");
			deck3Slot32 = GameObject.Find("Deck1Slot32");
			deck3Slot33 = GameObject.Find("Deck1Slot33");
			deck3Slot34 = GameObject.Find("Deck1Slot34");
			deck3Slot35 = GameObject.Find("Deck1Slot35");
			deck3Slot36 = GameObject.Find("Deck1Slot36");
			deck3Slot37 = GameObject.Find("Deck1Slot37");
			deck3Slot38 = GameObject.Find("Deck1Slot38");
			deck3Slot39 = GameObject.Find("Deck1Slot39");
			deck3Slot40 = GameObject.Find("Deck1Slot40");
			deck3Slot41 = GameObject.Find("Deck1Slot41");
			deck3Slot42 = GameObject.Find("Deck1Slot42");
			deck3Slot43 = GameObject.Find("Deck1Slot43");
			deck3Slot44 = GameObject.Find("Deck1Slot44");
			deck3Slot45 = GameObject.Find("Deck1Slot45");
			deck3Slot46 = GameObject.Find("Deck1Slot46");
			deck3Slot47 = GameObject.Find("Deck1Slot47");
			deck3Slot48 = GameObject.Find("Deck1Slot48");
			deck3Slot49 = GameObject.Find("Deck1Slot49");
			deck3Slot50 = GameObject.Find("Deck1Slot50");
			deck3Slot51 = GameObject.Find("Deck1Slot51");
			deck3Slot52 = GameObject.Find("Deck1Slot52");
			deck3Slot53 = GameObject.Find("Deck1Slot53");
			deck3Slot54 = GameObject.Find("Deck1Slot54");
			deck3Slot55 = GameObject.Find("Deck1Slot55");
			deck3Slot56 = GameObject.Find("Deck1Slot56");
			deck3Slot57 = GameObject.Find("Deck1Slot57");
			deck3Slot58 = GameObject.Find("Deck1Slot58");
			deck3Slot59 = GameObject.Find("Deck1Slot59");
			deck3Slot60 = GameObject.Find("Deck1Slot60");
			
		instancesCounterTextObject1 = GameObject.Find("Counter1");
		instancesCounterTextObject1a = GameObject.Find("Counter1a");
		instancesCounterTextObject1b = GameObject.Find("Counter1b");
		instancesCounterTextObject1c = GameObject.Find("Counter1c");
		instancesCounterTextObject2 = GameObject.Find("Counter2");
		instancesCounterTextObject2a = GameObject.Find("Counter2a");
		instancesCounterTextObject2b = GameObject.Find("Counter2b");
		instancesCounterTextObject2c = GameObject.Find("Counter2c");
		instancesCounterTextObject3 = GameObject.Find("Counter3");
		instancesCounterTextObject3a = GameObject.Find("Counter3a");
		instancesCounterTextObject3b = GameObject.Find("Counter3b");
		instancesCounterTextObject3c = GameObject.Find("Counter3c");
		instancesCounterTextObject4 = GameObject.Find("Counter4");
		instancesCounterTextObject4a = GameObject.Find("Counter4a");
		instancesCounterTextObject4b = GameObject.Find("Counter4b");
		instancesCounterTextObject4c = GameObject.Find("Counter4c");
		instancesCounterTextObject5 = GameObject.Find("Counter5");
		instancesCounterTextObject5a = GameObject.Find("Counter5a");
		instancesCounterTextObject5b = GameObject.Find("Counter5b");
		instancesCounterTextObject5c = GameObject.Find("Counter5c");
		instancesCounterTextObject6 = GameObject.Find("Counter6");
		instancesCounterTextObject6a = GameObject.Find("Counter6a");
		instancesCounterTextObject6b = GameObject.Find("Counter6b");
		instancesCounterTextObject6c = GameObject.Find("Counter6c");
		instancesCounterTextObject7 = GameObject.Find("Counter7");
		instancesCounterTextObject7a = GameObject.Find("Counter7a");
		instancesCounterTextObject7b = GameObject.Find("Counter7b");
		instancesCounterTextObject7c = GameObject.Find("Counter7c");
		instancesCounterTextObject8 = GameObject.Find("Counter8");
		instancesCounterTextObject8a = GameObject.Find("Counter8a");
		instancesCounterTextObject8b = GameObject.Find("Counter8b");
		instancesCounterTextObject8c = GameObject.Find("Counter8c");
		instancesCounterTextObject9 = GameObject.Find("Counter9");
		instancesCounterTextObject9a = GameObject.Find("Counter9a");
		instancesCounterTextObject9b = GameObject.Find("Counter9b");
		instancesCounterTextObject9c = GameObject.Find("Counter9c");
		instancesCounterTextObject10 = GameObject.Find("Counter10");
		instancesCounterTextObject10a = GameObject.Find("Counter10a");
		instancesCounterTextObject10b = GameObject.Find("Counter10b");
		instancesCounterTextObject10c = GameObject.Find("Counter10c");
		instancesCounterTextObject11 = GameObject.Find("Counter11");
		instancesCounterTextObject11a = GameObject.Find("Counter11a");
		instancesCounterTextObject11b = GameObject.Find("Counter11b");
		instancesCounterTextObject11c = GameObject.Find("Counter11c");
		instancesCounterTextObject12 = GameObject.Find("Counter12");
		instancesCounterTextObject12a = GameObject.Find("Counter12a");
		instancesCounterTextObject12b = GameObject.Find("Counter12b");
		instancesCounterTextObject12c = GameObject.Find("Counter12c");
		instancesCounterTextObject13 = GameObject.Find("Counter13");
		instancesCounterTextObject13a = GameObject.Find("Counter13a");
		instancesCounterTextObject13b = GameObject.Find("Counter13b");
		instancesCounterTextObject13c = GameObject.Find("Counter13c");
		instancesCounterTextObject14 = GameObject.Find("Counter14");
		instancesCounterTextObject14a = GameObject.Find("Counter14a");
		instancesCounterTextObject14b = GameObject.Find("Counter14b");
		instancesCounterTextObject14c = GameObject.Find("Counter14c");
		instancesCounterTextObject15 = GameObject.Find("Counter15");
		instancesCounterTextObject15a = GameObject.Find("Counter15a");
		instancesCounterTextObject15b = GameObject.Find("Counter15b");
		instancesCounterTextObject15c = GameObject.Find("Counter15c");
		instancesCounterTextObject16 = GameObject.Find("Counter16");
		instancesCounterTextObject16a = GameObject.Find("Counter16a");
		instancesCounterTextObject16b = GameObject.Find("Counter16b");
		instancesCounterTextObject16c = GameObject.Find("Counter16c");
		instancesCounterTextObject17 = GameObject.Find("Counter17");
		instancesCounterTextObject17a = GameObject.Find("Counter17a");
		instancesCounterTextObject17b = GameObject.Find("Counter17b");
		instancesCounterTextObject17c = GameObject.Find("Counter17c");
		instancesCounterTextObject18 = GameObject.Find("Counter18");
		instancesCounterTextObject18a = GameObject.Find("Counter18a");
		instancesCounterTextObject18b = GameObject.Find("Counter18b");
		instancesCounterTextObject18c = GameObject.Find("Counter18c");
		instancesCounterTextObject19 = GameObject.Find("Counter19");
		instancesCounterTextObject19a = GameObject.Find("Counter19a");
		instancesCounterTextObject19b = GameObject.Find("Counter19b");
		instancesCounterTextObject19c = GameObject.Find("Counter19c");
		instancesCounterTextObject20 = GameObject.Find("Counter20");
		instancesCounterTextObject20a = GameObject.Find("Counter20a");
		instancesCounterTextObject20b = GameObject.Find("Counter20b");
		instancesCounterTextObject20c = GameObject.Find("Counter20c");
		instancesCounterTextObject21 = GameObject.Find("Counter21");
		instancesCounterTextObject21a = GameObject.Find("Counter21a");
		instancesCounterTextObject21b = GameObject.Find("Counter21b");
		instancesCounterTextObject21c = GameObject.Find("Counter21c");
		instancesCounterTextObject22 = GameObject.Find("Counter22");
		instancesCounterTextObject22a = GameObject.Find("Counter22a");
		instancesCounterTextObject22b = GameObject.Find("Counter22b");
		instancesCounterTextObject22c = GameObject.Find("Counter22c");
		instancesCounterTextObject23 = GameObject.Find("Counter23");
		instancesCounterTextObject23a = GameObject.Find("Counter23a");
		instancesCounterTextObject23b = GameObject.Find("Counter23b");
		instancesCounterTextObject23c = GameObject.Find("Counter23c");
		instancesCounterTextObject24 = GameObject.Find("Counter24");
		instancesCounterTextObject24a = GameObject.Find("Counter24a");
		instancesCounterTextObject24b = GameObject.Find("Counter24b");
		instancesCounterTextObject24c = GameObject.Find("Counter24c");
		instancesCounterTextObject25 = GameObject.Find("Counter25");
		instancesCounterTextObject25a = GameObject.Find("Counter25a");
		instancesCounterTextObject25b = GameObject.Find("Counter25b");
		instancesCounterTextObject25c = GameObject.Find("Counter25c");
		instancesCounterTextObject26 = GameObject.Find("Counter26");
		instancesCounterTextObject26a = GameObject.Find("Counter26a");
		instancesCounterTextObject26b = GameObject.Find("Counter26b");
		instancesCounterTextObject26c = GameObject.Find("Counter26c");
		instancesCounterTextObject27 = GameObject.Find("Counter27");
		instancesCounterTextObject27a = GameObject.Find("Counter27a");
		instancesCounterTextObject27b = GameObject.Find("Counter27b");
		instancesCounterTextObject27c = GameObject.Find("Counter27c");
		instancesCounterTextObject28 = GameObject.Find("Counter28");
		instancesCounterTextObject28a = GameObject.Find("Counter28a");
		instancesCounterTextObject28b = GameObject.Find("Counter28b");
		instancesCounterTextObject28c = GameObject.Find("Counter28c");
		instancesCounterTextObject29 = GameObject.Find("Counter29");
		instancesCounterTextObject29a = GameObject.Find("Counter29a");
		instancesCounterTextObject29b = GameObject.Find("Counter29b");
		instancesCounterTextObject29c = GameObject.Find("Counter29c");
		instancesCounterTextObject30 = GameObject.Find("Counter30");
		instancesCounterTextObject30a = GameObject.Find("Counter30a");
		instancesCounterTextObject30b = GameObject.Find("Counter30b");
		instancesCounterTextObject30c = GameObject.Find("Counter30c");
		instancesCounterTextObject31 = GameObject.Find("Counter31");
		instancesCounterTextObject31a = GameObject.Find("Counter31a");
		instancesCounterTextObject31b = GameObject.Find("Counter31b");
		instancesCounterTextObject31c = GameObject.Find("Counter31c");
		instancesCounterTextObject32 = GameObject.Find("Counter32");
		instancesCounterTextObject32a = GameObject.Find("Counter32a");
		instancesCounterTextObject32b = GameObject.Find("Counter32b");
		instancesCounterTextObject32c = GameObject.Find("Counter32c");
		instancesCounterTextObject33 = GameObject.Find("Counter33");
		instancesCounterTextObject33a = GameObject.Find("Counter33a");
		instancesCounterTextObject33b = GameObject.Find("Counter33b");
		instancesCounterTextObject33c = GameObject.Find("Counter33c");
		instancesCounterTextObject34 = GameObject.Find("Counter34");
		instancesCounterTextObject34a = GameObject.Find("Counter34a");
		instancesCounterTextObject34b = GameObject.Find("Counter34b");
		instancesCounterTextObject34c = GameObject.Find("Counter34c");
		instancesCounterTextObject35 = GameObject.Find("Counter35");
		instancesCounterTextObject35a = GameObject.Find("Counter35a");
		instancesCounterTextObject35b = GameObject.Find("Counter35b");
		instancesCounterTextObject35c = GameObject.Find("Counter35c");
		instancesCounterTextObject36 = GameObject.Find("Counter36");
		instancesCounterTextObject36a = GameObject.Find("Counter36a");
		instancesCounterTextObject36b = GameObject.Find("Counter36b");
		instancesCounterTextObject36c = GameObject.Find("Counter36c");
		instancesCounterTextObject37 = GameObject.Find("Counter37");
		instancesCounterTextObject37a = GameObject.Find("Counter37a");
		instancesCounterTextObject37b = GameObject.Find("Counter37b");
		instancesCounterTextObject37c = GameObject.Find("Counter37c");
		instancesCounterTextObject38 = GameObject.Find("Counter38");
		instancesCounterTextObject38a = GameObject.Find("Counter38a");
		instancesCounterTextObject38b = GameObject.Find("Counter38b");
		instancesCounterTextObject38c = GameObject.Find("Counter38c");
		instancesCounterTextObject39 = GameObject.Find("Counter39");
		instancesCounterTextObject39a = GameObject.Find("Counter39a");
		instancesCounterTextObject39b = GameObject.Find("Counter39b");
		instancesCounterTextObject39c = GameObject.Find("Counter39c");
		instancesCounterTextObject40 = GameObject.Find("Counter40");
		instancesCounterTextObject40a = GameObject.Find("Counter40a");
		instancesCounterTextObject40b = GameObject.Find("Counter40b");
		instancesCounterTextObject40c = GameObject.Find("Counter40c");
		instancesCounterTextObject41 = GameObject.Find("Counter41");
		instancesCounterTextObject41a = GameObject.Find("Counter41a");
		instancesCounterTextObject41b = GameObject.Find("Counter41b");
		instancesCounterTextObject41c = GameObject.Find("Counter41c");
		instancesCounterTextObject42 = GameObject.Find("Counter42");
		instancesCounterTextObject42a = GameObject.Find("Counter42a");
		instancesCounterTextObject42b = GameObject.Find("Counter42b");
		instancesCounterTextObject42c = GameObject.Find("Counter42c");
		instancesCounterTextObject43 = GameObject.Find("Counter43");
		instancesCounterTextObject43a = GameObject.Find("Counter43a");
		instancesCounterTextObject43b = GameObject.Find("Counter43b");
		instancesCounterTextObject43c = GameObject.Find("Counter43c");
		instancesCounterTextObject44 = GameObject.Find("Counter44");
		instancesCounterTextObject44a = GameObject.Find("Counter44a");
		instancesCounterTextObject44b = GameObject.Find("Counter44b");
		instancesCounterTextObject44c = GameObject.Find("Counter44c");
		instancesCounterTextObject45 = GameObject.Find("Counter45");
		instancesCounterTextObject45a = GameObject.Find("Counter45a");
		instancesCounterTextObject45b = GameObject.Find("Counter45b");
		instancesCounterTextObject45c = GameObject.Find("Counter45c");
		instancesCounterTextObject46 = GameObject.Find("Counter46");
		instancesCounterTextObject46a = GameObject.Find("Counter46a");
		instancesCounterTextObject46b = GameObject.Find("Counter46b");
		instancesCounterTextObject46c = GameObject.Find("Counter46c");
		instancesCounterTextObject47 = GameObject.Find("Counter47");
		instancesCounterTextObject47a = GameObject.Find("Counter47a");
		instancesCounterTextObject47b = GameObject.Find("Counter47b");
		instancesCounterTextObject47c = GameObject.Find("Counter47c");
		instancesCounterTextObject48 = GameObject.Find("Counter48");
		instancesCounterTextObject48a = GameObject.Find("Counter48a");
		instancesCounterTextObject48b = GameObject.Find("Counter48b");
		instancesCounterTextObject48c = GameObject.Find("Counter48c");
		instancesCounterTextObject49 = GameObject.Find("Counter49");
		instancesCounterTextObject49a = GameObject.Find("Counter49a");
		instancesCounterTextObject49b = GameObject.Find("Counter49b");
		instancesCounterTextObject49c = GameObject.Find("Counter49c");
		instancesCounterTextObject50 = GameObject.Find("Counter50");
		instancesCounterTextObject50a = GameObject.Find("Counter50a");
		instancesCounterTextObject50b = GameObject.Find("Counter50b");
		instancesCounterTextObject50c = GameObject.Find("Counter50c");
		instancesCounterTextObject51 = GameObject.Find("Counter51");
		instancesCounterTextObject51a = GameObject.Find("Counter51a");
		instancesCounterTextObject51b = GameObject.Find("Counter51b");
		instancesCounterTextObject51c = GameObject.Find("Counter51c");
		instancesCounterTextObject52 = GameObject.Find("Counter52");
		instancesCounterTextObject52a = GameObject.Find("Counter52a");
		instancesCounterTextObject52b = GameObject.Find("Counter52b");
		instancesCounterTextObject52c = GameObject.Find("Counter52c");
		instancesCounterTextObject53 = GameObject.Find("Counter53");
		instancesCounterTextObject53a = GameObject.Find("Counter53a");
		instancesCounterTextObject53b = GameObject.Find("Counter53b");
		instancesCounterTextObject53c = GameObject.Find("Counter53c");
		instancesCounterTextObject54 = GameObject.Find("Counter54");
		instancesCounterTextObject54a = GameObject.Find("Counter54a");
		instancesCounterTextObject54b = GameObject.Find("Counter54b");
		instancesCounterTextObject54c = GameObject.Find("Counter54c");
		instancesCounterTextObject55 = GameObject.Find("Counter55");
		instancesCounterTextObject55a = GameObject.Find("Counter55a");
		instancesCounterTextObject55b = GameObject.Find("Counter55b");
		instancesCounterTextObject55c = GameObject.Find("Counter55c");
		instancesCounterTextObject56 = GameObject.Find("Counter56");
		instancesCounterTextObject56a = GameObject.Find("Counter56a");
		instancesCounterTextObject56b = GameObject.Find("Counter56b");
		instancesCounterTextObject56c = GameObject.Find("Counter56c");
		instancesCounterTextObject57 = GameObject.Find("Counter57");
		instancesCounterTextObject57a = GameObject.Find("Counter57a");
		instancesCounterTextObject57b = GameObject.Find("Counter57b");
		instancesCounterTextObject57c = GameObject.Find("Counter57c");
		instancesCounterTextObject58 = GameObject.Find("Counter58");
		instancesCounterTextObject58a = GameObject.Find("Counter58a");
		instancesCounterTextObject58b = GameObject.Find("Counter58b");
		instancesCounterTextObject58c = GameObject.Find("Counter58c");
		instancesCounterTextObject59 = GameObject.Find("Counter59");
		instancesCounterTextObject59a = GameObject.Find("Counter59a");
		instancesCounterTextObject59b = GameObject.Find("Counter59b");
		instancesCounterTextObject59c = GameObject.Find("Counter59c");
		instancesCounterTextObject60 = GameObject.Find("Counter60");
		instancesCounterTextObject60a = GameObject.Find("Counter60a");
		instancesCounterTextObject60b = GameObject.Find("Counter60b");
		instancesCounterTextObject60c = GameObject.Find("Counter60c");
		
		#endregion
			
		}
		
		// Use this for initialization
		void Start () {
			
			modelCardScale = new Vector3(2025.0f,200.0f,2040.0f);
			lockedCardScale = new Vector3(1525.0f,200.0f,1540.0f);
			normalCardScale = new Vector3(325.0f,200.0f,340.0f);
			centerPosition = new Vector3(0,0,0);
			numberOfCards = 1;
			numberOfInstances = 12;
			numberOfInstancesCounter = 4;
			inputFieldSwitcher1.SetActive(false);
			inputFieldSwitcher2.SetActive(false);
			inputFieldSwitcher3.SetActive(false);
			tipText.SetActive(false);
			deckSize.SetActive(false);
			
			#region StartStuff definition
			
			switcher1 = false;
			switcher2 = false;
			switcher3 = false;
			
			instances1 = 0;
			instances1a = 0;
			instances1b = 0;
			instances1c = 0;
			instances2 = 0;
			instances2a = 0;
			instances2b = 0;
			instances2c = 0;
			instances3 = 0;
			instances3a = 0;
			instances3b = 0;
			instances3c = 0;
			instances4 = 0;
			instances4a = 0;
			instances4b = 0;
			instances4c = 0;
			instances5 = 0;
			instances5a = 0;
			instances5b = 0;
			instances5c = 0;
			instances6 = 0;
			instances6a = 0;
			instances6b = 0;
			instances6c = 0;
			instances7 = 0;
			instances7a = 0;
			instances7b = 0;
			instances7c = 0;
			instances8 = 0;
			instances8a = 0;
			instances8b = 0;
			instances8c = 0;
			instances9 = 0;
			instances9a = 0;
			instances9b = 0;
			instances9c = 0;
			instances10 = 0;
			instances10a = 0;
			instances10b = 0;
			instances10c = 0;
			instances11 = 0;
			instances11a = 0;
			instances11b = 0;
			instances11c = 0;
			instances12 = 0;
			instances12a = 0;
			instances12b = 0;
			instances12c = 0;
			instances13 = 0;
			instances13a = 0;
			instances13b = 0;
			instances13c = 0;
			instances14 = 0;
			instances14a = 0;
			instances14b = 0;
			instances14c = 0;
			instances15 = 0;
			instances15a = 0;
			instances15b = 0;
			instances15c = 0;
			instances16 = 0;
			instances16a = 0;
			instances16b = 0;
			instances16c = 0;
			instances17 = 0;
			instances17a = 0;
			instances17b = 0;
			instances17c = 0;
			instances18 = 0;
			instances18a = 0;
			instances18b = 0;
			instances18c = 0;
			instances19 = 0;
			instances19a = 0;
			instances19b = 0;
			instances19c = 0;
			instances20 = 0;
			instances20a = 0;
			instances20b = 0;
			instances20c = 0;
			instances21 = 0;
			instances21a = 0;
			instances21b = 0;
			instances21c = 0;
			instances22 = 0;
			instances22a = 0;
			instances22b = 0;
			instances22c = 0;
			instances23 = 0;
			instances23a = 0;
			instances23b = 0;
			instances23c = 0;
			instances24 = 0;
			instances24a = 0;
			instances24b = 0;
			instances24c = 0;
			instances25 = 0;
			instances25a = 0;
			instances25b = 0;
			instances25c = 0;
			instances26 = 0;
			instances26a = 0;
			instances26b = 0;
			instances26c = 0;
			instances27 = 0;
			instances27a = 0;
			instances27b = 0;
			instances27c = 0;
			instances28 = 0;
			instances28a = 0;
			instances28b = 0;
			instances28c = 0;
			instances29 = 0;
			instances29a = 0;
			instances29b = 0;
			instances29c = 0;
			instances30 = 0;
			instances30a = 0;
			instances30b = 0;
			instances30c = 0;
			instances31 = 0;
			instances31a = 0;
			instances31b = 0;
			instances31c = 0;
			instances32 = 0;
			instances32a = 0;
			instances32b = 0;
			instances32c = 0;
			instances33 = 0;
			instances33a = 0;
			instances33b = 0;
			instances33c = 0;
			instances34 = 0;
			instances34a = 0;
			instances34b = 0;
			instances34c = 0;
			instances35 = 0;
			instances35a = 0;
			instances35b = 0;
			instances35c = 0;
			instances36 = 0;
			instances36a = 0;
			instances36b = 0;
			instances36c = 0;
			instances37 = 0;
			instances37a = 0;
			instances37b = 0;
			instances37c = 0;
			instances38 = 0;
			instances38a = 0;
			instances38b = 0;
			instances38c = 0;
			instances39 = 0;
			instances39a = 0;
			instances39b = 0;
			instances39c = 0;
			instances40 = 0;
			instances40a = 0;
			instances40b = 0;
			instances40c = 0;
			instances41 = 0;
			instances41a = 0;
			instances41b = 0;
			instances41c = 0;
			instances42 = 0;
			instances42a = 0;
			instances42b = 0;
			instances42c = 0;
			instances43 = 0;
			instances43a = 0;
			instances43b = 0;
			instances43c = 0;
			instances44 = 0;
			instances44a = 0;
			instances44b = 0;
			instances44c = 0;
			instances45 = 0;
			instances45a = 0;
			instances45b = 0;
			instances45c = 0;
			instances46 = 0;
			instances46a = 0;
			instances46b = 0;
			instances46c = 0;
			instances47 = 0;
			instances47a = 0;
			instances47b = 0;
			instances47c = 0;
			instances48 = 0;
			instances48a = 0;
			instances48b = 0;
			instances48c = 0;
			instances49 = 0;
			instances49a = 0;
			instances49b = 0;
			instances49c = 0;
			instances50 = 0;
			instances50a = 0;
			instances50b = 0;
			instances50c = 0;
			instances51 = 0;
			instances51a = 0;
			instances51b = 0;
			instances51c = 0;
			instances52 = 0;
			instances52a = 0;
			instances52b = 0;
			instances52c = 0;
			instances53 = 0;
			instances53a = 0;
			instances53b = 0;
			instances53c = 0;
			instances54 = 0;
			instances54a = 0;
			instances54b = 0;
			instances54c = 0;
			instances55 = 0;
			instances55a = 0;
			instances55b = 0;
			instances55c = 0;
			instances56 = 0;
			instances56a = 0;
			instances56b = 0;
			instances56c = 0;
			instances57 = 0;
			instances57a = 0;
			instances57b = 0;
			instances57c = 0;
			instances58 = 0;
			instances58a = 0;
			instances58b = 0;
			instances58c = 0;
			instances59 = 0;
			instances59a = 0;
			instances59b = 0;
			instances59c = 0;
			instances60 = 0;
			instances60a = 0;
			instances60b = 0;
			instances60c = 0;		
			
			
			/* instancesCounter1 = 0;
			instancesCounter1a = 0;
			instancesCounter1b = 0;
			instancesCounter1c = 0;
			instancesCounter2 = 0;
			instancesCounter2a = 0;
			instancesCounter2b = 0;
			instancesCounter2c = 0;
			instancesCounter3 = 0;
			instancesCounter3a = 0;
			instancesCounter3b = 0;
			instancesCounter3c = 0;
			instancesCounter4 = 0;
			instancesCounter4a = 0;
			instancesCounter4b = 0;
			instancesCounter4c = 0;
			instancesCounter5 = 0;
			instancesCounter5a = 0;
			instancesCounter5b = 0;
			instancesCounter5c = 0;
			instancesCounter6 = 0;
			instancesCounter6a = 0;
			instancesCounter6b = 0;
			instancesCounter6c = 0;
			instancesCounter7 = 0;
			instancesCounter7a = 0;
			instancesCounter7b = 0;
			instancesCounter7c = 0;
			instancesCounter8 = 0;
			instancesCounter8a = 0;
			instancesCounter8b = 0;
			instancesCounter8c = 0;
			instancesCounter9 = 0;
			instancesCounter9a = 0;
			instancesCounter9b = 0;
			instancesCounter9c = 0;
			instancesCounter10 = 0;
			instancesCounter10a = 0;
			instancesCounter10b = 0;
			instancesCounter10c = 0;
			instancesCounter11 = 0;
			instancesCounter11a = 0;
			instancesCounter11b = 0;
			instancesCounter11c = 0;
			instancesCounter12 = 0;
			instancesCounter12a = 0;
			instancesCounter12b = 0;
			instancesCounter12c = 0;
			instancesCounter13 = 0;
			instancesCounter13a = 0;
			instancesCounter13b = 0;
			instancesCounter13c = 0;
			instancesCounter14 = 0;
			instancesCounter14a = 0;
			instancesCounter14b = 0;
			instancesCounter14c = 0;
			instancesCounter15 = 0;
			instancesCounter15a = 0;
			instancesCounter15b = 0;
			instancesCounter15c = 0;
			instancesCounter16 = 0;
			instancesCounter16a = 0;
			instancesCounter16b = 0;
			instancesCounter16c = 0;
			instancesCounter17 = 0;
			instancesCounter17a = 0;
			instancesCounter17b = 0;
			instancesCounter17c = 0;
			instancesCounter18 = 0;
			instancesCounter18a = 0;
			instancesCounter18b = 0;
			instancesCounter18c = 0;
			instancesCounter19 = 0;
			instancesCounter19a = 0;
			instancesCounter19b = 0;
			instancesCounter19c = 0;
			instancesCounter20 = 0;
			instancesCounter20a = 0;
			instancesCounter20b = 0;
			instancesCounter20c = 0;
			instancesCounter21 = 0;
			instancesCounter21a = 0;
			instancesCounter21b = 0;
			instancesCounter21c = 0;
			instancesCounter22 = 0;
			instancesCounter22a = 0;
			instancesCounter22b = 0;
			instancesCounter22c = 0;
			instancesCounter23 = 0;
			instancesCounter23a = 0;
			instancesCounter23b = 0;
			instancesCounter23c = 0;
			instancesCounter24 = 0;
			instancesCounter24a = 0;
			instancesCounter24b = 0;
			instancesCounter24c = 0;
			instancesCounter25 = 0;
			instancesCounter25a = 0;
			instancesCounter25b = 0;
			instancesCounter25c = 0;
			instancesCounter26 = 0;
			instancesCounter26a = 0;
			instancesCounter26b = 0;
			instancesCounter26c = 0;
			instancesCounter27 = 0;
			instancesCounter27a = 0;
			instancesCounter27b = 0;
			instancesCounter27c = 0;
			instancesCounter28 = 0;
			instancesCounter28a = 0;
			instancesCounter28b = 0;
			instancesCounter28c = 0;
			instancesCounter29 = 0;
			instancesCounter29a = 0;
			instancesCounter29b = 0;
			instancesCounter29c = 0;
			instancesCounter30 = 0;
			instancesCounter30a = 0;
			instancesCounter30b = 0;
			instancesCounter30c = 0;
			instancesCounter31 = 0;
			instancesCounter31a = 0;
			instancesCounter31b = 0;
			instancesCounter31c = 0;
			instancesCounter32 = 0;
			instancesCounter32a = 0;
			instancesCounter32b = 0;
			instancesCounter32c = 0;
			instancesCounter33 = 0;
			instancesCounter33a = 0;
			instancesCounter33b = 0;
			instancesCounter33c = 0;
			instancesCounter34 = 0;
			instancesCounter34a = 0;
			instancesCounter34b = 0;
			instancesCounter34c = 0;
			instancesCounter35 = 0;
			instancesCounter35a = 0;
			instancesCounter35b = 0;
			instancesCounter35c = 0;
			instancesCounter36 = 0;
			instancesCounter36a = 0;
			instancesCounter36b = 0;
			instancesCounter36c = 0;
			instancesCounter37 = 0;
			instancesCounter37a = 0;
			instancesCounter37b = 0;
			instancesCounter37c = 0;
			instancesCounter38 = 0;
			instancesCounter38a = 0;
			instancesCounter38b = 0;
			instancesCounter38c = 0;
			instancesCounter39 = 0;
			instancesCounter39a = 0;
			instancesCounter39b = 0;
			instancesCounter39c = 0;
			instancesCounter40 = 0;
			instancesCounter40a = 0;
			instancesCounter40b = 0;
			instancesCounter40c = 0;
			instancesCounter41 = 0;
			instancesCounter41a = 0;
			instancesCounter41b = 0;
			instancesCounter41c = 0;
			instancesCounter42 = 0;
			instancesCounter42a = 0;
			instancesCounter42b = 0;
			instancesCounter42c = 0;
			instancesCounter43 = 0;
			instancesCounter43a = 0;
			instancesCounter43b = 0;
			instancesCounter43c = 0;
			instancesCounter44 = 0;
			instancesCounter44a = 0;
			instancesCounter44b = 0;
			instancesCounter44c = 0;
			instancesCounter45 = 0;
			instancesCounter45a = 0;
			instancesCounter45b = 0;
			instancesCounter45c = 0;
			instancesCounter46 = 0;
			instancesCounter46a = 0;
			instancesCounter46b = 0;
			instancesCounter46c = 0;
			instancesCounter47 = 0;
			instancesCounter47a = 0;
			instancesCounter47b = 0;
			instancesCounter47c = 0;
			instancesCounter48 = 0;
			instancesCounter48a = 0;
			instancesCounter48b = 0;
			instancesCounter48c = 0;
			instancesCounter49 = 0;
			instancesCounter49a = 0;
			instancesCounter49b = 0;
			instancesCounter49c = 0;
			instancesCounter50 = 0;
			instancesCounter50a = 0;
			instancesCounter50b = 0;
			instancesCounter50c = 0;
			instancesCounter51 = 0;
			instancesCounter51a = 0;
			instancesCounter51b = 0;
			instancesCounter51c = 0;
			instancesCounter52 = 0;
			instancesCounter52a = 0;
			instancesCounter52b = 0;
			instancesCounter52c = 0;
			instancesCounter53 = 0;
			instancesCounter53a = 0;
			instancesCounter53b = 0;
			instancesCounter53c = 0;
			instancesCounter54 = 0;
			instancesCounter54a = 0;
			instancesCounter54b = 0;
			instancesCounter54c = 0;
			instancesCounter55 = 0;
			instancesCounter55a = 0;
			instancesCounter55b = 0;
			instancesCounter55c = 0;
			instancesCounter56 = 0;
			instancesCounter56a = 0;
			instancesCounter56b = 0;
			instancesCounter56c = 0;
			instancesCounter57 = 0;
			instancesCounter57a = 0;
			instancesCounter57b = 0;
			instancesCounter57c = 0;
			instancesCounter58 = 0;
			instancesCounter58a = 0;
			instancesCounter58b = 0;
			instancesCounter58c = 0;
			instancesCounter59 = 0;
			instancesCounter59a = 0;
			instancesCounter59b = 0;
			instancesCounter59c = 0;
			instancesCounter60 = 0;
			instancesCounter60a = 0;
			instancesCounter60b = 0;
			instancesCounter60c = 0; */
			
			
		instancesCounterTextObject1.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject1a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject1b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject1c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject2.GetComponent<Text>().text = numberOfInstances.ToString();	
		instancesCounterTextObject2a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject2b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject2c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject3.GetComponent<Text>().text = numberOfInstances.ToString();	
		instancesCounterTextObject3a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject3b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject3c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject4.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject4a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject4b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject4c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject5.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject5a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject5b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject5c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject6.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject6a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject6b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject6c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject7.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject7a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject7b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject7c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject8.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject8a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject8b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject8c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject9.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject9a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject9b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject9c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject10.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject10a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject10b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject10c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject11.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject11a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject11b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject11c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject12.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject12a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject12b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject12c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject13.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject13a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject13b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject13c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject14.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject14a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject14b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject14c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject15.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject15a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject15b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject15c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject16.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject16a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject16b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject16c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject17.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject17a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject17b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject17c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject18.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject18a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject18b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject18c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject19.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject19a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject19b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject19c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject20.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject20a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject20b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject20c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject21.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject21a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject21b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject21c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject22.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject22a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject22b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject22c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject23.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject23a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject23b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject23c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject24.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject24a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject24b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject24c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject25.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject25a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject25b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject25c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject26.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject26a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject26b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject26c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject27.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject27a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject27b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject27c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject28.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject28a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject28b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject28c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject29.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject29a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject29b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject29c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject30.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject30a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject30b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject30c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject31.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject31a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject31b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject31c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject32.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject32a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject32b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject32c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject33.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject33a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject33b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject33c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject34.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject34a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject34b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject34c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject35.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject35a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject35b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject35c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject36.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject36a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject36b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject36c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject37.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject37a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject37b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject37c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject38.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject38a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject38b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject38c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject39.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject39a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject39b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject39c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject40.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject40a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject40b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject40c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject41.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject41a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject41b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject41c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject42.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject42a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject42b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject42c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject43.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject43a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject43b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject43c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject44.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject44a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject44b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject44c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject45.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject45a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject45b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject45c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject46.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject46a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject46b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject46c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject47.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject47a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject47b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject47c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject48.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject48a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject48b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject48c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject49.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject49a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject49b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject49c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject50.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject50a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject50b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject50c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject51.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject51a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject51b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject51c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject52.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject52a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject52b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject52c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject53.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject53a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject53b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject53c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject54.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject54a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject54b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject54c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject55.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject55a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject55b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject55c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject56.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject56a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject56b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject56c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject57.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject57a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject57b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject57c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject58.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject58a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject58b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject58c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject59.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject59a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject59b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject59c.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject60.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject60a.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject60b.GetComponent<Text>().text = numberOfInstances.ToString();
		instancesCounterTextObject60c.GetComponent<Text>().text = numberOfInstances.ToString();
			
		#endregion
		 
		}
		
		
		
		
		
		 
		// Update is called once per frame
		void Update () {
			
			if(switcher1 && Input.GetKeyDown(KeyCode.Mouse0)){
				
				SpawnCardsDeck1();
				
			}else if(switcher2 && Input.GetKeyDown(KeyCode.Mouse0)){
				
				SpawnCardsDeck2();
				
			}else if(switcher3 && Input.GetKeyDown(KeyCode.Mouse0)){
				
				SpawnCardsDeck3();
				
			}
			
		}
		
		
		void SpawnCardsDeck1(){
			
			
			/** Spawn cards for the decks */
			#region SpawnCardsStuff definition
			ray = Camera.main.ScreenPointToRay(Input.mousePosition);

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1 == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter1Deck1 < numberOfInstancesCounter){
									
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card1, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card1";
										card.AddComponent<OnDestroyCard1>();
										
										instances1++;
										instancesCounter1Deck1++;
										
										CardCounterManager.counter1++;
										CardCounterManager.CardCounter1();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
									
									
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1a == numberOfCards){
							instances1a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter1aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1a < numberOfCards) { 	
										GameObject card = Instantiate (card1a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card1a";
										card.AddComponent<OnDestroyCard1a>();
										
										instances1a++;
										instancesCounter1aDeck1++;
										
										CardCounterManager.counter1a++;
										CardCounterManager.CardCounter1a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
		
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1b == numberOfCards){
							instances1b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter1bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1b < numberOfCards) {	
										GameObject card = Instantiate (card1b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card1b";
										card.AddComponent<OnDestroyCard1b>();
										
										instances1b++;
										instancesCounter1bDeck1++;
										
										CardCounterManager.counter1b++;
										CardCounterManager.CardCounter1b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1c == numberOfCards){
							instances1c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter1cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1c < numberOfCards) {	
										GameObject card = Instantiate (card1c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card1c";
										card.AddComponent<OnDestroyCard1c>();
										
										instances1c++;
										instancesCounter1cDeck1++;
										
										CardCounterManager.counter1c++;
										CardCounterManager.CardCounter1c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			 
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances2 == numberOfCards){
							instances2 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter2Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances2 < numberOfCards) {
										
										GameObject card = Instantiate (card2, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card2";
										card.AddComponent<OnDestroyCard2>();
										
										instances2++;
										instancesCounter2Deck1++;
										
										CardCounterManager.counter2++;
										CardCounterManager.CardCounter2();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2a == numberOfCards){
							instances2a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter2aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances2a < numberOfCards) {	
										GameObject card = Instantiate (card2a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card2a";
										card.AddComponent<OnDestroyCard2a>();
										
										instances2a++;
										instancesCounter2aDeck1++;
										
										CardCounterManager.counter2a++;
										CardCounterManager.CardCounter2a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2b == numberOfCards){
							instances2b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter2bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances2b < numberOfCards) {	
										GameObject card = Instantiate (card2b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card2b";
										card.AddComponent<OnDestroyCard2b>();
										
										instances2b++;
										instancesCounter2bDeck1++;
										
										CardCounterManager.counter2b++;
										CardCounterManager.CardCounter2b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2c == numberOfCards){
							instances2c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter2cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances2c < numberOfCards) {	
										GameObject card = Instantiate (card2c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card2c";
										card.AddComponent<OnDestroyCard2c>();
										
										instances2c++;
										instancesCounter2cDeck1++;
										
										CardCounterManager.counter2c++;
										CardCounterManager.CardCounter2c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
		
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel3"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances3 == numberOfCards){
							instances3 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter3Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances3 < numberOfCards) {	
										GameObject card = Instantiate (card3, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card3";
										card.AddComponent<OnDestroyCard3>();
										
										instances3++;
										instancesCounter3Deck1++;
										
										CardCounterManager.counter3++;
										CardCounterManager.CardCounter3();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3a == numberOfCards){
							instances3a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter3aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances3a < numberOfCards) {	
										GameObject card = Instantiate (card3a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card3a";
										card.AddComponent<OnDestroyCard3a>();
										
										instances3a++;
										instancesCounter3aDeck1++;
										
										CardCounterManager.counter3a++;
										CardCounterManager.CardCounter3a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3b == numberOfCards){
							instances3b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter3bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances3b < numberOfCards) {	
										GameObject card = Instantiate (card3b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card3b";
										card.AddComponent<OnDestroyCard3b>();
										
										instances3b++;
										instancesCounter3bDeck1++;
										
										CardCounterManager.counter3b++;
										CardCounterManager.CardCounter3b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3c == numberOfCards){
							instances3c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter3cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances3c < numberOfCards) {	
										GameObject card = Instantiate (card3c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card3c";
										card.AddComponent<OnDestroyCard3c>();
										
										instances3c++;
										instancesCounter3cDeck1++;
										
										CardCounterManager.counter3c++;
										CardCounterManager.CardCounter3c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances4 == numberOfCards){
							instances4 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter4Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances4 < numberOfCards) {	
										GameObject card = Instantiate (card4, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card4";
										card.AddComponent<OnDestroyCard4>();
										
										instances4++;
										instancesCounter4Deck1++;
										
										CardCounterManager.counter4++;
										CardCounterManager.CardCounter4();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
		
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4a == numberOfCards){
							instances4a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter4aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances4a < numberOfCards) {	
										GameObject card = Instantiate (card4a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card4a";
										card.AddComponent<OnDestroyCard4a>();
										
										instances4a++;
										instancesCounter4aDeck1++;
										
										CardCounterManager.counter4a++;
										CardCounterManager.CardCounter4a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4b == numberOfCards){
							instances4b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter4bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card4b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card4b";
										card.AddComponent<OnDestroyCard4b>();
										
										instances4b++;
										instancesCounter4bDeck1++;
										
										CardCounterManager.counter4b++;
										CardCounterManager.CardCounter4b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4c == numberOfCards){
							instances4c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter4cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances4c < numberOfCards) {	
										GameObject card = Instantiate (card4c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card4c";
										card.AddComponent<OnDestroyCard4c>();
										
										instances4c++;
										instancesCounter4cDeck1++;
										
										CardCounterManager.counter4c++;
										CardCounterManager.CardCounter4c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
		
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances5 == numberOfCards){
							instances5 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter5Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances5 < numberOfCards) {	
										GameObject card = Instantiate (card5, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card5";
										card.AddComponent<OnDestroyCard5>();
										
										instances5++;
										instancesCounter5Deck1++;
										
										CardCounterManager.counter5++;
										CardCounterManager.CardCounter5();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5a == numberOfCards){
							instances5a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter5aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances5a < numberOfCards) {	
										GameObject card = Instantiate (card5a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card5a";
										card.AddComponent<OnDestroyCard5a>();
										
										instances5a++;
										instancesCounter5aDeck1++;
										
										CardCounterManager.counter5a++;
										CardCounterManager.CardCounter5a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5b == numberOfCards){
							instances5b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter5bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances5b < numberOfCards) {	
										GameObject card = Instantiate (card5b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card5b";
										card.AddComponent<OnDestroyCard5b>();
										
										instances5b++;
										instancesCounter5bDeck1++;
										
										CardCounterManager.counter5b++;
										CardCounterManager.CardCounter5b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5c == numberOfCards){
							instances5c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter5cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances5c < numberOfCards) {	
										GameObject card = Instantiate (card5c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card5c";
										card.AddComponent<OnDestroyCard5c>();
										
										instances5c++;
										instancesCounter5cDeck1++;
										
										CardCounterManager.counter5c++;
										CardCounterManager.CardCounter5c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances6 == numberOfCards){
							instances6 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter6Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances6 < numberOfCards) {	
										GameObject card = Instantiate (card6, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card6";
										card.AddComponent<OnDestroyCard6>();
										
										instances6++;
										instancesCounter6Deck1++;
										
										CardCounterManager.counter6++;
										CardCounterManager.CardCounter6();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
		
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6a == numberOfCards){
							instances6a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter6aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances6a < numberOfCards) {	
										GameObject card = Instantiate (card6a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card6a";
										card.AddComponent<OnDestroyCard6a>();
										
										instances6a++;
										instancesCounter6aDeck1++;
										
										CardCounterManager.counter6a++;
										CardCounterManager.CardCounter6a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6b == numberOfCards){
							instances6b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter6bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances6b < numberOfCards) {	
										GameObject card = Instantiate (card6b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card6b";
										card.AddComponent<OnDestroyCard6b>();
										
										instances6b++;
										instancesCounter6bDeck1++;
										
										CardCounterManager.counter6b++;
										CardCounterManager.CardCounter6b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6c == numberOfCards){
							instances6c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter6cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card6c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card6c";
										card.AddComponent<OnDestroyCard6c>();
										
										instances6c++;
										instancesCounter6cDeck1++;
										
										CardCounterManager.counter6c++;
										CardCounterManager.CardCounter6c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances7 == numberOfCards){
							instances7 = 0;
						}
					
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter7Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances7 < numberOfCards) {	
										GameObject card = Instantiate (card7, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card7";
										card.AddComponent<OnDestroyCard7>();
										
										instances7++;
										instancesCounter7Deck1++;
										
										CardCounterManager.counter7++;
										CardCounterManager.CardCounter7();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
			
							}
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7a == numberOfCards){
							instances7a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter7aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances7a < numberOfCards) {	
										GameObject card = Instantiate (card7a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card7a";
										card.AddComponent<OnDestroyCard7a>();
										
										instances7a++;
										instancesCounter7aDeck1++;
										
										CardCounterManager.counter7a++;
										CardCounterManager.CardCounter7a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7b == numberOfCards){
							instances7b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter7bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances7b < numberOfCards) {	
										GameObject card = Instantiate (card7b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card7b";
										card.AddComponent<OnDestroyCard7b>();
										
										instances7b++;
										instancesCounter7bDeck1++;
										
										CardCounterManager.counter7b++;
										CardCounterManager.CardCounter7b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7c == numberOfCards){
							instances7c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter7cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances7c < numberOfCards) {	
										GameObject card = Instantiate (card7c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card7c";
										card.AddComponent<OnDestroyCard7c>();
										
										instances7c++;
										instancesCounter7cDeck1++;
										
										CardCounterManager.counter7c++;
										CardCounterManager.CardCounter7c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances8 == numberOfCards){
							instances8 = 0;
						}
					
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter8Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances8 < numberOfCards) {	
										GameObject card = Instantiate (card8, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card8";
										card.AddComponent<OnDestroyCard8>();
										
										instances8++;
										instancesCounter8Deck1++;
										
										CardCounterManager.counter8++;
										CardCounterManager.CardCounter8();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
							
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8a == numberOfCards){
							instances8a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter8aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances8a < numberOfCards) {	
										GameObject card = Instantiate (card8a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card8a";
										card.AddComponent<OnDestroyCard8a>();
										
										instances8a++;
										instancesCounter8aDeck1++;
										
										CardCounterManager.counter8a++;
										CardCounterManager.CardCounter8a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
		
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8b == numberOfCards){
							instances8b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter8bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances8b < numberOfCards) {	
										GameObject card = Instantiate (card8b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card8b";
										card.AddComponent<OnDestroyCard8b>();
										
										instances8b++;
										instancesCounter8bDeck1++;
										
										CardCounterManager.counter8b++;
										CardCounterManager.CardCounter8b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8c == numberOfCards){
							instances8c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter8cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances8c < numberOfCards) {	
										GameObject card = Instantiate (card8c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card8c";
										card.AddComponent<OnDestroyCard8c>();
										
										instances8c++;
										instancesCounter8cDeck1++;
										
										CardCounterManager.counter8c++;
										CardCounterManager.CardCounter8c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel9"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances9 == numberOfCards){
							instances9 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter9Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances9 < numberOfCards) {	
										GameObject card = Instantiate (card9, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card9";
										card.AddComponent<OnDestroyCard9>();
										
										instances9++;
										instancesCounter9Deck1++;
										
										CardCounterManager.counter9++;
										CardCounterManager.CardCounter9();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9a == numberOfCards){
							instances9a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter9aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances9a < numberOfCards) {	
										GameObject card = Instantiate (card9a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card9a";
										card.AddComponent<OnDestroyCard9a>();
										
										instances9a++;
										instancesCounter9aDeck1++;
										
										CardCounterManager.counter9a++;
										CardCounterManager.CardCounter9a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9b == numberOfCards){
							instances9b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter9bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances9b < numberOfCards) {	
										GameObject card = Instantiate (card9b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card9b";
										card.AddComponent<OnDestroyCard9b>();
										
										instances9b++;
										instancesCounter9bDeck1++;
										
										CardCounterManager.counter9b++;
										CardCounterManager.CardCounter9b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9c == numberOfCards){
							instances9c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter9cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances9c < numberOfCards) {	
										GameObject card = Instantiate (card9c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card9c";
										card.AddComponent<OnDestroyCard9c>();
										
										instances9c++;
										instancesCounter9cDeck1++;
										
										CardCounterManager.counter9c++;
										CardCounterManager.CardCounter9c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances10 == numberOfCards){
							instances10 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter10Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances10 < numberOfCards) {	
										GameObject card = Instantiate (card10, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card10";
										card.AddComponent<OnDestroyCard10>();
										
										instances10++;
										instancesCounter10Deck1++;
										
										CardCounterManager.counter10++;
										CardCounterManager.CardCounter10();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10a == numberOfCards){
							instances10a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter10aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances10a < numberOfCards) {	
										GameObject card = Instantiate (card10a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card10a";
										card.AddComponent<OnDestroyCard10a>();
										
										instances10a++;
										instancesCounter10aDeck1++;
										
										CardCounterManager.counter10a++;
										CardCounterManager.CardCounter10a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10b == numberOfCards){
							instances10b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter10bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances10b < numberOfCards) {	
										GameObject card = Instantiate (card10b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card10b";
										card.AddComponent<OnDestroyCard10b>();
										
										instances10b++;
										instancesCounter10bDeck1++;
										
										CardCounterManager.counter10b++;
										CardCounterManager.CardCounter10b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10c == numberOfCards){
							instances10c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter10cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances10c < numberOfCards) {	
										GameObject card = Instantiate (card10c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card10c";
										card.AddComponent<OnDestroyCard10c>();
										
										instances10c++;
										instancesCounter10cDeck1++;
										
										CardCounterManager.counter10c++;
										CardCounterManager.CardCounter10c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel11"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances11 == numberOfCards){
							instances11 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter11Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances11 < numberOfCards) {	
										GameObject card = Instantiate (card11, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card11";
										card.AddComponent<OnDestroyCard11>();
										
										instances11++;
										instancesCounter11Deck1++;
										
										CardCounterManager.counter11++;
										CardCounterManager.CardCounter11();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
					
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11a == numberOfCards){
							instances11a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter11aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances11a < numberOfCards) {	
										GameObject card = Instantiate (card11a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card11a";
										card.AddComponent<OnDestroyCard11a>();
										
										instances11a++;
										instancesCounter11aDeck1++;
										
										CardCounterManager.counter11a++;
										CardCounterManager.CardCounter11a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11b == numberOfCards){
							instances11b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter11bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances11b < numberOfCards) {	
										GameObject card = Instantiate (card11b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card11b";
										card.AddComponent<OnDestroyCard11b>();
										
										instances11b++;
										instancesCounter11bDeck1++;
										
										CardCounterManager.counter11b++;
										CardCounterManager.CardCounter11b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11c == numberOfCards){
							instances11c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter11cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances11c < numberOfCards) {	
										GameObject card = Instantiate (card11c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card11c";
										card.AddComponent<OnDestroyCard11c>();
										
										instances11c++;
										instancesCounter11cDeck1++;
										
										CardCounterManager.counter11c++;
										CardCounterManager.CardCounter11c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel12"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances12 == numberOfCards){
							instances12 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter12Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances12 < numberOfCards) {	
										GameObject card = Instantiate (card12, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card12";
										card.AddComponent<OnDestroyCard12>();
										
										instances12++;
										instancesCounter12Deck1++;
										
										CardCounterManager.counter12++;
										CardCounterManager.CardCounter12();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}

							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12a == numberOfCards){
							instances12a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter12aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances12a < numberOfCards) {	
										GameObject card = Instantiate (card12a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card12a";
										card.AddComponent<OnDestroyCard12a>();
										
										instances12a++;
										instancesCounter12aDeck1++;
										
										CardCounterManager.counter12a++;
										CardCounterManager.CardCounter12a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12b == numberOfCards){
							instances12b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter12bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances12b < numberOfCards) {	
										GameObject card = Instantiate (card12b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card12b";
										card.AddComponent<OnDestroyCard12b>();
										
										instances12b++;
										instancesCounter12bDeck1++;
										
										CardCounterManager.counter12b++;
										CardCounterManager.CardCounter12b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12c == numberOfCards){
							instances12c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter12cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances12c < numberOfCards) {	
										GameObject card = Instantiate (card12c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card12c";
										card.AddComponent<OnDestroyCard12c>();
										
										instances12c++;
										instancesCounter12cDeck1++;
										
										CardCounterManager.counter12c++;
										CardCounterManager.CardCounter12c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel13"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances13 == numberOfCards){
							instances13 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter13Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances13 < numberOfCards) {	
										GameObject card = Instantiate (card13, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card13";
										card.AddComponent<OnDestroyCard13>();
										
										instances13++;
										instancesCounter13Deck1++;
										
										CardCounterManager.counter13++;
										CardCounterManager.CardCounter13();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
							lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13a == numberOfCards){
							instances13a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter13aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances13a < numberOfCards) {	
										GameObject card = Instantiate (card13a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card13a";
										card.AddComponent<OnDestroyCard13a>();
										
										instances13a++;
										instancesCounter13aDeck1++;
										
										CardCounterManager.counter13a++;
										CardCounterManager.CardCounter13a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13b == numberOfCards){
							instances13b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter13bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances13b < numberOfCards) {	
										GameObject card = Instantiate (card13b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card13b";
										card.AddComponent<OnDestroyCard13b>();
										
										instances13b++;
										instancesCounter13bDeck1++;
										
										CardCounterManager.counter13b++;
										CardCounterManager.CardCounter13b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13c == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter13cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances13c < numberOfCards) {	
										GameObject card = Instantiate (card13c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card13c";
										card.AddComponent<OnDestroyCard13c>();
										
										instances13c++;
										instancesCounter13cDeck1++;
										
										CardCounterManager.counter13c++;
										CardCounterManager.CardCounter13c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel14"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances14 == numberOfCards){
							instances14 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter14Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances14 < numberOfCards) {	
										GameObject card = Instantiate (card14, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card14";
										card.AddComponent<OnDestroyCard14>();
										
										instances14++;
										instancesCounter14Deck1++;
										
										CardCounterManager.counter14++;
										CardCounterManager.CardCounter14();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14a == numberOfCards){
							instances14a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter14aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances14a < numberOfCards) {	
										GameObject card = Instantiate (card14a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card14a";
										card.AddComponent<OnDestroyCard14a>();
										
										instances14a++;
										instancesCounter14aDeck1++;
										
										CardCounterManager.counter14a++;
										CardCounterManager.CardCounter14a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14b == numberOfCards){
							instances14b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter14bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances14b < numberOfCards) {	
										GameObject card = Instantiate (card14b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card14b";
										card.AddComponent<OnDestroyCard14b>();
										
										instances14b++;
										instancesCounter14bDeck1++;
										
										CardCounterManager.counter14b++;
										CardCounterManager.CardCounter14b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14c == numberOfCards){
							instances14c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter14cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances14c < numberOfCards) {	
										GameObject card = Instantiate (card14c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card14c";
										card.AddComponent<OnDestroyCard14c>();
										
										instances14c++;
										instancesCounter14cDeck1++;
										
										CardCounterManager.counter14c++;
										CardCounterManager.CardCounter14c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel15"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances15 == numberOfCards){
							instances15 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter15Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances15 < numberOfCards) {	
										GameObject card = Instantiate (card15, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card15";
										card.AddComponent<OnDestroyCard15>();
										
										instances15++;
										instancesCounter15Deck1++;
										
										CardCounterManager.counter15++;
										CardCounterManager.CardCounter15();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15a == numberOfCards){
							instances15a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter15aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances15a < numberOfCards) {	
										GameObject card = Instantiate (card15a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card15a";
										card.AddComponent<OnDestroyCard15a>();
										
										instances15a++;
										instancesCounter15aDeck1++;
										
										CardCounterManager.counter15a++;
										CardCounterManager.CardCounter15a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15b == numberOfCards){
							instances15b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter15bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances15b < numberOfCards) {	
										GameObject card = Instantiate (card15b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card15b";
										card.AddComponent<OnDestroyCard15b>();
										
										instances15b++;
										instancesCounter15bDeck1++;
										
										CardCounterManager.counter15b++;
										CardCounterManager.CardCounter15b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15c == numberOfCards){
							instances15c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter15cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances15c < numberOfCards) {	
										GameObject card = Instantiate (card15c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card15c";
										card.AddComponent<OnDestroyCard15c>();
										
										instances15c++;
										instancesCounter15cDeck1++;
										
										CardCounterManager.counter15c++;
										CardCounterManager.CardCounter15c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances16 == numberOfCards){
							instances16 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter16Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances16 < numberOfCards) {	
										GameObject card = Instantiate (card16, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card16";
										card.AddComponent<OnDestroyCard16>();
										
										instances16++;
										instancesCounter16Deck1++;
										
										CardCounterManager.counter16++;
										CardCounterManager.CardCounter16();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16a == numberOfCards){
							instances16a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter16aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances16a < numberOfCards) {	
										GameObject card = Instantiate (card16a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card16a";
										card.AddComponent<OnDestroyCard16a>();
										
										instances16a++;
										instancesCounter16aDeck1++;
										
										CardCounterManager.counter16a++;
										CardCounterManager.CardCounter16a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16b == numberOfCards){
							instances16b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter16bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card16b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card16b";
										card.AddComponent<OnDestroyCard16b>();
										
										instances16b++;
										instancesCounter16bDeck1++;
										
										CardCounterManager.counter16b++;
										CardCounterManager.CardCounter16b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16c == numberOfCards){
							instances16c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter16cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card16c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card16c";
										card.AddComponent<OnDestroyCard16c>();
										
										instances16c++;
										instancesCounter16cDeck1++;
										
										CardCounterManager.counter16c++;
										CardCounterManager.CardCounter16c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel17"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances17 == numberOfCards){
							instances17 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter17Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances17 < numberOfCards) {	
										GameObject card = Instantiate (card17, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card17";
										card.AddComponent<OnDestroyCard17>();
										
										instances17++;
										instancesCounter17Deck1++;
										
										CardCounterManager.counter17++;
										CardCounterManager.CardCounter17();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17a == numberOfCards){
							instances17a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter17aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances17a < numberOfCards) {	
										GameObject card = Instantiate (card17a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card17a";
										card.AddComponent<OnDestroyCard17a>();
										
										instances17a++;
										instancesCounter17aDeck1++;
										
										CardCounterManager.counter17a++;
										CardCounterManager.CardCounter17a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17b == numberOfCards){
							instances17b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter17bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances17b < numberOfCards) {	
										GameObject card = Instantiate (card17b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card17b";
										card.AddComponent<OnDestroyCard17b>();
										
										instances17b++;
										instancesCounter17bDeck1++;
										
										CardCounterManager.counter17b++;
										CardCounterManager.CardCounter17b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17c == numberOfCards){
							instances17c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter17cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances17c < numberOfCards) {	
										GameObject card = Instantiate (card17c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card17c";
										card.AddComponent<OnDestroyCard17c>();
										
										instances17c++;
										instancesCounter17cDeck1++;
										
										CardCounterManager.counter17c++;
										CardCounterManager.CardCounter17c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances18 == numberOfCards){
							instances18 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter18Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances18 < numberOfCards) {	
										GameObject card = Instantiate (card18, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card18";
										card.AddComponent<OnDestroyCard18>();
										
										instances18++;
										instancesCounter18Deck1++;
										
										CardCounterManager.counter18++;
										CardCounterManager.CardCounter18();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
							
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18a == numberOfCards){
							instances18a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter18aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances18a < numberOfCards) {	
										GameObject card = Instantiate (card18a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card18a";
										card.AddComponent<OnDestroyCard18a>();
										
										instances18a++;
										instancesCounter18aDeck1++;
										
										CardCounterManager.counter18a++;
										CardCounterManager.CardCounter18a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18b == numberOfCards){
							instances18b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter18bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances18b < numberOfCards) {	
										GameObject card = Instantiate (card18b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card18b";
										card.AddComponent<OnDestroyCard18b>();
										
										instances18b++;
										instancesCounter18bDeck1++;
										
										CardCounterManager.counter18b++;
										CardCounterManager.CardCounter18b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18c == numberOfCards){
							instances18c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter18cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances18c < numberOfCards) {	
										GameObject card = Instantiate (card18c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card18c";
										card.AddComponent<OnDestroyCard18c>();
										
										instances18c++;
										instancesCounter18cDeck1++;
										
										CardCounterManager.counter18c++;
										CardCounterManager.CardCounter18c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel19"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances19 == numberOfCards){
							instances19 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter19Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances19 < numberOfCards) {	
										GameObject card = Instantiate (card19, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card19";
										card.AddComponent<OnDestroyCard19>();
										
										instances19++;
										instancesCounter19Deck1++;
										
										CardCounterManager.counter19++;
										CardCounterManager.CardCounter19();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19a == numberOfCards){
							instances19a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter19aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances19a < numberOfCards) {	
										GameObject card = Instantiate (card19a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card19a";
										card.AddComponent<OnDestroyCard19a>();
										
										instances19a++;
										instancesCounter19aDeck1++;
										
										CardCounterManager.counter19a++;
										CardCounterManager.CardCounter19a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19b == numberOfCards){
							instances19b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter19bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances19b < numberOfCards) {	
										GameObject card = Instantiate (card19b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card19b";
										card.AddComponent<OnDestroyCard19b>();
										
										instances19b++;
										instancesCounter19bDeck1++;
										
										CardCounterManager.counter19b++;
										CardCounterManager.CardCounter19b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19c == numberOfCards){
							instances19c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter19cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances19c < numberOfCards) {	
										GameObject card = Instantiate (card19c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card19c";
										card.AddComponent<OnDestroyCard19c>();
										
										instances19c++;
										instancesCounter19cDeck1++;
										
										CardCounterManager.counter19c++;
										CardCounterManager.CardCounter19c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel20"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances20 == numberOfCards){
							instances20 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter20Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances20 < numberOfCards) {	
										GameObject card = Instantiate (card20, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card20";
										card.AddComponent<OnDestroyCard20>();
										
										instances20++;
										instancesCounter20Deck1++;
										
										CardCounterManager.counter20++;
										CardCounterManager.CardCounter20();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances20a == numberOfCards){
							instances20a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter20aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances20a < numberOfCards) {	
										GameObject card = Instantiate (card20a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card20a";
										card.AddComponent<OnDestroyCard20a>();
										
										instances20a++;
										instancesCounter20aDeck1++;
										
										CardCounterManager.counter20a++;
										CardCounterManager.CardCounter20a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1 == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter20bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances20b < numberOfCards) {	
										GameObject card = Instantiate (card20b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card20b";
										card.AddComponent<OnDestroyCard20b>();
										
										instances20b++;
										instancesCounter20bDeck1++;
										
										CardCounterManager.counter20b++;
										CardCounterManager.CardCounter20b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances20c == numberOfCards){
							instances20c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter20cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances20c < numberOfCards) {	
										GameObject card = Instantiate (card20c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card20c";
										card.AddComponent<OnDestroyCard20c>();
										
										instances20c++;
										instancesCounter20cDeck1++;
										
										CardCounterManager.counter20c++;
										CardCounterManager.CardCounter20c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel21"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances21 == numberOfCards){
							instances21 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter21Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances21 < numberOfCards) {	
										GameObject card = Instantiate (card21, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card21";
										card.AddComponent<OnDestroyCard21>();
										
										instances21++;
										instancesCounter21Deck1++;
										
										CardCounterManager.counter21++;
										CardCounterManager.CardCounter21();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21a == numberOfCards){
							instances21a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter21aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances21a < numberOfCards) {	
										GameObject card = Instantiate (card21a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card21a";
										card.AddComponent<OnDestroyCard21a>();
										
										instances21a++;
										instancesCounter21aDeck1++;
										
										CardCounterManager.counter21a++;
										CardCounterManager.CardCounter21a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21b == numberOfCards){
							instances21b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter21bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances21b < numberOfCards) {	
										GameObject card = Instantiate (card21b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card21b";
										card.AddComponent<OnDestroyCard21b>();
										
										instances21b++;
										instancesCounter21bDeck1++;
										
										CardCounterManager.counter21b++;
										CardCounterManager.CardCounter21b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21c == numberOfCards){
							instances21c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter21cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances21c < numberOfCards) {	
										GameObject card = Instantiate (card21c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card21c";
										card.AddComponent<OnDestroyCard21c>();
										
										instances21c++;
										instancesCounter21cDeck1++;
										
										CardCounterManager.counter21c++;
										CardCounterManager.CardCounter21c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){		
				if(hit.collider.gameObject.name == "CardModel22"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances22 == numberOfCards){
							instances22 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter22Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances22 < numberOfCards) {	
										GameObject card = Instantiate (card22, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card22";
										card.AddComponent<OnDestroyCard22>();
										
										instances22++;
										instancesCounter22Deck1++;
										
										CardCounterManager.counter22++;
										CardCounterManager.CardCounter22();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22a == numberOfCards){
							instances22a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter22aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances22a < numberOfCards) {	
										GameObject card = Instantiate (card22a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card22a";
										card.AddComponent<OnDestroyCard22a>();
										
										instances22a++;
										instancesCounter22aDeck1++;
										
										CardCounterManager.counter22a++;
										CardCounterManager.CardCounter22a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22b == numberOfCards){
							instances22b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter22bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances22b < numberOfCards) {	
										GameObject card = Instantiate (card22b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card22b";
										card.AddComponent<OnDestroyCard22b>();
										
										instances22b++;
										instancesCounter22bDeck1++;
										
										CardCounterManager.counter22b++;
										CardCounterManager.CardCounter22b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22c == numberOfCards){
							instances22c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter22cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances22c < numberOfCards) {	
										GameObject card = Instantiate (card22c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card22c";
										card.AddComponent<OnDestroyCard22c>();
										
										instances22c++;
										instancesCounter22cDeck1++;
										
										CardCounterManager.counter22c++;
										CardCounterManager.CardCounter22c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel23"){	
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances23 == numberOfCards){
							instances23 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter23Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances23 < numberOfCards) {	
										GameObject card = Instantiate (card23, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card23";
										card.AddComponent<OnDestroyCard23>();
										
										instances23++;
										instancesCounter23Deck1++;
										
										CardCounterManager.counter23++;
										CardCounterManager.CardCounter23();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23a == numberOfCards){
							instances23a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter23aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances23a < numberOfCards) {	
										GameObject card = Instantiate (card23a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card23a";
										card.AddComponent<OnDestroyCard23a>();
										
										instances23a++;
										instancesCounter23aDeck1++;
										
										CardCounterManager.counter23a++;
										CardCounterManager.CardCounter23a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23b == numberOfCards){
							instances23b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter23bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances23b < numberOfCards) {	
										GameObject card = Instantiate (card23b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card23b";
										card.AddComponent<OnDestroyCard23b>();
										
										instances23b++;
										instancesCounter23bDeck1++;
										
										CardCounterManager.counter23b++;
										CardCounterManager.CardCounter23b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23c == numberOfCards){
							instances23c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter23cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances23c < numberOfCards) {	
										GameObject card = Instantiate (card23c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card23c";
										card.AddComponent<OnDestroyCard23c>();
										
										instances23c++;
										instancesCounter23cDeck1++;
										
										CardCounterManager.counter23c++;
										CardCounterManager.CardCounter23c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel24"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances24 == numberOfCards){
							instances24 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter24Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances24 < numberOfCards) {	
										GameObject card = Instantiate (card24, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card24";
										card.AddComponent<OnDestroyCard24>();
										
										instances24++;
										instancesCounter24Deck1++;
										
										CardCounterManager.counter24++;
										CardCounterManager.CardCounter24();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24a == numberOfCards){
							instances24a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter24aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances24a < numberOfCards) {	
										GameObject card = Instantiate (card24a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card24a";
										card.AddComponent<OnDestroyCard24a>();
										
										instances24a++;
										instancesCounter24aDeck1++;
										
										CardCounterManager.counter24a++;
										CardCounterManager.CardCounter24a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24b == numberOfCards){
							instances24b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter24bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances24b < numberOfCards) {	
										GameObject card = Instantiate (card24b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card24b";
										card.AddComponent<OnDestroyCard24b>();
										
										instances24b++;
										instancesCounter24bDeck1++;
										
										CardCounterManager.counter24b++;
										CardCounterManager.CardCounter24b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24c == numberOfCards){
							instances24c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter24cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances24c < numberOfCards) {	
										GameObject card = Instantiate (card24c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card24c";
										card.AddComponent<OnDestroyCard24c>();
										
										instances24c++;
										instancesCounter24cDeck1++;
										
										CardCounterManager.counter24c++;
										CardCounterManager.CardCounter24c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances25 == numberOfCards){
							instances25 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter25Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances25 < numberOfCards) {	
										GameObject card = Instantiate (card25, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card25";
										card.AddComponent<OnDestroyCard25>();
										
										instances25++;
										instancesCounter25Deck1++;
										
										CardCounterManager.counter25++;
										CardCounterManager.CardCounter25();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25a == numberOfCards){
							instances25a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter25aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances25a < numberOfCards) {	
										GameObject card = Instantiate (card25a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card25a";
										card.AddComponent<OnDestroyCard25a>();
										
										instances25a++;
										instancesCounter25aDeck1++;
										
										CardCounterManager.counter25a++;
										CardCounterManager.CardCounter25a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25b == numberOfCards){
							instances25b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter25bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances25b < numberOfCards) {	
										GameObject card = Instantiate (card25b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card25b";
										card.AddComponent<OnDestroyCard25b>();
										
										instances25b++;
										instancesCounter25bDeck1++;
										
										CardCounterManager.counter25b++;
										CardCounterManager.CardCounter25b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25c == numberOfCards){
							instances25c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter25cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances25c < numberOfCards) {	
										GameObject card = Instantiate (card25c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card25c";
										card.AddComponent<OnDestroyCard25c>();
										
										instances25c++;
										instancesCounter25cDeck1++;
										
										CardCounterManager.counter25c++;
										CardCounterManager.CardCounter25c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances26 == numberOfCards){
							instances26 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter26Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances26 < numberOfCards) {	
										GameObject card = Instantiate (card26, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card26";
										card.AddComponent<OnDestroyCard26>();
										
										instances26++;
										instancesCounter26Deck1++;
										
										CardCounterManager.counter26++;
										CardCounterManager.CardCounter26();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26a == numberOfCards){
							instances26a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter26aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances26a < numberOfCards) {	
										GameObject card = Instantiate (card26a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card26a";
										card.AddComponent<OnDestroyCard26a>();
										
										instances26a++;
										instancesCounter26aDeck1++;
										
										CardCounterManager.counter26a++;
										CardCounterManager.CardCounter26a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26b == numberOfCards){
							instances26b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter26bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances26b < numberOfCards) {	
										GameObject card = Instantiate (card26b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card26b";
										card.AddComponent<OnDestroyCard26b>();
										
										instances26b++;
										instancesCounter26bDeck1++;
										
										CardCounterManager.counter26b++;
										CardCounterManager.CardCounter26b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26c == numberOfCards){
							instances26c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter26cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances26c < numberOfCards) {	
										GameObject card = Instantiate (card26c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card26c";
										card.AddComponent<OnDestroyCard26c>();
										
										instances26c++;
										instancesCounter26cDeck1++;
										
										CardCounterManager.counter26c++;
										CardCounterManager.CardCounter26c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel27"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances27 == numberOfCards){
							instances27 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter27Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances27 < numberOfCards) {	
										GameObject card = Instantiate (card27, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card27";
										card.AddComponent<OnDestroyCard27>();
										
										instances27++;
										instancesCounter27Deck1++;
										
										CardCounterManager.counter27++;
										CardCounterManager.CardCounter27();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27a == numberOfCards){
							instances27a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter27aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances27a < numberOfCards) {	
										GameObject card = Instantiate (card27a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card27a";
										card.AddComponent<OnDestroyCard27a>();
										
										instances27a++;
										instancesCounter27aDeck1++;
										
										CardCounterManager.counter27a++;
										CardCounterManager.CardCounter27a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27b == numberOfCards){
							instances27b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter27bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances27b < numberOfCards) {	
										GameObject card = Instantiate (card27b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card27b";
										card.AddComponent<OnDestroyCard27b>();
										
										instances27b++;
										instancesCounter27bDeck1++;
										
										CardCounterManager.counter27b++;
										CardCounterManager.CardCounter27b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27c == numberOfCards){
							instances27c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter27cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances27c < numberOfCards) {	
										GameObject card = Instantiate (card27c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card27c";
										card.AddComponent<OnDestroyCard27c>();
										
										instances27c++;
										instancesCounter27cDeck1++;
										
										CardCounterManager.counter27c++;
										CardCounterManager.CardCounter27c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances28 == numberOfCards){
							instances28 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter28Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances28 < numberOfCards) {	
										GameObject card = Instantiate (card28, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card28";
										card.AddComponent<OnDestroyCard28>();
										
										instances28++;
										instancesCounter28Deck1++;
										
										CardCounterManager.counter28++;
										CardCounterManager.CardCounter28();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28a == numberOfCards){
							instances28a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter28aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances28a < numberOfCards) {	
										GameObject card = Instantiate (card28a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card28a";
										card.AddComponent<OnDestroyCard28a>();
										
										instances28a++;
										instancesCounter28aDeck1++;
										
										CardCounterManager.counter28a++;
										CardCounterManager.CardCounter28a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28b == numberOfCards){
							instances28b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter28bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances28b < numberOfCards) {	
										GameObject card = Instantiate (card28b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card28b";
										card.AddComponent<OnDestroyCard28b>();
										
										instances28b++;
										instancesCounter28bDeck1++;
										
										CardCounterManager.counter28b++;
										CardCounterManager.CardCounter28b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28c == numberOfCards){
							instances28c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter28cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances28c < numberOfCards) {	
										GameObject card = Instantiate (card28c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card28c";
										card.AddComponent<OnDestroyCard28c>();
										
										instances28c++;
										instancesCounter28cDeck1++;
										
										CardCounterManager.counter28c++;
										CardCounterManager.CardCounter28c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances29 == numberOfCards){
							instances29 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter29Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances29 < numberOfCards) {	
										GameObject card = Instantiate (card29, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card29";
										card.AddComponent<OnDestroyCard29>();
										
										instances29++;
										instancesCounter29Deck1++;
										
										CardCounterManager.counter29++;
										CardCounterManager.CardCounter29();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29a == numberOfCards){
							instances29a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter29aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances29a < numberOfCards) {	
										GameObject card = Instantiate (card29a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card29a";
										card.AddComponent<OnDestroyCard29a>();
										
										instances29a++;
										instancesCounter29aDeck1++;
										
										CardCounterManager.counter29a++;
										CardCounterManager.CardCounter29a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29b == numberOfCards){
							instances29b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter29bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances29b < numberOfCards) {	
										GameObject card = Instantiate (card29b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card29b";
										card.AddComponent<OnDestroyCard29b>();
										
										instances29b++;
										instancesCounter29bDeck1++;
										
										CardCounterManager.counter29b++;
										CardCounterManager.CardCounter29b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29c == numberOfCards){
							instances29c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter29cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances29c < numberOfCards) {	
										GameObject card = Instantiate (card29c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card29c";
										card.AddComponent<OnDestroyCard29c>();
										
										instances29c++;
										instancesCounter29cDeck1++;
										
										CardCounterManager.counter29c++;
										CardCounterManager.CardCounter29c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel30"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances30 == numberOfCards){
							instances30 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter30Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances30 < numberOfCards) {	
										GameObject card = Instantiate (card30, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card30";
										card.AddComponent<OnDestroyCard30>();
										
										instances30++;
										instancesCounter30Deck1++;
										
										CardCounterManager.counter30++;
										CardCounterManager.CardCounter30();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30a == numberOfCards){
							instances30a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter30aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances30a < numberOfCards) {	
										GameObject card = Instantiate (card30a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card30a";
										card.AddComponent<OnDestroyCard30a>();
										
										instances30a++;
										instancesCounter30aDeck1++;
										
										CardCounterManager.counter30a++;
										CardCounterManager.CardCounter30a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30b == numberOfCards){
							instances30b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter30bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances30b < numberOfCards) {	
										GameObject card = Instantiate (card30b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card30b";
										card.AddComponent<OnDestroyCard30b>();
										
										instances30b++;
										instancesCounter30bDeck1++;
										
										CardCounterManager.counter30b++;
										CardCounterManager.CardCounter30b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30c == numberOfCards){
							instances30c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter30cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances30c < numberOfCards) {	
										GameObject card = Instantiate (card30c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card30c";
										card.AddComponent<OnDestroyCard30c>();
										
										instances30c++;
										instancesCounter30cDeck1++;
										
										CardCounterManager.counter30c++;
										CardCounterManager.CardCounter30c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances31 == numberOfCards){
							instances31 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter31Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances31 < numberOfCards) {	
										GameObject card = Instantiate (card31, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card31";
										card.AddComponent<OnDestroyCard31>();
										
										instances31++;
										instancesCounter31Deck1++;
										
										CardCounterManager.counter31++;
										CardCounterManager.CardCounter31();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31a == numberOfCards){
							instances31a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter31aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances31a < numberOfCards) {	
										GameObject card = Instantiate (card31a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card31a";
										card.AddComponent<OnDestroyCard31a>();
										
										instances31a++;
										instancesCounter31aDeck1++;
										
										CardCounterManager.counter31a++;
										CardCounterManager.CardCounter31a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31b == numberOfCards){
							instances31b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter31bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances31b < numberOfCards) {	
										GameObject card = Instantiate (card31b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card31b";
										card.AddComponent<OnDestroyCard31b>();
										
										instances31b++;
										instancesCounter31bDeck1++;
										
										CardCounterManager.counter31b++;
										CardCounterManager.CardCounter31b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31c == numberOfCards){
							instances31c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter31cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances31c < numberOfCards) {	
										GameObject card = Instantiate (card31c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card31c";
										card.AddComponent<OnDestroyCard31c>();
										
										instances31c++;
										instancesCounter31cDeck1++;
										
										CardCounterManager.counter31c++;
										CardCounterManager.CardCounter31c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			 
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances32 == numberOfCards){
							instances32 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter32Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances32 < numberOfCards) {
										
										GameObject card = Instantiate (card32, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card32";
										card.AddComponent<OnDestroyCard32>();
										
										instances32++;
										instancesCounter32Deck1++;
										
										CardCounterManager.counter32++;
										CardCounterManager.CardCounter32();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32a == numberOfCards){
							instances32a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter32aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances32a < numberOfCards) {	
										GameObject card = Instantiate (card32a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card32a";
										card.AddComponent<OnDestroyCard32a>();
										
										instances32a++;
										instancesCounter32aDeck1++;
										
										CardCounterManager.counter32a++;
										CardCounterManager.CardCounter32a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32b == numberOfCards){
							instances32b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter32bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances32b < numberOfCards) {	
										GameObject card = Instantiate (card32b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card32b";
										card.AddComponent<OnDestroyCard32b>();
										
										instances32b++;
										instancesCounter32bDeck1++;
										
										CardCounterManager.counter32b++;
										CardCounterManager.CardCounter32b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32c == numberOfCards){
							instances32c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter32cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card32c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card32c";
										card.AddComponent<OnDestroyCard32c>();
										
										instances32c++;
										instancesCounter32cDeck1++;
										
										CardCounterManager.counter32c++;
										CardCounterManager.CardCounter32c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel33"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances33 == numberOfCards){
							instances33 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter33Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances33 < numberOfCards) {	
										GameObject card = Instantiate (card33, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card33";
										card.AddComponent<OnDestroyCard33>();
										
										instances33++;
										instancesCounter33Deck1++;
										
										CardCounterManager.counter33++;
										CardCounterManager.CardCounter33();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33a == numberOfCards){
							instances33a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter33aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances33a < numberOfCards) {	
										GameObject card = Instantiate (card33a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card33a";
										card.AddComponent<OnDestroyCard33a>();
										
										instances33a++;
										instancesCounter33aDeck1++;
										
										CardCounterManager.counter33a++;
										CardCounterManager.CardCounter33a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33b == numberOfCards){
							instances33b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter33bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances33b < numberOfCards) {	
										GameObject card = Instantiate (card33b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card33b";
										card.AddComponent<OnDestroyCard33b>();
										
										instances33b++;
										instancesCounter33bDeck1++;
										
										CardCounterManager.counter33b++;
										CardCounterManager.CardCounter33b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33c == numberOfCards){
							instances33c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter33cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances33c < numberOfCards) {	
										GameObject card = Instantiate (card33c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card33c";
										card.AddComponent<OnDestroyCard33c>();
										
										instances33c++;
										instancesCounter33cDeck1++;
										
										CardCounterManager.counter33c++;
										CardCounterManager.CardCounter33c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances34 == numberOfCards){
							instances34 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter34Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances34 < numberOfCards) {	
										GameObject card = Instantiate (card34, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card34";
										card.AddComponent<OnDestroyCard34>();
										
										instances34++;
										instancesCounter34Deck1++;
										
										CardCounterManager.counter34++;
										CardCounterManager.CardCounter34();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34a == numberOfCards){
							instances34a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter34aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances34a < numberOfCards) {	
										GameObject card = Instantiate (card34a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card34a";
										card.AddComponent<OnDestroyCard34a>();
										
										instances34a++;
										instancesCounter34aDeck1++;
										
										CardCounterManager.counter34a++;
										CardCounterManager.CardCounter34a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34b == numberOfCards){
							instances34b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter34bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances34b < numberOfCards) {	
										GameObject card = Instantiate (card34b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card34b";
										card.AddComponent<OnDestroyCard34b>();
										
										instances34b++;
										instancesCounter34bDeck1++;
										
										CardCounterManager.counter34b++;
										CardCounterManager.CardCounter34b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34c == numberOfCards){
							instances34c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter34cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances34c < numberOfCards) {	
										GameObject card = Instantiate (card34c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card34c";
										card.AddComponent<OnDestroyCard34c>();
										
										instances34c++;
										instancesCounter34cDeck1++;
										
										CardCounterManager.counter34c++;
										CardCounterManager.CardCounter34c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances35 == numberOfCards){
								instances35 = 0;
							}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter35Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances35 < numberOfCards) {	
										GameObject card = Instantiate (card35, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card35";
										card.AddComponent<OnDestroyCard35>();
										
										instances35++;
										instancesCounter35Deck1++;
										
										CardCounterManager.counter35++;
										CardCounterManager.CardCounter35();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35a == numberOfCards){
							instances35a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter35aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances35a < numberOfCards) {	
										GameObject card = Instantiate (card35a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card35a";
										card.AddComponent<OnDestroyCard35a>();
										
										instances35a++;
										instancesCounter35aDeck1++;
										
										CardCounterManager.counter35a++;
										CardCounterManager.CardCounter35a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35b == numberOfCards){
							instances35b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter35bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances35b < numberOfCards) {	
										GameObject card = Instantiate (card35b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card35b";
										card.AddComponent<OnDestroyCard35b>();
										
										instances35b++;
										instancesCounter35bDeck1++;
										
										CardCounterManager.counter35b++;
										CardCounterManager.CardCounter35b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35c == numberOfCards){
							instances35c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter35cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances35c < numberOfCards) {	
										GameObject card = Instantiate (card35c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card35c";
										card.AddComponent<OnDestroyCard35c>();
										
										instances35c++;
										instancesCounter35cDeck1++;
										
										CardCounterManager.counter35c++;
										CardCounterManager.CardCounter35c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances36 == numberOfCards){
							instances36 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter36Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances36 < numberOfCards) {	
										GameObject card = Instantiate (card36, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card36";
										card.AddComponent<OnDestroyCard36>();
										
										instances36++;
										instancesCounter36Deck1++;
										
										CardCounterManager.counter36++;
										CardCounterManager.CardCounter36();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36a == numberOfCards){
							instances36a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter36aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances36a < numberOfCards) {	
										GameObject card = Instantiate (card36a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card36a";
										card.AddComponent<OnDestroyCard36a>();
										
										instances36a++;
										instancesCounter36aDeck1++;
										
										CardCounterManager.counter36a++;
										CardCounterManager.CardCounter36a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36b == numberOfCards){
							instances36b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter36bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances36b < numberOfCards) {	
										GameObject card = Instantiate (card36b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card36b";
										card.AddComponent<OnDestroyCard36b>();
										
										instances36b++;
										instancesCounter36bDeck1++;
										
										CardCounterManager.counter36b++;
										CardCounterManager.CardCounter36b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36c == numberOfCards){
							instances36c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter36cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances36c < numberOfCards) {	
										GameObject card = Instantiate (card36c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card36c";
										card.AddComponent<OnDestroyCard36c>();
										
										instances36c++;
										instancesCounter36cDeck1++;
										
										CardCounterManager.counter36c++;
										CardCounterManager.CardCounter36c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances37 == numberOfCards){
							instances37 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter37Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances37 < numberOfCards) {	
										GameObject card = Instantiate (card37, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card37";
										card.AddComponent<OnDestroyCard37>();
										
										instances37++;
										instancesCounter37Deck1++;
										
										CardCounterManager.counter37++;
										CardCounterManager.CardCounter37();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37a == numberOfCards){
							instances37a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter37aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances37a < numberOfCards) {	
										GameObject card = Instantiate (card37a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card37a";
										card.AddComponent<OnDestroyCard37a>();
										
										instances37a++;
										instancesCounter37aDeck1++;
										
										CardCounterManager.counter37a++;
										CardCounterManager.CardCounter37a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37b == numberOfCards){
							instances37b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter37bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances37b < numberOfCards) {	
										GameObject card = Instantiate (card37b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card37b";
										card.AddComponent<OnDestroyCard37b>();
										
										instances37b++;
										instancesCounter37bDeck1++;
										
										CardCounterManager.counter37b++;
										CardCounterManager.CardCounter37b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37c == numberOfCards){
							instances37c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter37cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances37c < numberOfCards) {	
										GameObject card = Instantiate (card37c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card37c";
										card.AddComponent<OnDestroyCard37c>();
										
										instances37c++;
										instancesCounter37cDeck1++;
										
										CardCounterManager.counter37c++;
										CardCounterManager.CardCounter37c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances38 == numberOfCards){
							instances38 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter38Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances38 < numberOfCards) {	
										GameObject card = Instantiate (card38, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card38";
										card.AddComponent<OnDestroyCard38>();
										
										instances38++;
										instancesCounter38Deck1++;
										
										CardCounterManager.counter38++;
										CardCounterManager.CardCounter38();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38a == numberOfCards){
							instances38a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter38aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances38a < numberOfCards) {	
										GameObject card = Instantiate (card38a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card38a";
										card.AddComponent<OnDestroyCard38a>();
										
										instances38a++;
										instancesCounter38aDeck1++;
										
										CardCounterManager.counter38a++;
										CardCounterManager.CardCounter38a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38b == numberOfCards){
							instances38b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter38bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances38b < numberOfCards) {	
										GameObject card = Instantiate (card38b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card38b";
										card.AddComponent<OnDestroyCard38b>();
										
										instances38b++;
										instancesCounter38bDeck1++;
										
										CardCounterManager.counter38b++;
										CardCounterManager.CardCounter38b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38c == numberOfCards){
							instances38c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter38cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances38c < numberOfCards) {	
										GameObject card = Instantiate (card38c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card38c";
										card.AddComponent<OnDestroyCard38c>();
										
										instances38c++;
										instancesCounter38cDeck1++;
										
										CardCounterManager.counter38c++;
										CardCounterManager.CardCounter38c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel39"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances39 == numberOfCards){
							instances39 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter39Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances39 < numberOfCards) {	
										GameObject card = Instantiate (card39, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card39";
										card.AddComponent<OnDestroyCard39>();
										
										instances39++;
										instancesCounter39Deck1++;
										
										CardCounterManager.counter39++;
										CardCounterManager.CardCounter39();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39a == numberOfCards){
							instances39a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter39aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances39a < numberOfCards) {	
										GameObject card = Instantiate (card39a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card39a";
										card.AddComponent<OnDestroyCard39a>();
										
										instances39a++;
										instancesCounter39aDeck1++;
										
										CardCounterManager.counter39a++;
										CardCounterManager.CardCounter39a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39b == numberOfCards){
							instances39b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter39bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances39b < numberOfCards) {	
										GameObject card = Instantiate (card39b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card39b";
										card.AddComponent<OnDestroyCard39b>();
										
										instances39b++;
										instancesCounter39bDeck1++;
										
										CardCounterManager.counter39b++;
										CardCounterManager.CardCounter39b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39c == numberOfCards){
							instances39c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter39cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances39c < numberOfCards) {	
										GameObject card = Instantiate (card39c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card39c";
										card.AddComponent<OnDestroyCard39c>();
										
										instances39c++;
										instancesCounter39cDeck1++;
										
										CardCounterManager.counter39c++;
										CardCounterManager.CardCounter39c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances40 == numberOfCards){
							instances40 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter40Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances40 < numberOfCards) {	
										GameObject card = Instantiate (card40, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card40";
										card.AddComponent<OnDestroyCard40>();
										
										instances40++;
										instancesCounter40Deck1++;
										
										CardCounterManager.counter40++;
										CardCounterManager.CardCounter40();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40a == numberOfCards){
							instances40a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter40aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances40a < numberOfCards) {	
										GameObject card = Instantiate (card40a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card40a";
										card.AddComponent<OnDestroyCard40a>();
										
										instances40a++;
										instancesCounter40aDeck1++;
										
										CardCounterManager.counter40a++;
										CardCounterManager.CardCounter40a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40b == numberOfCards){
							instances40b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter40bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances40b < numberOfCards) {	
										GameObject card = Instantiate (card40b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card40b";
										card.AddComponent<OnDestroyCard40b>();
										
										instances40b++;
										instancesCounter40bDeck1++;
										
										CardCounterManager.counter40b++;
										CardCounterManager.CardCounter40b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40c == numberOfCards){
							instances40c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter40cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances40c < numberOfCards) {	
										GameObject card = Instantiate (card40c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card40c";
										card.AddComponent<OnDestroyCard40c>();
										
										instances40c++;
										instancesCounter40cDeck1++;
										
										CardCounterManager.counter40c++;
										CardCounterManager.CardCounter40c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel41"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances41 == numberOfCards){
							instances41 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter41Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances41 < numberOfCards) {	
										GameObject card = Instantiate (card41, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card41";
										card.AddComponent<OnDestroyCard41>();
										
										instances41++;
										instancesCounter41Deck1++;
										
										CardCounterManager.counter41++;
										CardCounterManager.CardCounter41();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
					
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41a == numberOfCards){
							instances41a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter41aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances41a < numberOfCards) {	
										GameObject card = Instantiate (card41a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card41a";
										card.AddComponent<OnDestroyCard41a>();
										
										instances41a++;
										instancesCounter41aDeck1++;
										
											CardCounterManager.counter41a++;
											CardCounterManager.CardCounter41a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41b == numberOfCards){
							instances41b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter41bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances41b < numberOfCards) {	
										GameObject card = Instantiate (card41b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card41b";
										card.AddComponent<OnDestroyCard41b>();
										
										instances41b++;
										instancesCounter41bDeck1++;
										
										CardCounterManager.counter41b++;
										CardCounterManager.CardCounter41b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41c == numberOfCards){
							instances41c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter41cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances41c < numberOfCards) {	
										GameObject card = Instantiate (card41c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card41c";
										card.AddComponent<OnDestroyCard41c>();
										
										instances41c++;
										instancesCounter41cDeck1++;
										
										CardCounterManager.counter41c++;
										CardCounterManager.CardCounter41c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel42"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances42 == numberOfCards){
							instances42 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter42Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances42 < numberOfCards) {	
										GameObject card = Instantiate (card42, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card42";
										card.AddComponent<OnDestroyCard42>();
										
										instances42++;
										instancesCounter42Deck1++;
										
										CardCounterManager.counter42++;
										CardCounterManager.CardCounter42();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42a == numberOfCards){
							instances42a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter42aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances42a < numberOfCards) {	
										GameObject card = Instantiate (card42a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card42a";
										card.AddComponent<OnDestroyCard42a>();
										
										instances42a++;
										instancesCounter42aDeck1++;
										
										CardCounterManager.counter42a++;
										CardCounterManager.CardCounter42a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42b == numberOfCards){
							instances42b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter42bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances42b < numberOfCards) {	
										GameObject card = Instantiate (card42b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card42b";
										card.AddComponent<OnDestroyCard42b>();
										
										instances42b++;
										instancesCounter42bDeck1++;
										
										CardCounterManager.counter42b++;
										CardCounterManager.CardCounter42b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42c == numberOfCards){
							instances42c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter42cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances42c < numberOfCards) {	
										GameObject card = Instantiate (card42c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card42c";
										card.AddComponent<OnDestroyCard42c>();
										
										instances42c++;
										instancesCounter42cDeck1++;
										
										CardCounterManager.counter42c++;
										CardCounterManager.CardCounter42c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel43"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances43 == numberOfCards){
							instances43 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter43Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances43 < numberOfCards) {	
										GameObject card = Instantiate (card43, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card43";
										card.AddComponent<OnDestroyCard43>();
										
										instances43++;
										instancesCounter43Deck1++;
										
										CardCounterManager.counter43++;
										CardCounterManager.CardCounter43();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43a == numberOfCards){
							instances43a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter43aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances43a < numberOfCards) {	
										GameObject card = Instantiate (card43a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card43a";
										card.AddComponent<OnDestroyCard43a>();
										
										instances43a++;
										instancesCounter43aDeck1++;
										
										CardCounterManager.counter43a++;
										CardCounterManager.CardCounter43a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43b == numberOfCards){
							instances43b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter43bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances43b < numberOfCards) {	
										GameObject card = Instantiate (card43b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card43b";
										card.AddComponent<OnDestroyCard43b>();
										
										instances43b++;
										instancesCounter43bDeck1++;
										
										CardCounterManager.counter43b++;
										CardCounterManager.CardCounter43b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43c == numberOfCards){
							instances43c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter43cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances43c < numberOfCards) {	
										GameObject card = Instantiate (card43c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card43c";
										card.AddComponent<OnDestroyCard43c>();
										
										instances43c++;
										instancesCounter43cDeck1++;
										
										CardCounterManager.counter43c++;
										CardCounterManager.CardCounter43c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel44"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances44 == numberOfCards){
							instances44 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter44Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances44 < numberOfCards) {	
										GameObject card = Instantiate (card44, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card44";
										card.AddComponent<OnDestroyCard44>();
										
										instances44++;
										instancesCounter44Deck1++;
										
										CardCounterManager.counter44++;
										CardCounterManager.CardCounter44();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44a == numberOfCards){
							instances44a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter44aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances44a < numberOfCards) {	
										GameObject card = Instantiate (card44a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card44a";
										card.AddComponent<OnDestroyCard44a>();
										
										instances44a++;
										instancesCounter44aDeck1++;
										
										CardCounterManager.counter44a++;
										CardCounterManager.CardCounter44a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44b == numberOfCards){
							instances44b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter44bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances44b < numberOfCards) {	
										GameObject card = Instantiate (card44b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card44b";
										card.AddComponent<OnDestroyCard44b>();
										
										instances44b++;
										instancesCounter44bDeck1++;
										
										CardCounterManager.counter44b++;
										CardCounterManager.CardCounter44b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44c == numberOfCards){
							instances44c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter44cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances44c < numberOfCards) {	
										GameObject card = Instantiate (card44c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card44c";
										card.AddComponent<OnDestroyCard44c>();
										
										instances44c++;
										instancesCounter44cDeck1++;
										
										CardCounterManager.counter44c++;
										CardCounterManager.CardCounter44c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel45"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances45 == numberOfCards){
							instances45 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter45Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances45 < numberOfCards) {	
										GameObject card = Instantiate (card45, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card45";
										card.AddComponent<OnDestroyCard45>();
										
										instances45++;
										instancesCounter45Deck1++;
										
										CardCounterManager.counter45++;
										CardCounterManager.CardCounter45();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45a == numberOfCards){
							instances45a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter45aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances45a < numberOfCards) {	
										GameObject card = Instantiate (card45a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card45a";
										card.AddComponent<OnDestroyCard45a>();
										
										instances45a++;
										instancesCounter45aDeck1++;
										
										CardCounterManager.counter45a++;
										CardCounterManager.CardCounter45a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45b == numberOfCards){
							instances45b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter45bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances45b < numberOfCards) {	
										GameObject card = Instantiate (card45b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card45b";
										card.AddComponent<OnDestroyCard45b>();
										
										instances45b++;
										instancesCounter45bDeck1++;
										
										CardCounterManager.counter45b++;
										CardCounterManager.CardCounter45b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45c == numberOfCards){
							instances45c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter45cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances45c < numberOfCards) {	
										GameObject card = Instantiate (card45c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card45c";
										card.AddComponent<OnDestroyCard45c>();
										
										instances45c++;
										instancesCounter45cDeck1++;
										
										CardCounterManager.counter45c++;
										CardCounterManager.CardCounter45c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances46 == numberOfCards){
							instances46 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter46Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances46 < numberOfCards) {	
										GameObject card = Instantiate (card46, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card46";
										card.AddComponent<OnDestroyCard46>();
										
										instances46++;
										instancesCounter46Deck1++;
										
										CardCounterManager.counter46++;
										CardCounterManager.CardCounter46();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46a == numberOfCards){
							instances46a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter46aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances46a < numberOfCards) {	
										GameObject card = Instantiate (card46a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card46a";
										card.AddComponent<OnDestroyCard46a>();
										
										instances46a++;
										instancesCounter46aDeck1++;
										
										CardCounterManager.counter46a++;
										CardCounterManager.CardCounter46a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46b == numberOfCards){
							instances46b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter46bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances46b < numberOfCards) {	
										GameObject card = Instantiate (card46b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card46b";
										card.AddComponent<OnDestroyCard46b>();
										
										instances46b++;
										instancesCounter46bDeck1++;
										
										CardCounterManager.counter46b++;
										CardCounterManager.CardCounter46b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46c == numberOfCards){
							instances46c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter46cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances46c < numberOfCards) {	
										GameObject card = Instantiate (card46c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card46c";
										card.AddComponent<OnDestroyCard46c>();
										
										instances46c++;
										instancesCounter46cDeck1++;
										
										CardCounterManager.counter46c++;
										CardCounterManager.CardCounter46c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel47"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances47 == numberOfCards){
							instances47 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter47Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances47 < numberOfCards) {	
										GameObject card = Instantiate (card47, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card47";
										card.AddComponent<OnDestroyCard47>();
										
										instances47++;
										instancesCounter47Deck1++;
										
										CardCounterManager.counter47++;
										CardCounterManager.CardCounter47();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47a == numberOfCards){
							instances47a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter47aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances47a < numberOfCards) {	
										GameObject card = Instantiate (card47a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card47a";
										card.AddComponent<OnDestroyCard47a>();
										
										instances47a++;
										instancesCounter47aDeck1++;
										
										CardCounterManager.counter47a++;
										CardCounterManager.CardCounter47a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47b == numberOfCards){
							instances47b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter47bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances47b < numberOfCards) {	
										GameObject card = Instantiate (card47b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card47b";
										card.AddComponent<OnDestroyCard47b>();
										
										instances47b++;
										instancesCounter47bDeck1++;
										
										CardCounterManager.counter47b++;
										CardCounterManager.CardCounter47b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47c == numberOfCards){
							instances47c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter47cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances47c < numberOfCards) {	
										GameObject card = Instantiate (card47c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card47c";
										card.AddComponent<OnDestroyCard47c>();
										
										instances47c++;
										instancesCounter47cDeck1++;
										
										CardCounterManager.counter47c++;
										CardCounterManager.CardCounter47c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances48 == numberOfCards){
							instances48 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter48Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances48 < numberOfCards) {	
										GameObject card = Instantiate (card48, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card48";
										card.AddComponent<OnDestroyCard48>();
										
										instances48++;
										instancesCounter48Deck1++;
										
										CardCounterManager.counter48++;
										CardCounterManager.CardCounter48();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48a == numberOfCards){
							instances48a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter48aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances48a < numberOfCards) {	
										GameObject card = Instantiate (card48a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card48a";
										card.AddComponent<OnDestroyCard48a>();
										
										instances48a++;
										instancesCounter48aDeck1++;
										
										CardCounterManager.counter48a++;
										CardCounterManager.CardCounter48a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48b == numberOfCards){
							instances48b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter48bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances48b < numberOfCards) {	
										GameObject card = Instantiate (card48b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card48b";
										card.AddComponent<OnDestroyCard48b>();
										
										instances48b++;
										instancesCounter48bDeck1++;
										
										CardCounterManager.counter48b++;
										CardCounterManager.CardCounter48b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48c == numberOfCards){
							instances48c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter48cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances48c < numberOfCards) {	
										GameObject card = Instantiate (card48c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card48c";
										card.AddComponent<OnDestroyCard48c>();
										
										instances48c++;
										instancesCounter48cDeck1++;
										
										CardCounterManager.counter48c++;
										CardCounterManager.CardCounter48c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel49"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances49 == numberOfCards){
							instances49 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter49Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances49 < numberOfCards) {	
										GameObject card = Instantiate (card49, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card49";
										card.AddComponent<OnDestroyCard49>();
										
										instances49++;
										instancesCounter49Deck1++;
										
										CardCounterManager.counter49++;
										CardCounterManager.CardCounter49();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49a == numberOfCards){
							instances49a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter49aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances49a < numberOfCards) {	
										GameObject card = Instantiate (card49a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card49a";
										card.AddComponent<OnDestroyCard49a>();
										
										instances49a++;
										instancesCounter49aDeck1++;
										
										CardCounterManager.counter49a++;
										CardCounterManager.CardCounter49a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49b == numberOfCards){
							instances49b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter49bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances49b < numberOfCards) {	
										GameObject card = Instantiate (card49b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card49b";
										card.AddComponent<OnDestroyCard49b>();
										
										instances49b++;
										instancesCounter49bDeck1++;
										
										CardCounterManager.counter49b++;
										CardCounterManager.CardCounter49b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49c == numberOfCards){
							instances49c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter49cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances49c < numberOfCards) {	
										GameObject card = Instantiate (card49c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card49c";
										card.AddComponent<OnDestroyCard49c>();
										
										instances49c++;
										instancesCounter49cDeck1++;
										
										CardCounterManager.counter49c++;
										CardCounterManager.CardCounter49c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel50"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances50 == numberOfCards){
							instances50 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter50Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances50 < numberOfCards) {	
										GameObject card = Instantiate (card50, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card50";
										card.AddComponent<OnDestroyCard50>();
										
										instances50++;
										instancesCounter50Deck1++;
										
										CardCounterManager.counter50++;
										CardCounterManager.CardCounter50();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50a == numberOfCards){
							instances50a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter50aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances50a < numberOfCards) {	
										GameObject card = Instantiate (card50a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card50a";
										card.AddComponent<OnDestroyCard50a>();
										
										instances50a++;
										instancesCounter50aDeck1++;
										
										CardCounterManager.counter50a++;
										CardCounterManager.CardCounter50a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50b == numberOfCards){
							instances50b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter50bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances50b < numberOfCards) {	
										GameObject card = Instantiate (card50b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card50b";
										card.AddComponent<OnDestroyCard50b>();
										
										instances50b++;
										instancesCounter50bDeck1++;
										
										CardCounterManager.counter50b++;
										CardCounterManager.CardCounter50b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50c == numberOfCards){
							instances50c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter50cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances50c < numberOfCards) {	
										GameObject card = Instantiate (card50c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card50c";
										card.AddComponent<OnDestroyCard50c>();
										
										instances50c++;
										instancesCounter50cDeck1++;
										
										CardCounterManager.counter50c++;
										CardCounterManager.CardCounter50c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel51"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances51 == numberOfCards){
							instances51 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter51Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances51 < numberOfCards) {	
										GameObject card = Instantiate (card51, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card51";
										card.AddComponent<OnDestroyCard51>();
										
										instances51++;
										instancesCounter51Deck1++;
										
										CardCounterManager.counter51++;
										CardCounterManager.CardCounter51();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51a == numberOfCards){
							instances51a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter51aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances51a < numberOfCards) {	
										GameObject card = Instantiate (card51a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card51a";
										card.AddComponent<OnDestroyCard51a>();
										
										instances51a++;
										instancesCounter51aDeck1++;
										
										CardCounterManager.counter51a++;
										CardCounterManager.CardCounter51a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51b == numberOfCards){
							instances51b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter51bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances51b < numberOfCards) {	
										GameObject card = Instantiate (card51b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card51b";
										card.AddComponent<OnDestroyCard51b>();
										
										instances51b++;
										instancesCounter51bDeck1++;
										
										CardCounterManager.counter51b++;
										CardCounterManager.CardCounter51b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51c == numberOfCards){
							instances51c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter51cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances51c < numberOfCards) {	
										GameObject card = Instantiate (card51c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card51c";
										card.AddComponent<OnDestroyCard51c>();
										
										instances51c++;
										instancesCounter51cDeck1++;
										
										CardCounterManager.counter51c++;
										CardCounterManager.CardCounter51c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){		
				if(hit.collider.gameObject.name == "CardModel52"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances52 == numberOfCards){
							instances52 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter52Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances52 < numberOfCards) {	
										GameObject card = Instantiate (card52, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card52";
										card.AddComponent<OnDestroyCard52>();
										
										instances52++;
										instancesCounter52Deck1++;
										
										CardCounterManager.counter52++;
										CardCounterManager.CardCounter52();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52a == numberOfCards){
							instances52a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter52aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances52a < numberOfCards) {	
										GameObject card = Instantiate (card52a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card52a";
										card.AddComponent<OnDestroyCard52a>();
										
										instances52a++;
										instancesCounter52aDeck1++;
										
										CardCounterManager.counter52a++;
										CardCounterManager.CardCounter52a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52b == numberOfCards){
							instances52b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter52bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances52b < numberOfCards) {	
										GameObject card = Instantiate (card52b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card52b";
										card.AddComponent<OnDestroyCard52b>();
										
										instances52b++;
										instancesCounter52bDeck1++;
										
										CardCounterManager.counter52b++;
										CardCounterManager.CardCounter52b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52c == numberOfCards){
							instances52c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter52cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances52c < numberOfCards) {	
										GameObject card = Instantiate (card52c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card52c";
										card.AddComponent<OnDestroyCard52c>();
										
										instances52c++;
										instancesCounter52cDeck1++;
										
										CardCounterManager.counter52c++;
										CardCounterManager.CardCounter52c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel53"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances53 == numberOfCards){
							instances53 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter53Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances53 < numberOfCards) {	
										GameObject card = Instantiate (card53, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card53";
										card.AddComponent<OnDestroyCard53>();
										
										instances53++;
										instancesCounter53Deck1++;
										
										CardCounterManager.counter53++;
										CardCounterManager.CardCounter53();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53a == numberOfCards){
							instances53a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter53aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances53a < numberOfCards) {	
										GameObject card = Instantiate (card53a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card53a";
										card.AddComponent<OnDestroyCard53a>();
										
										instances53a++;
										instancesCounter53aDeck1++;
										
										CardCounterManager.counter53a++;
										CardCounterManager.CardCounter53a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53b == numberOfCards){
							instances53b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter53bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances53b < numberOfCards) {	
										GameObject card = Instantiate (card53b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card53b";
										card.AddComponent<OnDestroyCard53b>();
										
										instances53b++;
										instancesCounter53bDeck1++;
										
										CardCounterManager.counter53b++;
										CardCounterManager.CardCounter53b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53c == numberOfCards){
							instances53c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter53cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances53c < numberOfCards) {	
										GameObject card = Instantiate (card53c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card53c";
										card.AddComponent<OnDestroyCard53c>();
										
										instances53c++;
										instancesCounter53cDeck1++;
										
										CardCounterManager.counter53c++;
										CardCounterManager.CardCounter53c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel54"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances54 == numberOfCards){
							instances54 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter54Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances54 < numberOfCards) {	
										GameObject card = Instantiate (card54, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card54";
										card.AddComponent<OnDestroyCard54>();
										
										instances54++;
										instancesCounter54Deck1++;
										
										CardCounterManager.counter54++;
										CardCounterManager.CardCounter54();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54a == numberOfCards){
							instances54a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter54aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances54a < numberOfCards) {	
										GameObject card = Instantiate (card54a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card54a";
										card.AddComponent<OnDestroyCard54a>();
										
										instances54a++;
										instancesCounter54aDeck1++;
										
										CardCounterManager.counter54a++;
										CardCounterManager.CardCounter54a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54b == numberOfCards){
							instances54b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter54bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances54b < numberOfCards) {	
										GameObject card = Instantiate (card54b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card54b";
										card.AddComponent<OnDestroyCard54b>();
										
										instances54b++;
										instancesCounter54bDeck1++;
										
										CardCounterManager.counter54b++;
										CardCounterManager.CardCounter54b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54c == numberOfCards){
							instances54c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter54cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances54c < numberOfCards) {	
										GameObject card = Instantiate (card54c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card54c";
										card.AddComponent<OnDestroyCard54c>();
										
										instances54c++;
										instancesCounter54cDeck1++;
										
										CardCounterManager.counter54c++;
										CardCounterManager.CardCounter54c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances55 == numberOfCards){
							instances55 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter55Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances55 < numberOfCards) {	
										GameObject card = Instantiate (card55, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card55";
										card.AddComponent<OnDestroyCard55>();
										
										instances55++;
										instancesCounter55Deck1++;
										
										CardCounterManager.counter55++;
										CardCounterManager.CardCounter55();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55a == numberOfCards){
							instances55a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter55aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances55a < numberOfCards) {	
										GameObject card = Instantiate (card55a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card55a";
										card.AddComponent<OnDestroyCard55a>();
										
										instances55a++;
										instancesCounter55aDeck1++;
										
										CardCounterManager.counter55a++;
										CardCounterManager.CardCounter55a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55b == numberOfCards){
							instances55b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter55bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances55b < numberOfCards) {	
										GameObject card = Instantiate (card55b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card55b";
										card.AddComponent<OnDestroyCard55b>();
										
										instances55b++;
										instancesCounter55bDeck1++;
										
										CardCounterManager.counter55b++;
										CardCounterManager.CardCounter55b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55c == numberOfCards){
							instances55c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter55cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances55c < numberOfCards) {	
										GameObject card = Instantiate (card55c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card55c";
										card.AddComponent<OnDestroyCard55c>();
										
										instances55c++;
										instancesCounter55cDeck1++;
										
										CardCounterManager.counter55c++;
										CardCounterManager.CardCounter55c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances56 == numberOfCards){
							instances56 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter56Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances56 < numberOfCards) {	
										GameObject card = Instantiate (card56, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card56";
										card.AddComponent<OnDestroyCard56>();
										
										instances56++;
										instancesCounter56Deck1++;
										
										CardCounterManager.counter56++;
										CardCounterManager.CardCounter56();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56a == numberOfCards){
							instances56a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter56aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances56a < numberOfCards) {	
										GameObject card = Instantiate (card56a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card56a";
										card.AddComponent<OnDestroyCard56a>();
										
										instances56a++;
										instancesCounter56aDeck1++;
										
										CardCounterManager.counter56a++;
										CardCounterManager.CardCounter56a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56b == numberOfCards){
							instances56b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter56bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances56b < numberOfCards) {	
										GameObject card = Instantiate (card56b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card56b";
										card.AddComponent<OnDestroyCard56b>();
										
										instances56b++;
										instancesCounter56bDeck1++;
										
										CardCounterManager.counter56b++;
										CardCounterManager.CardCounter56b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56c == numberOfCards){
							instances56c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter56cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances56c < numberOfCards) {	
										GameObject card = Instantiate (card56c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card56c";
										card.AddComponent<OnDestroyCard56c>();
										
										instances56c++;
										instancesCounter56cDeck1++;
										
										CardCounterManager.counter56c++;
										CardCounterManager.CardCounter56c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel57"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances57 == numberOfCards){
							instances57 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter57Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances57 < numberOfCards) {	
										GameObject card = Instantiate (card57, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card57";
										card.AddComponent<OnDestroyCard57>();
										
										instances57++;
										instancesCounter57Deck1++;
										
										CardCounterManager.counter57++;
										CardCounterManager.CardCounter57();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57a == numberOfCards){
							instances57a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter57aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances57a < numberOfCards) {	
										GameObject card = Instantiate (card57a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card57a";
										card.AddComponent<OnDestroyCard57a>();
										
										instances57a++;
										instancesCounter57aDeck1++;
										
										CardCounterManager.counter57a++;
										CardCounterManager.CardCounter57a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57b == numberOfCards){
							instances57b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter57bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances57b < numberOfCards) {	
										GameObject card = Instantiate (card57b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card57b";
										card.AddComponent<OnDestroyCard57b>();
										
										instances57b++;
										instancesCounter57bDeck1++;
										
										CardCounterManager.counter57b++;
										CardCounterManager.CardCounter57b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57c == numberOfCards){
							instances57c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter57cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances57c < numberOfCards) {	
										GameObject card = Instantiate (card57c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card57c";
										card.AddComponent<OnDestroyCard57c>();
										
										instances57c++;
										instancesCounter57cDeck1++;
										
										CardCounterManager.counter57c++;
										CardCounterManager.CardCounter57c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances58 == numberOfCards){
							instances58 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter58Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances58 < numberOfCards) {	
										GameObject card = Instantiate (card58, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card58";
										card.AddComponent<OnDestroyCard58>();
										
										instances58++;
										instancesCounter58Deck1++;
										
										CardCounterManager.counter58++;
										CardCounterManager.CardCounter58();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58a == numberOfCards){
							instances58a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter58aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances58a < numberOfCards) {	
										GameObject card = Instantiate (card58a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card58a";
										card.AddComponent<OnDestroyCard58a>();
										
										instances58a++;
										instancesCounter58aDeck1++;
										
										CardCounterManager.counter58a++;
										CardCounterManager.CardCounter58a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58b == numberOfCards){
							instances58b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter58bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances58b < numberOfCards) {	
										GameObject card = Instantiate (card58b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card58b";
										card.AddComponent<OnDestroyCard58b>();
										
										instances58b++;
										instancesCounter58bDeck1++;
										
										CardCounterManager.counter58b++;
										CardCounterManager.CardCounter58b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58c == numberOfCards){
							instances58c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter58cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances58c < numberOfCards) {	
										GameObject card = Instantiate (card58c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card58c";
										card.AddComponent<OnDestroyCard58c>();
										
										instances58c++;
										instancesCounter58cDeck1++;
										
										CardCounterManager.counter58c++;
										CardCounterManager.CardCounter58c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances59 == numberOfCards){
							instances59 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter59Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances59 < numberOfCards) {	
										GameObject card = Instantiate (card59, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card59";
										card.AddComponent<OnDestroyCard59>();
										
										instances59++;
										instancesCounter59Deck1++;
										
										CardCounterManager.counter59++;
										CardCounterManager.CardCounter59();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59a == numberOfCards){
							instances59a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter59aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances59a < numberOfCards) {	
										GameObject card = Instantiate (card59a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card59a";
										card.AddComponent<OnDestroyCard59a>();
										
										instances59a++;
										instancesCounter59aDeck1++;
										
										CardCounterManager.counter59a++;
										CardCounterManager.CardCounter59a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59b == numberOfCards){
							instances59b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter59bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances59b < numberOfCards) {	
										GameObject card = Instantiate (card59b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card59b";
										card.AddComponent<OnDestroyCard59b>();
										
										instances59b++;
										instancesCounter59bDeck1++;
										
										CardCounterManager.counter59b++;
										CardCounterManager.CardCounter59b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59c == numberOfCards){
							instances59c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter59cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances59c < numberOfCards) {	
										GameObject card = Instantiate (card59c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card59c";
										card.AddComponent<OnDestroyCard59c>();
										
										instances59c++;
										instancesCounter59cDeck1++;
										
										CardCounterManager.counter59c++;
										CardCounterManager.CardCounter59c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel60"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances60 == numberOfCards){
							instances60 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter60Deck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances60 < numberOfCards) {	
										GameObject card = Instantiate (card60, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card60";
										card.AddComponent<OnDestroyCard60>();
										
										instances60++;
										instancesCounter60Deck1++;
										
										CardCounterManager.counter60++;
										CardCounterManager.CardCounter60();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60a == numberOfCards){
							instances60a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter60aDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances60a < numberOfCards) {	
										GameObject card = Instantiate (card60a, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card60a";
										card.AddComponent<OnDestroyCard60a>();
										
										instances60a++;
										instancesCounter60aDeck1++;
										
										CardCounterManager.counter60a++;
										CardCounterManager.CardCounter60a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60b == numberOfCards){
							instances60b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter60bDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances60b < numberOfCards) {	
										GameObject card = Instantiate (card60b, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card60b";
										card.AddComponent<OnDestroyCard60b>();
										
										instances60b++;
										instancesCounter60bDeck1++;
										
										CardCounterManager.counter60b++;
										CardCounterManager.CardCounter60b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60c == numberOfCards){
							instances60c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher1 && spawnPoints1.Count != 0 && instancesCounter60cDeck1 < numberOfInstancesCounter){
									spawnPoint1 = spawnPoints1[Random.Range(0,spawnPoints1.Count)];
									
									while(instances60c < numberOfCards) {	
										GameObject card = Instantiate (card60c, spawnPoint1.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint1.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card60c";
										card.AddComponent<OnDestroyCard60c>();
										
										instances60c++;
										instancesCounter60cDeck1++;
										
										CardCounterManager.counter60c++;
										CardCounterManager.CardCounter60c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints1.Remove(spawnPoint1);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			#endregion
			
			
			
			
		}
		
		

		void SpawnCardsDeck2(){
			
			
			
			/** Spawn cards for the decks */
			#region SpawnCardsStuff definition
			ray = Camera.main.ScreenPointToRay(Input.mousePosition);

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1 == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter1Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card1, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card1";
										card.AddComponent<OnDestroyCard1>();
										
										instances1++;
										instancesCounter1Deck2++;
										
										CardCounterManager.counter1++;
										CardCounterManager.CardCounter1();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1a == numberOfCards){
							instances1a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
							
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter1aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances1a < numberOfCards) {	
										GameObject card = Instantiate (card1a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card1a";
										card.AddComponent<OnDestroyCard1a>();
										
										instances1a++;
										instancesCounter1aDeck2++;
										
										CardCounterManager.counter1a++;
										CardCounterManager.CardCounter1a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1b == numberOfCards){
							instances1b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter1bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances1b < numberOfCards) {	
										GameObject card = Instantiate (card1b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card1b";
										card.AddComponent<OnDestroyCard1b>();
										
										instances1b++;
										instancesCounter1bDeck2++;
										
										CardCounterManager.counter1b++;
										CardCounterManager.CardCounter1b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1c == numberOfCards){
							instances1c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter1cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances1c < numberOfCards) {	
										GameObject card = Instantiate (card1c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card1c";
										card.AddComponent<OnDestroyCard1c>();
										
										instances1c++;
										instancesCounter1cDeck2++;
										
										CardCounterManager.counter1c++;
										CardCounterManager.CardCounter1c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			 
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances2 == numberOfCards){
							instances2 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter2Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances2 < numberOfCards) {	
										GameObject card = Instantiate (card2, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card2";
										card.AddComponent<OnDestroyCard2>();
										
										instances2++;
										instancesCounter2Deck2++;
										
										CardCounterManager.counter2++;
										CardCounterManager.CardCounter2();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2a == numberOfCards){
							instances2a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter2aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances2a < numberOfCards) {	
										GameObject card = Instantiate (card2a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card2a";
										card.AddComponent<OnDestroyCard2a>();
										
										instances2a++;
										instancesCounter2aDeck2++;
										
										CardCounterManager.counter2a++;
										CardCounterManager.CardCounter2a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2b == numberOfCards){
							instances2b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter2bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances2b < numberOfCards) {	
										GameObject card = Instantiate (card2b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card2b";
										card.AddComponent<OnDestroyCard2b>();
										
										instances2b++;
										instancesCounter2bDeck2++;
										
										CardCounterManager.counter2b++;
										CardCounterManager.CardCounter2b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2c == numberOfCards){
							instances2c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter2cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances2c < numberOfCards) {	
										GameObject card = Instantiate (card2c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card2c";
										card.AddComponent<OnDestroyCard2c>();
										
										instances2c++;
										instancesCounter2cDeck2++;
										
										CardCounterManager.counter2c++;
										CardCounterManager.CardCounter2c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel3"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances3 == numberOfCards){
							instances3 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter3Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances3 < numberOfCards) {	
										GameObject card = Instantiate (card3, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card3";
										card.AddComponent<OnDestroyCard3>();
										
										instances3++;
										instancesCounter3Deck2++;
										
										CardCounterManager.counter3++;
										CardCounterManager.CardCounter3();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3a == numberOfCards){
							instances3a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter3aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances3a < numberOfCards) {	
										GameObject card = Instantiate (card3a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card3a";
										card.AddComponent<OnDestroyCard3a>();
										
										instances3a++;
										instancesCounter3aDeck2++;
										
										CardCounterManager.counter3a++;
										CardCounterManager.CardCounter3a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3b == numberOfCards){
							instances3b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter3bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances3b < numberOfCards) {	
										GameObject card = Instantiate (card3b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card3b";
										card.AddComponent<OnDestroyCard3b>();
										
										instances3b++;
										instancesCounter3bDeck2++;
										
										CardCounterManager.counter3b++;
										CardCounterManager.CardCounter3b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}

							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3c == numberOfCards){
							instances3c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter3cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances3c < numberOfCards) {	
										GameObject card = Instantiate (card3c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card3c";
										card.AddComponent<OnDestroyCard3c>();
										
										instances3c++;
										instancesCounter3cDeck2++;
										
										CardCounterManager.counter3c++;
										CardCounterManager.CardCounter3c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances4 == numberOfCards){
							instances4 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter4Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances4 < numberOfCards) {	
										GameObject card = Instantiate (card4, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card4";
										card.AddComponent<OnDestroyCard4>();
										
										instances4++;
										instancesCounter4Deck2++;
										
										CardCounterManager.counter4++;
										CardCounterManager.CardCounter4();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4a == numberOfCards){
							instances4a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter4aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances4a < numberOfCards) {	
										GameObject card = Instantiate (card4a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card4a";
										card.AddComponent<OnDestroyCard4a>();
										
										instances4a++;
										instancesCounter4aDeck2++;
										
										CardCounterManager.counter4a++;
										CardCounterManager.CardCounter4a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4b == numberOfCards){
							instances4b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter4bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances4b < numberOfCards) {	
										GameObject card = Instantiate (card4b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card4b";
										card.AddComponent<OnDestroyCard4b>();
										
										instances4b++;
										instancesCounter4bDeck2++;
										
										CardCounterManager.counter4b++;
										CardCounterManager.CardCounter4b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4c == numberOfCards){
							instances4c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter4cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances4c < numberOfCards) {	
										GameObject card = Instantiate (card4c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card4c";
										card.AddComponent<OnDestroyCard4c>();
										
										instances4c++;
										instancesCounter4cDeck2++;
										
										CardCounterManager.counter4c++;
										CardCounterManager.CardCounter4c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances5 == numberOfCards){
							instances5 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter5Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances5 < numberOfCards) {	
										GameObject card = Instantiate (card5, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card5";
										card.AddComponent<OnDestroyCard5>();
										
										instances5++;
										instancesCounter5Deck2++;
										
										CardCounterManager.counter5++;
										CardCounterManager.CardCounter5();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
							
							}
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5a == numberOfCards){
							instances5a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter5aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances5a < numberOfCards) {	
										GameObject card = Instantiate (card5a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card5a";
										card.AddComponent<OnDestroyCard5a>();
										
										instances5a++;
										instancesCounter5aDeck2++;
										
										CardCounterManager.counter5a++;
										CardCounterManager.CardCounter5a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5b == numberOfCards){
							instances5b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter5bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances5b < numberOfCards) {	
										GameObject card = Instantiate (card5b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card5b";
										card.AddComponent<OnDestroyCard5b>();
										
										instances5b++;
										instancesCounter5bDeck2++;
										
										CardCounterManager.counter5b++;
										CardCounterManager.CardCounter5b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5c == numberOfCards){
							instances5c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter5cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances5c < numberOfCards) {	
										GameObject card = Instantiate (card5c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated1Card5c";
										card.AddComponent<OnDestroyCard5c>();
										
										instances5c++;
										instancesCounter5cDeck2++;
										
										CardCounterManager.counter5c++;
										CardCounterManager.CardCounter5c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances6 == numberOfCards){
							instances6 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter6Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances6 < numberOfCards) {	
										GameObject card = Instantiate (card6, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card6";
										card.AddComponent<OnDestroyCard6>();
										
										instances6++;
										instancesCounter6Deck2++;
										
										CardCounterManager.counter6++;
										CardCounterManager.CardCounter6();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6a == numberOfCards){
							instances6a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter6aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances6a < numberOfCards) {	
										GameObject card = Instantiate (card6a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card6a";
										card.AddComponent<OnDestroyCard6a>();
										
										instances6a++;
										instancesCounter6aDeck2++;
										
										CardCounterManager.counter6a++;
										CardCounterManager.CardCounter6a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6b == numberOfCards){
							instances6b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter6bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances6b < numberOfCards) {	
										GameObject card = Instantiate (card6b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card6b";
										card.AddComponent<OnDestroyCard6b>();
										
										instances6b++;
										instancesCounter6bDeck2++;
										
										CardCounterManager.counter6b++;
										CardCounterManager.CardCounter6b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6c == numberOfCards){
							instances6c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter6cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances6c < numberOfCards) {	
										GameObject card = Instantiate (card6c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card6c";
										card.AddComponent<OnDestroyCard6c>();
										
										instances6c++;
										instancesCounter6cDeck2++;
										
										CardCounterManager.counter6c++;
										CardCounterManager.CardCounter6c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances7 == numberOfCards){
							instances7 = 0;
						}
					
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter7Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances7 < numberOfCards) {	
										GameObject card = Instantiate (card7, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card7";
										card.AddComponent<OnDestroyCard7>();
										
										instances7++;
										instancesCounter7Deck2++;
										
										CardCounterManager.counter7++;
										CardCounterManager.CardCounter7();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7a == numberOfCards){
							instances7a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter7aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances7a < numberOfCards) {	
										GameObject card = Instantiate (card7a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card7a";
										card.AddComponent<OnDestroyCard7a>();
										
										instances7a++;
										instancesCounter7aDeck2++;
										
										CardCounterManager.counter7a++;
										CardCounterManager.CardCounter7a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7b == numberOfCards){
							instances7b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter7bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances7b < numberOfCards) {	
										GameObject card = Instantiate (card7b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card7b";
										card.AddComponent<OnDestroyCard7b>();
										
										instances7b++;
										instancesCounter7bDeck2++;
										
										CardCounterManager.counter7b++;
										CardCounterManager.CardCounter7b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7c == numberOfCards){
							instances7c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter7cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances7c < numberOfCards) {	
										GameObject card = Instantiate (card7c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card7c";
										card.AddComponent<OnDestroyCard7c>();
										
										instances7c++;
										instancesCounter7cDeck2++;
										
										CardCounterManager.counter7c++;
										CardCounterManager.CardCounter7c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances8 == numberOfCards){
							instances8 = 0;
						}
					
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter8Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances8 < numberOfCards) {	
										GameObject card = Instantiate (card8, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card8";
										card.AddComponent<OnDestroyCard8>();
										
										instances8++;
										instancesCounter8Deck2++;
										
										CardCounterManager.counter8++;
										CardCounterManager.CardCounter8();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8a == numberOfCards){
							instances8a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter8aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances8a < numberOfCards) {	
										GameObject card = Instantiate (card8a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card8a";
										card.AddComponent<OnDestroyCard8a>();
										
										instances8a++;
										instancesCounter8aDeck2++;
										
										CardCounterManager.counter8a++;
										CardCounterManager.CardCounter8a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8b == numberOfCards){
							instances8b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter8bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances8b < numberOfCards) {	
										GameObject card = Instantiate (card8b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card8b";
										card.AddComponent<OnDestroyCard8b>();
										
										instances8b++;
										instancesCounter8bDeck2++;
										
										CardCounterManager.counter8b++;
										CardCounterManager.CardCounter8b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8c == numberOfCards){
							instances8c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter8cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances8c < numberOfCards) {	
										GameObject card = Instantiate (card8c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card8c";
										card.AddComponent<OnDestroyCard8c>();
										
										instances8c++;
										instancesCounter8cDeck2++;
										
										CardCounterManager.counter8c++;
										CardCounterManager.CardCounter8c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel9"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances9 == numberOfCards){
							instances9 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter9Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances9 < numberOfCards) {	
										GameObject card = Instantiate (card9, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card9";
										card.AddComponent<OnDestroyCard9>();
										
										instances9++;
										instancesCounter9Deck2++;
										
										CardCounterManager.counter9++;
										CardCounterManager.CardCounter9();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9a == numberOfCards){
							instances9a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter9aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances9a < numberOfCards) {	
										GameObject card = Instantiate (card9a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card9a";
										card.AddComponent<OnDestroyCard9a>();
										
										instances9a++;
										instancesCounter9aDeck2++;
										
										CardCounterManager.counter9a++;
										CardCounterManager.CardCounter9a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9b == numberOfCards){
							instances9b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter9bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances9b < numberOfCards) {	
										GameObject card = Instantiate (card9b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card9b";
										card.AddComponent<OnDestroyCard9b>();
										
										instances9b++;
										instancesCounter9bDeck2++;
										
										CardCounterManager.counter9b++;
										CardCounterManager.CardCounter9b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9c == numberOfCards){
							instances9c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter9cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances9c < numberOfCards) {	
										GameObject card = Instantiate (card9c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card9c";
										card.AddComponent<OnDestroyCard9c>();
										
										instances9c++;
										instancesCounter9cDeck2++;
										
										CardCounterManager.counter9c++;
										CardCounterManager.CardCounter9c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances10 == numberOfCards){
							instances10 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter10Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances10 < numberOfCards) {	
										GameObject card = Instantiate (card10, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card10";
										card.AddComponent<OnDestroyCard10>();
										
										instances10++;
										instancesCounter10Deck2++;
										
										CardCounterManager.counter10++;
										CardCounterManager.CardCounter10();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10a == numberOfCards){
							instances10a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter10aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances10a < numberOfCards) {	
										GameObject card = Instantiate (card10a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card10a";
										card.AddComponent<OnDestroyCard10a>();
										
										instances10a++;
										instancesCounter10aDeck2++;
										
										CardCounterManager.counter10a++;
										CardCounterManager.CardCounter10a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10b == numberOfCards){
							instances10b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter10bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances10b < numberOfCards) {	
										GameObject card = Instantiate (card10b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card10b";
										card.AddComponent<OnDestroyCard10b>();
										
										instances10b++;
										instancesCounter10bDeck2++;
										
										CardCounterManager.counter10b++;
										CardCounterManager.CardCounter10b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10c == numberOfCards){
							instances10c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter10cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances10c < numberOfCards) {	
										GameObject card = Instantiate (card10c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card10c";
										card.AddComponent<OnDestroyCard10c>();
										
										instances10c++;
										instancesCounter10cDeck2++;
										
										CardCounterManager.counter10c++;
										CardCounterManager.CardCounter10c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel11"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances11 == numberOfCards){
							instances11 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter11Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances11 < numberOfCards) {	
										GameObject card = Instantiate (card11, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card11";
										card.AddComponent<OnDestroyCard11>();
										
										instances11++;
										instancesCounter11Deck2++;
										
										CardCounterManager.counter11++;
										CardCounterManager.CardCounter11();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
					
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11a == numberOfCards){
							instances11a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter11aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances11a < numberOfCards) {	
										GameObject card = Instantiate (card11a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card11a";
										card.AddComponent<OnDestroyCard11a>();
										
										instances11a++;
										instancesCounter11aDeck2++;
										
										CardCounterManager.counter11a++;
										CardCounterManager.CardCounter11a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11b == numberOfCards){
							instances11b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter11bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances11b < numberOfCards) {	
										GameObject card = Instantiate (card11b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card11b";
										card.AddComponent<OnDestroyCard11b>();
										
										instances11b++;
										instancesCounter11bDeck2++;
										
										CardCounterManager.counter11b++;
										CardCounterManager.CardCounter11b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11c == numberOfCards){
							instances11c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter11cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances11c < numberOfCards) {	
										GameObject card = Instantiate (card11c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card11c";
										card.AddComponent<OnDestroyCard11c>();
										
										instances11c++;
										instancesCounter11cDeck2++;
										
										CardCounterManager.counter11c++;
										CardCounterManager.CardCounter11c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel12"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances12 == numberOfCards){
							instances12 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter12Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances12 < numberOfCards) {	
										GameObject card = Instantiate (card12, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card12";
										card.AddComponent<OnDestroyCard12>();
										
										instances12++;
										instancesCounter12Deck2++;
										
										CardCounterManager.counter12++;
										CardCounterManager.CardCounter12();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12a == numberOfCards){
							instances12a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter12aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances12a < numberOfCards) {	
										GameObject card = Instantiate (card12a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card12a";
										card.AddComponent<OnDestroyCard12a>();
										
										instances12a++;
										instancesCounter12aDeck2++;
										
										CardCounterManager.counter12a++;
										CardCounterManager.CardCounter12a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12b == numberOfCards){
							instances12b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter12bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances12b < numberOfCards) {	
										GameObject card = Instantiate (card12b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card12b";
										card.AddComponent<OnDestroyCard12b>();
										
										instances12b++;
										instancesCounter12bDeck2++;
										
										CardCounterManager.counter12b++;
										CardCounterManager.CardCounter12b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12c == numberOfCards){
							instances12c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter12cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances12c < numberOfCards) {	
										GameObject card = Instantiate (card12c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card12c";
										card.AddComponent<OnDestroyCard12c>();
										
										instances12c++;
										instancesCounter12cDeck2++;
										
										CardCounterManager.counter12c++;
										CardCounterManager.CardCounter12c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel13"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances13 == numberOfCards){
							instances13 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter13Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances13 < numberOfCards) {	
										GameObject card = Instantiate (card13, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card13";
										card.AddComponent<OnDestroyCard13>();
										
										instances13++;
										instancesCounter13Deck2++;
										
										CardCounterManager.counter13++;
										CardCounterManager.CardCounter13();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
							lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13a == numberOfCards){
							instances13a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter13aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances13a < numberOfCards) {	
										GameObject card = Instantiate (card13a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card13a";
										card.AddComponent<OnDestroyCard13a>();
										
										instances13a++;
										instancesCounter13aDeck2++;
										
										CardCounterManager.counter13a++;
										CardCounterManager.CardCounter13a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13b == numberOfCards){
							instances13b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter13bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances13b < numberOfCards) {	
										GameObject card = Instantiate (card13b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card13b";
										card.AddComponent<OnDestroyCard13b>();
										
										instances13b++;
										instancesCounter13bDeck2++;
										
										CardCounterManager.counter13b++;
										CardCounterManager.CardCounter13b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13c == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter13cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances13c < numberOfCards) {	
										GameObject card = Instantiate (card13c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card13c";
										card.AddComponent<OnDestroyCard13c>();
										
										instances13c++;
										instancesCounter13cDeck2++;
										
										CardCounterManager.counter13c++;
										CardCounterManager.CardCounter13c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel14"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances14 == numberOfCards){
							instances14 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter14Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances14 < numberOfCards) {	
										GameObject card = Instantiate (card14, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card14";
										card.AddComponent<OnDestroyCard14>();
										
										instances14++;
										instancesCounter14Deck2++;
										
										CardCounterManager.counter14++;
										CardCounterManager.CardCounter14();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14a == numberOfCards){
							instances14a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter14aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances14a < numberOfCards) {	
										GameObject card = Instantiate (card14a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card14a";
										card.AddComponent<OnDestroyCard14a>();
										
										instances14a++;
										instancesCounter14aDeck2++;
										
										CardCounterManager.counter14a++;
										CardCounterManager.CardCounter14a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14b == numberOfCards){
							instances14b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter14bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances14b < numberOfCards) {	
										GameObject card = Instantiate (card14b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card14b";
										card.AddComponent<OnDestroyCard14b>();
										
										instances14b++;
										instancesCounter14bDeck2++;
										
										CardCounterManager.counter14b++;
										CardCounterManager.CardCounter14b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14c == numberOfCards){
							instances14c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter14cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances14c < numberOfCards) {	
										GameObject card = Instantiate (card14c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card14c";
										card.AddComponent<OnDestroyCard14c>();
										
										instances14c++;
										instancesCounter14cDeck2++;
										
										CardCounterManager.counter14c++;
										CardCounterManager.CardCounter14c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel15"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances15 == numberOfCards){
							instances15 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter15Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances15 < numberOfCards) {	
										GameObject card = Instantiate (card15, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card15";
										card.AddComponent<OnDestroyCard15>();
										
										instances15++;
										instancesCounter15Deck2++;
										
										CardCounterManager.counter15++;
										CardCounterManager.CardCounter15();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15a == numberOfCards){
							instances15a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter15aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances15a < numberOfCards) {	
										GameObject card = Instantiate (card15a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card15a";
										card.AddComponent<OnDestroyCard15a>();
										
										instances15a++;
										instancesCounter15aDeck2++;
										
										CardCounterManager.counter15a++;
										CardCounterManager.CardCounter15a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15b == numberOfCards){
							instances15b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter15bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances15b < numberOfCards) {	
										GameObject card = Instantiate (card15b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card15b";
										card.AddComponent<OnDestroyCard15b>();
										
										instances15b++;
										instancesCounter15bDeck2++;
										
										CardCounterManager.counter15b++;
										CardCounterManager.CardCounter15b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15c == numberOfCards){
							instances15c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter15cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances15c < numberOfCards) {	
										GameObject card = Instantiate (card15c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card15c";
										card.AddComponent<OnDestroyCard15c>();
										
										instances15c++;
										instancesCounter15cDeck2++;
										
										CardCounterManager.counter15c++;
										CardCounterManager.CardCounter15c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances16 == numberOfCards){
							instances16 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter16Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances16 < numberOfCards) {	
										GameObject card = Instantiate (card16, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card16";
										card.AddComponent<OnDestroyCard16>();
										
										instances16++;
										instancesCounter16Deck2++;
										
										CardCounterManager.counter16++;
										CardCounterManager.CardCounter16();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16a == numberOfCards){
							instances16a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter16aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances16a < numberOfCards) {	
										GameObject card = Instantiate (card16a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card16a";
										card.AddComponent<OnDestroyCard16a>();
										
										instances16a++;
										instancesCounter16aDeck2++;
										
										CardCounterManager.counter16a++;
										CardCounterManager.CardCounter16a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16b == numberOfCards){
							instances16b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter16bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances16b < numberOfCards) {	
										GameObject card = Instantiate (card16b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card16b";
										card.AddComponent<OnDestroyCard16b>();
										
										instances16b++;
										instancesCounter16bDeck2++;
										
										CardCounterManager.counter16b++;
										CardCounterManager.CardCounter16b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16c == numberOfCards){
							instances16c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter16cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances16c < numberOfCards) {	
										GameObject card = Instantiate (card16c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card16c";
										card.AddComponent<OnDestroyCard16c>();
										
										instances16c++;
										instancesCounter16cDeck2++;
										
										CardCounterManager.counter16c++;
										CardCounterManager.CardCounter16c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel17"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances17 == numberOfCards){
							instances17 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter17Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances17 < numberOfCards) {	
										GameObject card = Instantiate (card17, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card17";
										card.AddComponent<OnDestroyCard17>();
										
										instances17++;
										instancesCounter17Deck2++;
										
										CardCounterManager.counter17++;
										CardCounterManager.CardCounter17();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17a == numberOfCards){
							instances17a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter17aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances17a < numberOfCards) {	
										GameObject card = Instantiate (card17a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card17a";
										card.AddComponent<OnDestroyCard17a>();
										
										instances17a++;
										instancesCounter17aDeck2++;
										
										CardCounterManager.counter17a++;
										CardCounterManager.CardCounter17a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17b == numberOfCards){
							instances17b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter17bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances17b < numberOfCards) {	
										GameObject card = Instantiate (card17b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card17b";
										card.AddComponent<OnDestroyCard17b>();
										
										instances17b++;
										instancesCounter17bDeck2++;
										
										CardCounterManager.counter17b++;
										CardCounterManager.CardCounter17b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17c == numberOfCards){
							instances17c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter17cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances17c < numberOfCards) {	
										GameObject card = Instantiate (card17c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card17c";
										card.AddComponent<OnDestroyCard17c>();
										
										instances17c++;
										instancesCounter17cDeck2++;
										
										CardCounterManager.counter17c++;
										CardCounterManager.CardCounter17c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances18 == numberOfCards){
							instances18 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter18Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances18 < numberOfCards) {	
										GameObject card = Instantiate (card18, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card18";
										card.AddComponent<OnDestroyCard18>();
										
										instances18++;
										instancesCounter18Deck2++;
										
										CardCounterManager.counter18++;
										CardCounterManager.CardCounter18();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18a == numberOfCards){
							instances18a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter18aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances18a < numberOfCards) {	
										GameObject card = Instantiate (card18a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card18a";
										card.AddComponent<OnDestroyCard18a>();
										
										instances18a++;
										instancesCounter18aDeck2++;
										
										CardCounterManager.counter18a++;
										CardCounterManager.CardCounter18a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18b == numberOfCards){
							instances18b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter18bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances18b < numberOfCards) {	
										GameObject card = Instantiate (card18b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card18b";
										card.AddComponent<OnDestroyCard18b>();
										
										instances18b++;
										instancesCounter18bDeck2++;
										
										CardCounterManager.counter18b++;
										CardCounterManager.CardCounter18b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18c == numberOfCards){
							instances18c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter18cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances18c < numberOfCards) {	
										GameObject card = Instantiate (card18c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card18c";
										card.AddComponent<OnDestroyCard18c>();
										
										instances18c++;
										instancesCounter18cDeck2++;
										
										CardCounterManager.counter18c++;
										CardCounterManager.CardCounter18c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel19"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances19 == numberOfCards){
							instances19 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter19Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances19 < numberOfCards) {	
										GameObject card = Instantiate (card19, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card19";
										card.AddComponent<OnDestroyCard19>();
										
										instances19++;
										instancesCounter19Deck2++;
										
										CardCounterManager.counter19++;
										CardCounterManager.CardCounter19();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19a == numberOfCards){
							instances19a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter19aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances19a < numberOfCards) {	
										GameObject card = Instantiate (card19a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card19a";
										card.AddComponent<OnDestroyCard19a>();
										
										instances19a++;
										instancesCounter19aDeck2++;
										
										CardCounterManager.counter19a++;
										CardCounterManager.CardCounter19a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19b == numberOfCards){
							instances19b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter19bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances19b < numberOfCards) {	
										GameObject card = Instantiate (card19b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card19b";
										card.AddComponent<OnDestroyCard19b>();
										
										instances19b++;
										instancesCounter19bDeck2++;
										
										CardCounterManager.counter19b++;
										CardCounterManager.CardCounter19b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19c == numberOfCards){
							instances19c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter19cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances19c < numberOfCards) {	
										GameObject card = Instantiate (card19c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card19c";
										card.AddComponent<OnDestroyCard19c>();
										
										instances19c++;
										instancesCounter19cDeck2++;
										
										CardCounterManager.counter19c++;
										CardCounterManager.CardCounter19c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel20"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances20 == numberOfCards){
							instances20 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter20Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances20 < numberOfCards) {	
										GameObject card = Instantiate (card20, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card20";
										card.AddComponent<OnDestroyCard20>();
										
										instances20++;
										instancesCounter20Deck2++;
										
										CardCounterManager.counter20++;
										CardCounterManager.CardCounter20();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances20a == numberOfCards){
							instances20a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter20aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances20a < numberOfCards) {	
										GameObject card = Instantiate (card20a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card20a";
										card.AddComponent<OnDestroyCard20a>();
										
										instances20a++;
										instancesCounter20aDeck2++;
										
										CardCounterManager.counter20a++;
										CardCounterManager.CardCounter20a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1 == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter20bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances20b < numberOfCards) {	
										GameObject card = Instantiate (card20b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card20b";
										card.AddComponent<OnDestroyCard20b>();
										
										instances20b++;
										instancesCounter20bDeck2++;
										
										CardCounterManager.counter20b++;
										CardCounterManager.CardCounter20b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances20c == numberOfCards){
							instances20c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter20cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances20c < numberOfCards) {	
										GameObject card = Instantiate (card20c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card20c";
										card.AddComponent<OnDestroyCard20c>();
										
										instances20c++;
										instancesCounter20cDeck2++;
										
										CardCounterManager.counter20c++;
										CardCounterManager.CardCounter20c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel21"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances21 == numberOfCards){
							instances21 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter21Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances21 < numberOfCards) {	
										GameObject card = Instantiate (card21, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card21";
										card.AddComponent<OnDestroyCard21>();
										
										instances21++;
										instancesCounter21Deck2++;
										
										CardCounterManager.counter21++;
										CardCounterManager.CardCounter21();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21a == numberOfCards){
							instances21a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter21aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances21a < numberOfCards) {	
										GameObject card = Instantiate (card21a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card21a";
										card.AddComponent<OnDestroyCard21a>();
										
										instances21a++;
										instancesCounter21aDeck2++;
										
										CardCounterManager.counter21a++;
										CardCounterManager.CardCounter21a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21b == numberOfCards){
							instances21b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter21bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances21b < numberOfCards) {	
										GameObject card = Instantiate (card21b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card21b";
										card.AddComponent<OnDestroyCard21b>();
										
										instances21b++;
										instancesCounter21bDeck2++;
										
										CardCounterManager.counter21b++;
										CardCounterManager.CardCounter21b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21c == numberOfCards){
							instances21c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter21cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances21c < numberOfCards) {	
										GameObject card = Instantiate (card21c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card21c";
										card.AddComponent<OnDestroyCard21c>();
										
										instances21c++;
										instancesCounter21cDeck2++;
										
										CardCounterManager.counter21c++;
										CardCounterManager.CardCounter21c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){		
				if(hit.collider.gameObject.name == "CardModel22"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances22 == numberOfCards){
							instances22 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter22Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances22 < numberOfCards) {	
										GameObject card = Instantiate (card22, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card22";
										card.AddComponent<OnDestroyCard22>();
										
										instances22++;
										instancesCounter22Deck2++;
										
										CardCounterManager.counter22++;
										CardCounterManager.CardCounter22();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22a == numberOfCards){
							instances22a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter22aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances22a < numberOfCards) {	
										GameObject card = Instantiate (card22a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card22a";
										card.AddComponent<OnDestroyCard22a>();
										
										instances22a++;
										instancesCounter22aDeck2++;
										
										CardCounterManager.counter22a++;
										CardCounterManager.CardCounter22a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22b == numberOfCards){
							instances22b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter22bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances22b < numberOfCards) {	
										GameObject card = Instantiate (card22b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card22b";
										card.AddComponent<OnDestroyCard22b>();
										
										instances22b++;
										instancesCounter22bDeck2++;
										
										CardCounterManager.counter22b++;
										CardCounterManager.CardCounter22b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22c == numberOfCards){
							instances22c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter22cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances22c < numberOfCards) {	
										GameObject card = Instantiate (card22c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card22c";
										card.AddComponent<OnDestroyCard22c>();
										
										instances22c++;
										instancesCounter22cDeck2++;
										
										CardCounterManager.counter22c++;
										CardCounterManager.CardCounter22c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel23"){	
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances23 == numberOfCards){
							instances23 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter23Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances23 < numberOfCards) {	
										GameObject card = Instantiate (card23, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card23";
										card.AddComponent<OnDestroyCard23>();
										
										instances23++;
										instancesCounter23Deck2++;
										
										CardCounterManager.counter23++;
										CardCounterManager.CardCounter23();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23a == numberOfCards){
							instances23a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter23aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances23a < numberOfCards) {	
										GameObject card = Instantiate (card23a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card23a";
										card.AddComponent<OnDestroyCard23a>();
										
										instances23a++;
										instancesCounter23aDeck2++;
										
										CardCounterManager.counter23a++;
										CardCounterManager.CardCounter23a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23b == numberOfCards){
							instances23b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter23bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances23b < numberOfCards) {	
										GameObject card = Instantiate (card23b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card23b";
										card.AddComponent<OnDestroyCard23b>();
										
										instances23b++;
										instancesCounter23bDeck2++;
										
										CardCounterManager.counter23b++;
										CardCounterManager.CardCounter23b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23c == numberOfCards){
							instances23c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter23cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances23c < numberOfCards) {	
										GameObject card = Instantiate (card23c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card23c";
										card.AddComponent<OnDestroyCard23c>();
										
										instances23c++;
										instancesCounter23cDeck2++;
										
										CardCounterManager.counter23c++;
										CardCounterManager.CardCounter23c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel24"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances24 == numberOfCards){
							instances24 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter24Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances24 < numberOfCards) {	
										GameObject card = Instantiate (card24, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card24";
										card.AddComponent<OnDestroyCard24>();
										
										instances24++;
										instancesCounter24Deck2++;
										
										CardCounterManager.counter24++;
										CardCounterManager.CardCounter24();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24a == numberOfCards){
							instances24a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter24aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances24a < numberOfCards) {	
										GameObject card = Instantiate (card24a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card24a";
										card.AddComponent<OnDestroyCard24a>();
										
										instances24a++;
										instancesCounter24aDeck2++;
										
										CardCounterManager.counter24a++;
										CardCounterManager.CardCounter24a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24b == numberOfCards){
							instances24b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter24bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances24b < numberOfCards) {	
										GameObject card = Instantiate (card24b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card24b";
										card.AddComponent<OnDestroyCard24b>();
										
										instances24b++;
										instancesCounter24bDeck2++;
										
										CardCounterManager.counter24b++;
										CardCounterManager.CardCounter24b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24c == numberOfCards){
							instances24c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter24cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances24c < numberOfCards) {	
										GameObject card = Instantiate (card24c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card24c";
										card.AddComponent<OnDestroyCard24c>();
										
										instances24c++;
										instancesCounter24cDeck2++;
										
										CardCounterManager.counter24c++;
										CardCounterManager.CardCounter24c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances25 == numberOfCards){
							instances25 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter25Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances25 < numberOfCards) {	
										GameObject card = Instantiate (card25, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card25";
										card.AddComponent<OnDestroyCard25>();
										
										instances25++;
										instancesCounter25Deck2++;
										
										CardCounterManager.counter25++;
										CardCounterManager.CardCounter25();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25a == numberOfCards){
							instances25a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter25aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances25a < numberOfCards) {	
										GameObject card = Instantiate (card25a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card25a";
										card.AddComponent<OnDestroyCard25a>();
										
										instances25a++;
										instancesCounter25aDeck2++;
										
										CardCounterManager.counter25a++;
										CardCounterManager.CardCounter25a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25b == numberOfCards){
							instances25b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter25bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances25b < numberOfCards) {	
										GameObject card = Instantiate (card25b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card25b";
										card.AddComponent<OnDestroyCard25b>();
										
										instances25b++;
										instancesCounter25bDeck2++;
										
										CardCounterManager.counter25b++;
										CardCounterManager.CardCounter25b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25c == numberOfCards){
							instances25c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter25cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances25c < numberOfCards) {	
										GameObject card = Instantiate (card25c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card25c";
										card.AddComponent<OnDestroyCard25c>();
										
										instances25c++;
										instancesCounter25cDeck2++;
										
										CardCounterManager.counter25c++;
										CardCounterManager.CardCounter25c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances26 == numberOfCards){
							instances26 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter26Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances26 < numberOfCards) {	
										GameObject card = Instantiate (card26, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card26";
										card.AddComponent<OnDestroyCard26>();
										
										instances26++;
										instancesCounter26Deck2++;
										
										CardCounterManager.counter26++;
										CardCounterManager.CardCounter26();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26a == numberOfCards){
							instances26a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter26aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances26a < numberOfCards) {	
										GameObject card = Instantiate (card26a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card26a";
										card.AddComponent<OnDestroyCard26a>();
										
										instances26a++;
										instancesCounter26aDeck2++;
										
										CardCounterManager.counter26a++;
										CardCounterManager.CardCounter26a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26b == numberOfCards){
							instances26b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter26bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances26b < numberOfCards) {	
										GameObject card = Instantiate (card26b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card26b";
										card.AddComponent<OnDestroyCard26b>();
										
										instances26b++;
										instancesCounter26bDeck2++;
										
										CardCounterManager.counter26b++;
										CardCounterManager.CardCounter26b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26c == numberOfCards){
							instances26c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter26cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances26c < numberOfCards) {	
										GameObject card = Instantiate (card26c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card26c";
										card.AddComponent<OnDestroyCard26c>();
										
										instances26c++;
										instancesCounter26cDeck2++;
										
										CardCounterManager.counter26c++;
										CardCounterManager.CardCounter26c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel27"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances27 == numberOfCards){
							instances27 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter27Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances27 < numberOfCards) {	
										GameObject card = Instantiate (card27, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card27";
										card.AddComponent<OnDestroyCard27>();
										
										instances27++;
										instancesCounter27Deck2++;
										
										CardCounterManager.counter27++;
										CardCounterManager.CardCounter27();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27a == numberOfCards){
							instances27a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter27aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances27a < numberOfCards) {	
										GameObject card = Instantiate (card27a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card27a";
										card.AddComponent<OnDestroyCard27a>();
										
										instances27a++;
										instancesCounter27aDeck2++;
										
										CardCounterManager.counter27a++;
										CardCounterManager.CardCounter27a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27b == numberOfCards){
							instances27b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter27bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances27b < numberOfCards) {	
										GameObject card = Instantiate (card27b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card27b";
										card.AddComponent<OnDestroyCard27b>();
										
										instances27b++;
										instancesCounter27bDeck2++;
										
										CardCounterManager.counter27b++;
										CardCounterManager.CardCounter27b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27c == numberOfCards){
							instances27c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter27cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances27c < numberOfCards) {	
										GameObject card = Instantiate (card27c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card27c";
										card.AddComponent<OnDestroyCard27c>();
										
										instances27c++;
										instancesCounter27cDeck2++;
										
										CardCounterManager.counter27c++;
										CardCounterManager.CardCounter27c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances28 == numberOfCards){
							instances28 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter28Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances28 < numberOfCards) {	
										GameObject card = Instantiate (card28, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card28";
										card.AddComponent<OnDestroyCard28>();
										
										instances28++;
										instancesCounter28Deck2++;
										
										CardCounterManager.counter28++;
										CardCounterManager.CardCounter28();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28a == numberOfCards){
							instances28a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter28aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances28a < numberOfCards) {	
										GameObject card = Instantiate (card28a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card28a";
										card.AddComponent<OnDestroyCard28a>();
										
										instances28a++;
										instancesCounter28aDeck2++;
										
										CardCounterManager.counter28a++;
										CardCounterManager.CardCounter28a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28b == numberOfCards){
							instances28b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter28bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances28b < numberOfCards) {	
										GameObject card = Instantiate (card28b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card28b";
										card.AddComponent<OnDestroyCard28b>();
										
										instances28b++;
										instancesCounter28bDeck2++;
										
										CardCounterManager.counter28b++;
										CardCounterManager.CardCounter28b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28c == numberOfCards){
							instances28c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter28cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances28c < numberOfCards) {	
										GameObject card = Instantiate (card28c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card28c";
										card.AddComponent<OnDestroyCard28c>();
										
										instances28c++;
										instancesCounter28cDeck2++;
										
										CardCounterManager.counter28c++;
										CardCounterManager.CardCounter28c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances29 == numberOfCards){
							instances29 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter29Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances29 < numberOfCards) {	
										GameObject card = Instantiate (card29, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card29";
										card.AddComponent<OnDestroyCard29>();
										
										instances29++;
										instancesCounter29Deck2++;
										
										CardCounterManager.counter29++;
										CardCounterManager.CardCounter29();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29a == numberOfCards){
							instances29a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter29aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances29a < numberOfCards) {	
										GameObject card = Instantiate (card29a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card29a";
										card.AddComponent<OnDestroyCard29a>();
										
										instances29a++;
										instancesCounter29aDeck2++;
										
										CardCounterManager.counter29a++;
										CardCounterManager.CardCounter29a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29b == numberOfCards){
							instances29b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter29bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances29b < numberOfCards) {	
										GameObject card = Instantiate (card29b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card29b";
										card.AddComponent<OnDestroyCard29b>();
										
										instances29b++;
										instancesCounter29bDeck2++;
										
										CardCounterManager.counter29b++;
										CardCounterManager.CardCounter29b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29c == numberOfCards){
							instances29c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter29cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances29c < numberOfCards) {	
										GameObject card = Instantiate (card29c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card29c";
										card.AddComponent<OnDestroyCard29c>();
										
										instances29c++;
										instancesCounter29cDeck2++;
										
										CardCounterManager.counter29c++;
										CardCounterManager.CardCounter29c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel30"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances30 == numberOfCards){
							instances30 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter30Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances30 < numberOfCards) {	
										GameObject card = Instantiate (card30, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card30";
										card.AddComponent<OnDestroyCard30>();
										
										instances30++;
										instancesCounter30Deck2++;
										
										CardCounterManager.counter30++;
										CardCounterManager.CardCounter30();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30a == numberOfCards){
							instances30a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter30aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances30a < numberOfCards) {	
										GameObject card = Instantiate (card30a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card30a";
										card.AddComponent<OnDestroyCard30a>();
										
										instances30a++;
										instancesCounter30aDeck2++;
										
										CardCounterManager.counter30a++;
										CardCounterManager.CardCounter30a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30b == numberOfCards){
							instances30b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter30bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances30b < numberOfCards) {	
										GameObject card = Instantiate (card30b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card30b";
										card.AddComponent<OnDestroyCard30b>();
										
										instances30b++;
										instancesCounter30bDeck2++;
										
										CardCounterManager.counter30b++;
										CardCounterManager.CardCounter30b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30c == numberOfCards){
							instances30c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter30cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances30c < numberOfCards) {	
										GameObject card = Instantiate (card30c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card30c";
										card.AddComponent<OnDestroyCard30c>();
										
										instances30c++;
										instancesCounter30cDeck2++;
										
										CardCounterManager.counter30c++;
										CardCounterManager.CardCounter30c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances31 == numberOfCards){
							instances31 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter31Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances31 < numberOfCards) {	
										GameObject card = Instantiate (card31, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card31";
										card.AddComponent<OnDestroyCard31>();
										
										instances31++;
										instancesCounter31Deck2++;
										
										CardCounterManager.counter31++;
										CardCounterManager.CardCounter31();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31a == numberOfCards){
							instances31a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter31aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances31a < numberOfCards) {	
										GameObject card = Instantiate (card31a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card31a";
										card.AddComponent<OnDestroyCard31a>();
										
										instances31a++;
										instancesCounter31aDeck2++;
										
										CardCounterManager.counter31a++;
										CardCounterManager.CardCounter31a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31b == numberOfCards){
							instances31b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter31bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances31b < numberOfCards) {	
										GameObject card = Instantiate (card31b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card31b";
										card.AddComponent<OnDestroyCard31b>();
										
										instances31b++;
										instancesCounter31bDeck2++;
										
										CardCounterManager.counter31b++;
										CardCounterManager.CardCounter31b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31c == numberOfCards){
							instances31c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter31cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances31c < numberOfCards) {	
										GameObject card = Instantiate (card31c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card31c";
										card.AddComponent<OnDestroyCard31c>();
										
										instances31c++;
										instancesCounter31cDeck2++;
										
										CardCounterManager.counter31c++;
										CardCounterManager.CardCounter31c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			 
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances32 == numberOfCards){
							instances32 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter32Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances32 < numberOfCards) {	
										GameObject card = Instantiate (card32, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card32";
										card.AddComponent<OnDestroyCard32>();
										
										instances32++;
										instancesCounter32Deck2++;
										
										CardCounterManager.counter32++;
										CardCounterManager.CardCounter32();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32a == numberOfCards){
							instances32a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter32aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances32a < numberOfCards) {	
										GameObject card = Instantiate (card32a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card32a";
										card.AddComponent<OnDestroyCard32a>();
										
										instances32a++;
										instancesCounter32aDeck2++;
										
										CardCounterManager.counter32a++;
										CardCounterManager.CardCounter32a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32b == numberOfCards){
							instances32b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter32bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances32b < numberOfCards) {	
										GameObject card = Instantiate (card32b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card32b";
										card.AddComponent<OnDestroyCard32b>();
										
										instances32b++;
										instancesCounter32bDeck2++;
										
										CardCounterManager.counter32b++;
										CardCounterManager.CardCounter32b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32c == numberOfCards){
							instances32c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter32cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances32c < numberOfCards) {	
										GameObject card = Instantiate (card32c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card32c";
										card.AddComponent<OnDestroyCard32c>();
										
										instances32c++;
										instancesCounter32cDeck2++;
										
										CardCounterManager.counter32c++;
										CardCounterManager.CardCounter32c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel33"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances33 == numberOfCards){
							instances33 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter33Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances33 < numberOfCards) {	
										GameObject card = Instantiate (card33, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card33";
										card.AddComponent<OnDestroyCard33>();
										
										instances33++;
										instancesCounter33Deck2++;
										
										CardCounterManager.counter33++;
										CardCounterManager.CardCounter33();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33a == numberOfCards){
							instances33a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter33aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances33a < numberOfCards) {	
										GameObject card = Instantiate (card33a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card33a";
										card.AddComponent<OnDestroyCard33a>();
										
										instances33a++;
										instancesCounter33aDeck2++;
										
										CardCounterManager.counter33a++;
										CardCounterManager.CardCounter33a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33b == numberOfCards){
							instances33b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter33bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances33b < numberOfCards) {	
										GameObject card = Instantiate (card33b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card33b";
										card.AddComponent<OnDestroyCard33b>();
										
										instances33b++;
										instancesCounter33bDeck2++;
										
										CardCounterManager.counter33b++;
										CardCounterManager.CardCounter33b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33c == numberOfCards){
							instances33c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter33cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances33c < numberOfCards) {	
										GameObject card = Instantiate (card33c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card33c";
										card.AddComponent<OnDestroyCard33c>();
										
										instances33c++;
										instancesCounter33cDeck2++;
										
										CardCounterManager.counter33c++;
										CardCounterManager.CardCounter33c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances34 == numberOfCards){
							instances34 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter34Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances34 < numberOfCards) {	
										GameObject card = Instantiate (card34, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card34";
										card.AddComponent<OnDestroyCard34>();
										
										instances34++;
										instancesCounter34Deck2++;
										
										CardCounterManager.counter34++;
										CardCounterManager.CardCounter34();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34a == numberOfCards){
							instances34a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter34aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances34a < numberOfCards) {	
										GameObject card = Instantiate (card34a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card34a";
										card.AddComponent<OnDestroyCard34a>();
										
										instances34a++;
										instancesCounter34aDeck2++;
										
										CardCounterManager.counter34a++;
										CardCounterManager.CardCounter34a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34b == numberOfCards){
							instances34b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter34bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances34b < numberOfCards) {	
										GameObject card = Instantiate (card34b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card34b";
										card.AddComponent<OnDestroyCard34b>();
										
										instances34b++;
										instancesCounter34bDeck2++;
										
										CardCounterManager.counter34b++;
										CardCounterManager.CardCounter34b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34c == numberOfCards){
							instances34c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter34cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances34c < numberOfCards) {	
										GameObject card = Instantiate (card34c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card34c";
										card.AddComponent<OnDestroyCard34c>();
										
										instances34c++;
										instancesCounter34cDeck2++;
										
										CardCounterManager.counter34c++;
										CardCounterManager.CardCounter34c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances35 == numberOfCards){
								instances35 = 0;
							}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter35Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances35 < numberOfCards) {	
										GameObject card = Instantiate (card35, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card35";
										card.AddComponent<OnDestroyCard35>();
										
										instances35++;
										instancesCounter35Deck2++;
										
										CardCounterManager.counter35++;
										CardCounterManager.CardCounter35();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35a == numberOfCards){
							instances35a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter35aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances35a < numberOfCards) {	
										GameObject card = Instantiate (card35a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card35a";
										card.AddComponent<OnDestroyCard35a>();
										
										instances35a++;
										instancesCounter35aDeck2++;
										
										CardCounterManager.counter35a++;
										CardCounterManager.CardCounter35a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35b == numberOfCards){
							instances35b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter35bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances35b < numberOfCards) {	
										GameObject card = Instantiate (card35b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card35b";
										card.AddComponent<OnDestroyCard35b>();
										
										instances35b++;
										instancesCounter35bDeck2++;
										
										CardCounterManager.counter35b++;
										CardCounterManager.CardCounter35b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35c == numberOfCards){
							instances35c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter35cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances35c < numberOfCards) {	
										GameObject card = Instantiate (card35c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card35c";
										card.AddComponent<OnDestroyCard35c>();
										
										instances35c++;
										instancesCounter35cDeck2++;
										
										CardCounterManager.counter35c++;
										CardCounterManager.CardCounter35c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances36 == numberOfCards){
							instances36 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter36Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances36 < numberOfCards) {	
										GameObject card = Instantiate (card36, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card36";
										card.AddComponent<OnDestroyCard36>();
										
										instances36++;
										instancesCounter36Deck2++;
										
										CardCounterManager.counter36++;
										CardCounterManager.CardCounter36();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36a == numberOfCards){
							instances36a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter36aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances36a < numberOfCards) {	
										GameObject card = Instantiate (card36a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card36a";
										card.AddComponent<OnDestroyCard36a>();
										
										instances36a++;
										instancesCounter36aDeck2++;
										
										CardCounterManager.counter36a++;
										CardCounterManager.CardCounter36a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36b == numberOfCards){
							instances36b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter36bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances36b < numberOfCards) {	
										GameObject card = Instantiate (card36b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card36b";
										card.AddComponent<OnDestroyCard36b>();
										
										instances36b++;
										instancesCounter36bDeck2++;
										
										CardCounterManager.counter36b++;
										CardCounterManager.CardCounter36b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36c == numberOfCards){
							instances36c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter36cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances36c < numberOfCards) {	
										GameObject card = Instantiate (card36c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card36c";
										card.AddComponent<OnDestroyCard36c>();
										
										instances36c++;
										instancesCounter36cDeck2++;
										
										CardCounterManager.counter36c++;
										CardCounterManager.CardCounter36c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances37 == numberOfCards){
							instances37 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter37Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances37 < numberOfCards) {	
										GameObject card = Instantiate (card37, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card37";
										card.AddComponent<OnDestroyCard37>();
										
										instances37++;
										instancesCounter37Deck2++;
										
										CardCounterManager.counter37++;
										CardCounterManager.CardCounter37();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37a == numberOfCards){
							instances37a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter37aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances37a < numberOfCards) {	
										GameObject card = Instantiate (card37a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card37a";
										card.AddComponent<OnDestroyCard37a>();
										
										instances37a++;
										instancesCounter37aDeck2++;
										
										CardCounterManager.counter37a++;
										CardCounterManager.CardCounter37a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37b == numberOfCards){
							instances37b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter37bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances37b < numberOfCards) {	
										GameObject card = Instantiate (card37b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card37b";
										card.AddComponent<OnDestroyCard37b>();
										
										instances37b++;
										instancesCounter37bDeck2++;
										
										CardCounterManager.counter37b++;
										CardCounterManager.CardCounter37b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37c == numberOfCards){
							instances37c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter37cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances37c < numberOfCards) {	
										GameObject card = Instantiate (card37c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card37c";
										card.AddComponent<OnDestroyCard37c>();
										
										instances37c++;
										instancesCounter37cDeck2++;
										
										CardCounterManager.counter37c++;
										CardCounterManager.CardCounter37c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances38 == numberOfCards){
							instances38 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter38Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances38 < numberOfCards) {	
										GameObject card = Instantiate (card38, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card38";
										card.AddComponent<OnDestroyCard38>();
										
										instances38++;
										instancesCounter38Deck2++;
										
										CardCounterManager.counter38++;
										CardCounterManager.CardCounter38();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38a == numberOfCards){
							instances38a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter38aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances38a < numberOfCards) {	
										GameObject card = Instantiate (card38a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card38a";
										card.AddComponent<OnDestroyCard38a>();
										
										instances38a++;
										instancesCounter38aDeck2++;
										
										CardCounterManager.counter38a++;
										CardCounterManager.CardCounter38a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38b == numberOfCards){
							instances38b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter38bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances38b < numberOfCards) {	
										GameObject card = Instantiate (card38b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card38b";
										card.AddComponent<OnDestroyCard38b>();
										
										instances38b++;
										instancesCounter38bDeck2++;
										
										CardCounterManager.counter38b++;
										CardCounterManager.CardCounter38b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38c == numberOfCards){
							instances38c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter38cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances38c < numberOfCards) {	
										GameObject card = Instantiate (card38c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card38c";
										card.AddComponent<OnDestroyCard38c>();
										
										instances38c++;
										instancesCounter38cDeck2++;
										
										CardCounterManager.counter38c++;
										CardCounterManager.CardCounter38c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel39"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances39 == numberOfCards){
							instances39 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter39Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances39 < numberOfCards) {	
										GameObject card = Instantiate (card39, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card39";
										card.AddComponent<OnDestroyCard39>();
										
										instances39++;
										instancesCounter39Deck2++;
										
										CardCounterManager.counter39++;
										CardCounterManager.CardCounter39();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39a == numberOfCards){
							instances39a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter39aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances39a < numberOfCards) {	
										GameObject card = Instantiate (card39a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card39a";
										card.AddComponent<OnDestroyCard39a>();
										
										instances39a++;
										instancesCounter39aDeck2++;
										
										CardCounterManager.counter39a++;
										CardCounterManager.CardCounter39a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39b == numberOfCards){
							instances39b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter39bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances39b < numberOfCards) {	
										GameObject card = Instantiate (card39b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card39b";
										card.AddComponent<OnDestroyCard39b>();
										
										instances39b++;
										instancesCounter39bDeck2++;
										
										CardCounterManager.counter39b++;
										CardCounterManager.CardCounter39b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39c == numberOfCards){
							instances39c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter39cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances39c < numberOfCards) {	
										GameObject card = Instantiate (card39c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card39c";
										card.AddComponent<OnDestroyCard39c>();
										
										instances39c++;
										instancesCounter39cDeck2++;
										
										CardCounterManager.counter39c++;
										CardCounterManager.CardCounter39c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances40 == numberOfCards){
							instances40 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter40Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances40 < numberOfCards) {	
										GameObject card = Instantiate (card40, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card40";
										card.AddComponent<OnDestroyCard40>();
										
										instances40++;
										instancesCounter40Deck2++;
										
										CardCounterManager.counter40++;
										CardCounterManager.CardCounter40();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40a == numberOfCards){
							instances40a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter40aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances40a < numberOfCards) {	
										GameObject card = Instantiate (card40a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card40a";
										card.AddComponent<OnDestroyCard40a>();
										
										instances40a++;
										instancesCounter40aDeck2++;
										
										CardCounterManager.counter40a++;
										CardCounterManager.CardCounter40a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40b == numberOfCards){
							instances40b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter40bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances40b < numberOfCards) {	
										GameObject card = Instantiate (card40b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card40b";
										card.AddComponent<OnDestroyCard40b>();
										
										instances40b++;
										instancesCounter40bDeck2++;
										
										CardCounterManager.counter40b++;
										CardCounterManager.CardCounter40b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40c == numberOfCards){
							instances40c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter40cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances40c < numberOfCards) {	
										GameObject card = Instantiate (card40c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card40c";
										card.AddComponent<OnDestroyCard40c>();
										
										instances40c++;
										instancesCounter40cDeck2++;
										
										CardCounterManager.counter40c++;
										CardCounterManager.CardCounter40c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel41"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances41 == numberOfCards){
							instances41 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter41Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances41 < numberOfCards) {	
										GameObject card = Instantiate (card41, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card41";
										card.AddComponent<OnDestroyCard41>();
										
										instances41++;
										instancesCounter41Deck2++;
										
										CardCounterManager.counter41++;
										CardCounterManager.CardCounter41();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
					
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41a == numberOfCards){
							instances41a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter41aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances41a < numberOfCards) {	
										GameObject card = Instantiate (card41a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card41a";
										card.AddComponent<OnDestroyCard41a>();
										
										instances41a++;
										instancesCounter41aDeck2++;
										
										CardCounterManager.counter41a++;
										CardCounterManager.CardCounter41a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41b == numberOfCards){
							instances41b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter41bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances41b < numberOfCards) {	
										GameObject card = Instantiate (card41b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card41b";
										card.AddComponent<OnDestroyCard41b>();
										
										instances41b++;
										instancesCounter41bDeck2++;
										
										CardCounterManager.counter41b++;
										CardCounterManager.CardCounter41b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41c == numberOfCards){
							instances41c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter41cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances41c < numberOfCards) {	
										GameObject card = Instantiate (card41c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card41c";
										card.AddComponent<OnDestroyCard41c>();
										
										instances41c++;
										instancesCounter41cDeck2++;
										
										CardCounterManager.counter41c++;
										CardCounterManager.CardCounter41c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel42"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances42 == numberOfCards){
							instances42 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter42Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances42 < numberOfCards) {	
										GameObject card = Instantiate (card42, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card42";
										card.AddComponent<OnDestroyCard42>();
										
										instances42++;
										instancesCounter42Deck2++;
										
										CardCounterManager.counter42++;
										CardCounterManager.CardCounter42();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42a == numberOfCards){
							instances42a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter42aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances42a < numberOfCards) {	
										GameObject card = Instantiate (card42a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card42a";
										card.AddComponent<OnDestroyCard42a>();
										
										instances42a++;
										instancesCounter42aDeck2++;
										
										CardCounterManager.counter42a++;
										CardCounterManager.CardCounter42a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42b == numberOfCards){
							instances42b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter42bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances42b < numberOfCards) {	
										GameObject card = Instantiate (card42b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card42b";
										card.AddComponent<OnDestroyCard42b>();
										
										instances42b++;
										instancesCounter42bDeck2++;
										
										CardCounterManager.counter42b++;
										CardCounterManager.CardCounter42b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42c == numberOfCards){
							instances42c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter42cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances42c < numberOfCards) {	
										GameObject card = Instantiate (card42c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card42c";
										card.AddComponent<OnDestroyCard42c>();
										
										instances42c++;
										instancesCounter42cDeck2++;
										
										CardCounterManager.counter42c++;
										CardCounterManager.CardCounter42c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel43"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances43 == numberOfCards){
							instances43 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter43Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances43 < numberOfCards) {	
										GameObject card = Instantiate (card43, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card43";
										card.AddComponent<OnDestroyCard43>();
										
										instances43++;
										instancesCounter43Deck2++;
										
										CardCounterManager.counter43++;
										CardCounterManager.CardCounter43();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43a == numberOfCards){
							instances43a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter43aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances43a < numberOfCards) {	
										GameObject card = Instantiate (card43a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card43a";
										card.AddComponent<OnDestroyCard43a>();
										
										instances43a++;
										instancesCounter43aDeck2++;
										
										CardCounterManager.counter43a++;
										CardCounterManager.CardCounter43a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43b == numberOfCards){
							instances43b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter43bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances43b < numberOfCards) {	
										GameObject card = Instantiate (card43b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card43b";
										card.AddComponent<OnDestroyCard43b>();
										
										instances43b++;
										instancesCounter43bDeck2++;
										
										CardCounterManager.counter43b++;
										CardCounterManager.CardCounter43b();

										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43c == numberOfCards){
							instances43c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter43cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances43c < numberOfCards) {	
										GameObject card = Instantiate (card43c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card43c";
										card.AddComponent<OnDestroyCard43c>();
										
										instances43c++;
										instancesCounter43cDeck2++;
										
										CardCounterManager.counter43c++;
										CardCounterManager.CardCounter43c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel44"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances44 == numberOfCards){
							instances44 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter44Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances44 < numberOfCards) {	
										GameObject card = Instantiate (card44, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card44";
										card.AddComponent<OnDestroyCard44>();
										
										instances44++;
										instancesCounter44Deck2++;
										
										CardCounterManager.counter44++;
										CardCounterManager.CardCounter44();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44a == numberOfCards){
							instances44a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter44aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances44a < numberOfCards) {	
										GameObject card = Instantiate (card44a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card44a";
										card.AddComponent<OnDestroyCard44a>();
										
										instances44a++;
										instancesCounter44aDeck2++;
										
										CardCounterManager.counter44a++;
										CardCounterManager.CardCounter44a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44b == numberOfCards){
							instances44b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter44bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances44b < numberOfCards) {	
										GameObject card = Instantiate (card44b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card44b";
										card.AddComponent<OnDestroyCard44b>();
										
										instances44b++;
										instancesCounter44bDeck2++;
										
										CardCounterManager.counter44b++;
										CardCounterManager.CardCounter44b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44c == numberOfCards){
							instances44c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter44cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances44c < numberOfCards) {	
										GameObject card = Instantiate (card44c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card44c";
										card.AddComponent<OnDestroyCard44c>();
										
										instances44c++;
										instancesCounter44cDeck2++;
										
										CardCounterManager.counter44c++;
										CardCounterManager.CardCounter44c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel45"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances45 == numberOfCards){
							instances45 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter45Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances45 < numberOfCards) {	
										GameObject card = Instantiate (card45, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card45";
										card.AddComponent<OnDestroyCard45>();
										
										instances45++;
										instancesCounter45Deck2++;
										
										CardCounterManager.counter45++;
										CardCounterManager.CardCounter45();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45a == numberOfCards){
							instances45a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter45aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances45a < numberOfCards) {	
										GameObject card = Instantiate (card45a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card45a";
										card.AddComponent<OnDestroyCard45a>();
										
										instances45a++;
										instancesCounter45aDeck2++;
										
										CardCounterManager.counter45a++;
										CardCounterManager.CardCounter45a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45b == numberOfCards){
							instances45b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter45bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances45b < numberOfCards) {	
										GameObject card = Instantiate (card45b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card45b";
										card.AddComponent<OnDestroyCard45b>();
										
										instances45b++;
										instancesCounter45bDeck2++;
										
										CardCounterManager.counter45b++;
										CardCounterManager.CardCounter45b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45c == numberOfCards){
							instances45c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter45cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances45c < numberOfCards) {	
										GameObject card = Instantiate (card45c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card45c";
										card.AddComponent<OnDestroyCard45c>();
										
										instances45c++;
										instancesCounter45cDeck2++;
										
										CardCounterManager.counter45c++;
										CardCounterManager.CardCounter45c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances46 == numberOfCards){
							instances46 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter46Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances46 < numberOfCards) {	
										GameObject card = Instantiate (card46, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card46";
										card.AddComponent<OnDestroyCard46>();
										
										instances46++;
										instancesCounter46Deck2++;
										
										CardCounterManager.counter46++;
										CardCounterManager.CardCounter46();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46a == numberOfCards){
							instances46a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter46aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances46a < numberOfCards) {	
										GameObject card = Instantiate (card46a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card46a";
										card.AddComponent<OnDestroyCard46a>();
										
										instances46a++;
										instancesCounter46aDeck2++;
										
										CardCounterManager.counter46a++;
										CardCounterManager.CardCounter46a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46b == numberOfCards){
							instances46b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter46bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances46b < numberOfCards) {	
										GameObject card = Instantiate (card46b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card46b";
										card.AddComponent<OnDestroyCard46b>();
										
										instances46b++;
										instancesCounter46bDeck2++;
										
										CardCounterManager.counter46b++;
										CardCounterManager.CardCounter46b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46c == numberOfCards){
							instances46c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter46cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances46c < numberOfCards) {	
										GameObject card = Instantiate (card46c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card46c";
										card.AddComponent<OnDestroyCard46c>();
										
										instances46c++;
										instancesCounter46cDeck2++;
										
										CardCounterManager.counter46c++;
										CardCounterManager.CardCounter46c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel47"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances47 == numberOfCards){
							instances47 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter47Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances47 < numberOfCards) {	
										GameObject card = Instantiate (card47, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card47";
										card.AddComponent<OnDestroyCard47>();
										
										instances47++;
										instancesCounter47Deck2++;
										
										CardCounterManager.counter47++;
										CardCounterManager.CardCounter47();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47a == numberOfCards){
							instances47a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter47aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances47a < numberOfCards) {	
										GameObject card = Instantiate (card47a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card47a";
										card.AddComponent<OnDestroyCard47a>();
										
										instances47a++;
										instancesCounter47aDeck2++;
										
										CardCounterManager.counter47a++;
										CardCounterManager.CardCounter47a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47b == numberOfCards){
							instances47b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter47bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances47b < numberOfCards) {	
										GameObject card = Instantiate (card47b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card47b";
										card.AddComponent<OnDestroyCard47b>();
										
										instances47b++;
										instancesCounter47bDeck2++;
										
										CardCounterManager.counter47b++;
										CardCounterManager.CardCounter47b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47c == numberOfCards){
							instances47c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter47cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances47c < numberOfCards) {	
										GameObject card = Instantiate (card47c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card47c";
										card.AddComponent<OnDestroyCard47c>();
										
										instances47c++;
										instancesCounter47cDeck2++;
										
										CardCounterManager.counter47c++;
										CardCounterManager.CardCounter47c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances48 == numberOfCards){
							instances48 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter48Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances48 < numberOfCards) {	
										GameObject card = Instantiate (card48, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card48";
										card.AddComponent<OnDestroyCard48>();
										
										instances48++;
										instancesCounter48Deck2++;
										
										CardCounterManager.counter48++;
										CardCounterManager.CardCounter48();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48a == numberOfCards){
							instances48a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter48aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances48a < numberOfCards) {	
										GameObject card = Instantiate (card48a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card48a";
										card.AddComponent<OnDestroyCard48a>();
										
										instances48a++;
										instancesCounter48aDeck2++;
										
										CardCounterManager.counter48a++;
										CardCounterManager.CardCounter48a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48b == numberOfCards){
							instances48b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter48bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances48b < numberOfCards) {	
										GameObject card = Instantiate (card48b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card48b";
										card.AddComponent<OnDestroyCard48b>();
										
										instances48b++;
										instancesCounter48bDeck2++;
										
										CardCounterManager.counter48b++;
										CardCounterManager.CardCounter48b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48c == numberOfCards){
							instances48c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter48cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances48c < numberOfCards) {	
										GameObject card = Instantiate (card48c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card48c";
										card.AddComponent<OnDestroyCard48c>();
										
										instances48c++;
										instancesCounter48cDeck2++;
										
										CardCounterManager.counter48c++;
										CardCounterManager.CardCounter48c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel49"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances49 == numberOfCards){
							instances49 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter49Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances49 < numberOfCards) {	
										GameObject card = Instantiate (card49, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card49";
										card.AddComponent<OnDestroyCard49>();
										
										instances49++;
										instancesCounter49Deck2++;
										
										CardCounterManager.counter49++;
										CardCounterManager.CardCounter49();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49a == numberOfCards){
							instances49a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter49aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances49a < numberOfCards) {	
										GameObject card = Instantiate (card49a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card49a";
										card.AddComponent<OnDestroyCard49a>();
										
										instances49a++;
										instancesCounter49aDeck2++;
										
										CardCounterManager.counter49a++;
										CardCounterManager.CardCounter49a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49b == numberOfCards){
							instances49b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter49bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances49b < numberOfCards) {	
										GameObject card = Instantiate (card49b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card49b";
										card.AddComponent<OnDestroyCard49b>();
										
										instances49b++;
										instancesCounter49bDeck2++;
										
										CardCounterManager.counter49b++;
										CardCounterManager.CardCounter49b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49c == numberOfCards){
							instances49c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter49cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances49c < numberOfCards) {	
										GameObject card = Instantiate (card49c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card49c";
										card.AddComponent<OnDestroyCard49c>();
										
										instances49c++;
										instancesCounter49cDeck2++;
										
										CardCounterManager.counter49c++;
										CardCounterManager.CardCounter49c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel50"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances50 == numberOfCards){
							instances50 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter50Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances50 < numberOfCards) {	
										GameObject card = Instantiate (card50, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card50";
										card.AddComponent<OnDestroyCard50>();
										
										instances50++;
										instancesCounter50Deck2++;
										
										CardCounterManager.counter50++;
										CardCounterManager.CardCounter50();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50a == numberOfCards){
							instances50a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter50aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances50a < numberOfCards) {	
										GameObject card = Instantiate (card50a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card50a";
										card.AddComponent<OnDestroyCard50a>();
										
										instances50a++;
										instancesCounter50aDeck2++;
										
										CardCounterManager.counter50a++;
										CardCounterManager.CardCounter50a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50b == numberOfCards){
							instances50b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter50bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances50b < numberOfCards) {	
										GameObject card = Instantiate (card50b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card50b";
										card.AddComponent<OnDestroyCard50b>();
										
										instances50b++;
										instancesCounter50bDeck2++;
										
										CardCounterManager.counter50b++;
										CardCounterManager.CardCounter50b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50c == numberOfCards){
							instances50c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter50cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances50c < numberOfCards) {	
										GameObject card = Instantiate (card50c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card50c";
										card.AddComponent<OnDestroyCard50c>();
										
										instances50c++;
										instancesCounter50cDeck2++;
										
										CardCounterManager.counter50c++;
										CardCounterManager.CardCounter50c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel51"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances51 == numberOfCards){
							instances51 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter51Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances51 < numberOfCards) {	
										GameObject card = Instantiate (card51, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card51";
										card.AddComponent<OnDestroyCard51>();
										
										instances51++;
										instancesCounter51Deck2++;
										
										CardCounterManager.counter51++;
										CardCounterManager.CardCounter51();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51a == numberOfCards){
							instances51a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter51aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances51a < numberOfCards) {	
										GameObject card = Instantiate (card51a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card51a";
										card.AddComponent<OnDestroyCard51a>();
										
										instances51a++;
										instancesCounter51aDeck2++;
										
										CardCounterManager.counter51a++;
										CardCounterManager.CardCounter51a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51b == numberOfCards){
							instances51b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter51bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances51b < numberOfCards) {	
										GameObject card = Instantiate (card51b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card51b";
										card.AddComponent<OnDestroyCard51b>();
										
										instances51b++;
										instancesCounter51bDeck2++;
										
										CardCounterManager.counter51b++;
										CardCounterManager.CardCounter51b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51c == numberOfCards){
							instances51c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter51cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances51c < numberOfCards) {	
										GameObject card = Instantiate (card51c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card51c";
										card.AddComponent<OnDestroyCard51c>();
										
										instances51c++;
										instancesCounter51cDeck2++;
										
										CardCounterManager.counter51c++;
										CardCounterManager.CardCounter51c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){		
				if(hit.collider.gameObject.name == "CardModel52"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances52 == numberOfCards){
							instances52 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter52Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances52 < numberOfCards) {	
										GameObject card = Instantiate (card52, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card52";
										card.AddComponent<OnDestroyCard52>();
										
										instances52++;
										instancesCounter52Deck2++;
										
										CardCounterManager.counter52++;
										CardCounterManager.CardCounter52();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52a == numberOfCards){
							instances52a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter52aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances52a < numberOfCards) {	
										GameObject card = Instantiate (card52a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card52a";
										card.AddComponent<OnDestroyCard52a>();
										
										instances52a++;
										instancesCounter52aDeck2++;
										
										CardCounterManager.counter52a++;
										CardCounterManager.CardCounter52a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52b == numberOfCards){
							instances52b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter52bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances52b < numberOfCards) {	
										GameObject card = Instantiate (card52b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card52b";
										card.AddComponent<OnDestroyCard52b>();
										
										instances52b++;
										instancesCounter52bDeck2++;
										
										CardCounterManager.counter52b++;
										CardCounterManager.CardCounter52b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52c == numberOfCards){
							instances52c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter52cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances52c < numberOfCards) {	
										GameObject card = Instantiate (card52c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card52c";
										card.AddComponent<OnDestroyCard52c>();
										
										instances52c++;
										instancesCounter52cDeck2++;
										
										CardCounterManager.counter52c++;
										CardCounterManager.CardCounter52c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel53"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances53 == numberOfCards){
							instances53 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter53Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances53 < numberOfCards) {	
										GameObject card = Instantiate (card53, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card53";
										card.AddComponent<OnDestroyCard53>();
										
										instances53++;
										instancesCounter53Deck2++;
										
										CardCounterManager.counter53++;
										CardCounterManager.CardCounter53();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53a == numberOfCards){
							instances53a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter53aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances53a < numberOfCards) {	
										GameObject card = Instantiate (card53a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card53a";
										card.AddComponent<OnDestroyCard53a>();
										
										instances53a++;
										instancesCounter53aDeck2++;
										
										CardCounterManager.counter53a++;
										CardCounterManager.CardCounter53a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53b == numberOfCards){
							instances53b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter53bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances53b < numberOfCards) {	
										GameObject card = Instantiate (card53b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card53b";
										card.AddComponent<OnDestroyCard53b>();
										
										instances53b++;
										instancesCounter53bDeck2++;
										
										CardCounterManager.counter53b++;
										CardCounterManager.CardCounter53b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53c == numberOfCards){
							instances53c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter53cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances53c < numberOfCards) {	
										GameObject card = Instantiate (card53c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card53c";
										card.AddComponent<OnDestroyCard53c>();
										
										instances53c++;
										instancesCounter53cDeck2++;
										
										CardCounterManager.counter53c++;
										CardCounterManager.CardCounter53c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel54"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances54 == numberOfCards){
							instances54 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter54Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances54 < numberOfCards) {	
										GameObject card = Instantiate (card54, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card54";
										card.AddComponent<OnDestroyCard54>();
										
										instances54++;
										instancesCounter54Deck2++;
										
										CardCounterManager.counter54++;
										CardCounterManager.CardCounter54();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54a == numberOfCards){
							instances54a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter54aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances54a < numberOfCards) {	
										GameObject card = Instantiate (card54a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card54a";
										card.AddComponent<OnDestroyCard54a>();
										
										instances54a++;
										instancesCounter54aDeck2++;
										
										CardCounterManager.counter54a++;
										CardCounterManager.CardCounter54a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54b == numberOfCards){
							instances54b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter54bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances54b < numberOfCards) {	
										GameObject card = Instantiate (card54b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card54b";
										card.AddComponent<OnDestroyCard54b>();
										
										instances54b++;
										instancesCounter54bDeck2++;
										
										CardCounterManager.counter54b++;
										CardCounterManager.CardCounter54b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54c == numberOfCards){
							instances54c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter54cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances54c < numberOfCards) {	
										GameObject card = Instantiate (card54c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card54c";
										card.AddComponent<OnDestroyCard54c>();
										
										instances54c++;
										instancesCounter54cDeck2++;
										
										CardCounterManager.counter54c++;
										CardCounterManager.CardCounter54c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances55 == numberOfCards){
							instances55 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter55Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances55 < numberOfCards) {	
										GameObject card = Instantiate (card55, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card55";
										card.AddComponent<OnDestroyCard55>();
										
										instances55++;
										instancesCounter55Deck2++;
										
										CardCounterManager.counter55++;
										CardCounterManager.CardCounter55();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55a == numberOfCards){
							instances55a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter55aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances55a < numberOfCards) {	
										GameObject card = Instantiate (card55a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card55a";
										card.AddComponent<OnDestroyCard55a>();
										
										instances55a++;
										instancesCounter55aDeck2++;
										
										CardCounterManager.counter55a++;
										CardCounterManager.CardCounter55a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55b == numberOfCards){
							instances55b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter55bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card55b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card55b";
										card.AddComponent<OnDestroyCard55b>();
										
										instances55b++;
										instancesCounter55bDeck2++;
										
										CardCounterManager.counter55b++;
										CardCounterManager.CardCounter55b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55c == numberOfCards){
							instances55c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter55cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances55c < numberOfCards) {	
										GameObject card = Instantiate (card55c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card55c";
										card.AddComponent<OnDestroyCard55c>();
										
										instances55c++;
										instancesCounter55cDeck2++;
										
										CardCounterManager.counter55c++;
										CardCounterManager.CardCounter55c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances56 == numberOfCards){
							instances56 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter56Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances56 < numberOfCards) {	
										GameObject card = Instantiate (card56, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card56";
										card.AddComponent<OnDestroyCard56>();
										
										instances56++;
										instancesCounter56Deck2++;
										
										CardCounterManager.counter56++;
										CardCounterManager.CardCounter56();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56a == numberOfCards){
							instances56a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter56aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances56a < numberOfCards) {	
										GameObject card = Instantiate (card56a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card56a";
										card.AddComponent<OnDestroyCard56a>();
										
										instances56a++;
										instancesCounter56aDeck2++;
										
										CardCounterManager.counter56a++;
										CardCounterManager.CardCounter56a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56b == numberOfCards){
							instances56b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter56bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances56b < numberOfCards) {	
										GameObject card = Instantiate (card56b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card56b";
										card.AddComponent<OnDestroyCard56b>();
										
										instances56b++;
										instancesCounter56bDeck2++;
										
										CardCounterManager.counter56b++;
										CardCounterManager.CardCounter56b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56c == numberOfCards){
							instances56c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter56cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances56c < numberOfCards) {	
										GameObject card = Instantiate (card56c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card56c";
										card.AddComponent<OnDestroyCard56c>();
										
										instances56c++;
										instancesCounter56cDeck2++;
										
										CardCounterManager.counter56c++;
										CardCounterManager.CardCounter56c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel57"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances57 == numberOfCards){
							instances57 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter57Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances57 < numberOfCards) {	
										GameObject card = Instantiate (card57, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card57";
										card.AddComponent<OnDestroyCard57>();
										
										instances57++;
										instancesCounter57Deck2++;
										
										CardCounterManager.counter57++;
										CardCounterManager.CardCounter57();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57a == numberOfCards){
							instances57a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter57aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances57a < numberOfCards) {	
										GameObject card = Instantiate (card57a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card57a";
										card.AddComponent<OnDestroyCard57a>();
										
										instances57a++;
										instancesCounter57aDeck2++;
										
										CardCounterManager.counter57a++;
										CardCounterManager.CardCounter57a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57b == numberOfCards){
							instances57b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter57bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances57b < numberOfCards) {	
										GameObject card = Instantiate (card57b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card57b";
										card.AddComponent<OnDestroyCard57b>();
										
										instances57b++;
										instancesCounter57bDeck2++;
										
										CardCounterManager.counter57b++;
										CardCounterManager.CardCounter57b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57c == numberOfCards){
							instances57c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter57cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances57c < numberOfCards) {	
										GameObject card = Instantiate (card57c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card57c";
										card.AddComponent<OnDestroyCard57c>();
										
										instances57c++;
										instancesCounter57cDeck2++;
										
										CardCounterManager.counter57c++;
										CardCounterManager.CardCounter57c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances58 == numberOfCards){
							instances58 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter58Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances58 < numberOfCards) {	
										GameObject card = Instantiate (card58, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card58";
										card.AddComponent<OnDestroyCard58>();
										
										instances58++;
										instancesCounter58Deck2++;
										
										CardCounterManager.counter58++;
										CardCounterManager.CardCounter58();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58a == numberOfCards){
							instances58a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter58aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances58a < numberOfCards) {	
										GameObject card = Instantiate (card58a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card58a";
										card.AddComponent<OnDestroyCard58a>();
										
										instances58a++;
										instancesCounter58aDeck2++;
										
										CardCounterManager.counter58a++;
										CardCounterManager.CardCounter58a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58b == numberOfCards){
							instances58b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter58bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances58b < numberOfCards) {	
										GameObject card = Instantiate (card58b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card58b";
										card.AddComponent<OnDestroyCard58b>();
										
										instances58b++;
										instancesCounter58bDeck2++;
										
										CardCounterManager.counter58b++;
										CardCounterManager.CardCounter58b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58c == numberOfCards){
							instances58c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter58cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances58c < numberOfCards) {	
										GameObject card = Instantiate (card58c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card58c";
										card.AddComponent<OnDestroyCard58c>();
										
										instances58c++;
										instancesCounter58cDeck2++;
										
										CardCounterManager.counter58c++;
										CardCounterManager.CardCounter58c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances59 == numberOfCards){
							instances59 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter59Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances59 < numberOfCards) {	
										GameObject card = Instantiate (card59, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card59";
										card.AddComponent<OnDestroyCard59>();
										
										instances59++;
										instancesCounter59Deck2++;
										
										CardCounterManager.counter59++;
										CardCounterManager.CardCounter59();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59a == numberOfCards){
							instances59a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter59aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances59a < numberOfCards) {	
										GameObject card = Instantiate (card59a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card59a";
										card.AddComponent<OnDestroyCard59a>();
										
										instances59a++;
										instancesCounter59aDeck2++;
										
										CardCounterManager.counter59a++;
										CardCounterManager.CardCounter59a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59b == numberOfCards){
							instances59b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter59bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances59b < numberOfCards) {	
										GameObject card = Instantiate (card59b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card59b";
										card.AddComponent<OnDestroyCard59b>();
										
										instances59b++;
										instancesCounter59bDeck2++;
										
										CardCounterManager.counter59b++;
										CardCounterManager.CardCounter59b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59c == numberOfCards){
							instances59c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter59cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances59c < numberOfCards) {	
										GameObject card = Instantiate (card59c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card59c";
										card.AddComponent<OnDestroyCard59c>();
										
										instances59c++;
										instancesCounter59cDeck2++;
										
										CardCounterManager.counter59c++;
										CardCounterManager.CardCounter59c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel60"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances60 == numberOfCards){
							instances60 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter60Deck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances60 < numberOfCards) {	
										GameObject card = Instantiate (card60, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card60";
										card.AddComponent<OnDestroyCard60>();
										
										instances60++;
										instancesCounter60Deck2++;
										
										CardCounterManager.counter60++;
										CardCounterManager.CardCounter60();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60a == numberOfCards){
							instances60a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter60aDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances60a < numberOfCards) {	
										GameObject card = Instantiate (card60a, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card60a";
										card.AddComponent<OnDestroyCard60a>();
										
										instances60a++;
										instancesCounter60aDeck2++;
										
										CardCounterManager.counter60a++;
										CardCounterManager.CardCounter60a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60b == numberOfCards){
							instances60b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter60bDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances60b < numberOfCards) {	
										GameObject card = Instantiate (card60b, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card60b";
										card.AddComponent<OnDestroyCard60b>();
										
										instances60b++;
										instancesCounter60bDeck2++;
										
										CardCounterManager.counter60b++;
										CardCounterManager.CardCounter60b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60c == numberOfCards){
							instances60c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher2 && spawnPoints2.Count != 0 && instancesCounter60cDeck2 < numberOfInstancesCounter){
									spawnPoint2 = spawnPoints2[Random.Range(0,spawnPoints2.Count)];
									
									while(instances60c < numberOfCards) {	
										GameObject card = Instantiate (card60c, spawnPoint2.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint2.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated2Card60c";
										card.AddComponent<OnDestroyCard60c>();
										
										instances60c++;
										instancesCounter60cDeck2++;
										
										CardCounterManager.counter60c++;
										CardCounterManager.CardCounter60c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints2.Remove(spawnPoint2);
									}
								}
								
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			#endregion
			
			
			
		
		}
		
		
		void SpawnCardsDeck3(){
			
			
			/** Spawn cards for the decks */
			#region SpawnCardsStuff definition
			ray = Camera.main.ScreenPointToRay(Input.mousePosition);

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1 == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter1Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card1, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card1";
										card.AddComponent<OnDestroyCard1>();
										
										instances1++;
										instancesCounter1Deck3++;
										
										CardCounterManager.counter1++;
										CardCounterManager.CardCounter1();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1a == numberOfCards){
							instances1a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter1aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances1a < numberOfCards) {	
										GameObject card = Instantiate (card1a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card1a";
										card.AddComponent<OnDestroyCard1a>();
										
										instances1a++;
										instancesCounter1aDeck3++;
										
										CardCounterManager.counter1a++;
										CardCounterManager.CardCounter1a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1b == numberOfCards){
							instances1b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter1bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances1b < numberOfCards) {	
										GameObject card = Instantiate (card1b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card1b";
										card.AddComponent<OnDestroyCard1b>();
										
										instances1b++;
										instancesCounter1bDeck3++;
										
										CardCounterManager.counter1b++;
										CardCounterManager.CardCounter1b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel1c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1c == numberOfCards){
							instances1c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter1cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances1c < numberOfCards) {	
										GameObject card = Instantiate (card1c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card1c";
										card.AddComponent<OnDestroyCard1c>();
										
										instances1c++;
										instancesCounter1cDeck3++;
										
										CardCounterManager.counter1c++;
										CardCounterManager.CardCounter1c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject1c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			 
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances2 == numberOfCards){
							instances2 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter2Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances2 < numberOfCards) {	
										GameObject card = Instantiate (card2, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card2";
										card.AddComponent<OnDestroyCard2>();
										
										instances2++;
										instancesCounter2Deck3++;
										
										CardCounterManager.counter2++;
										CardCounterManager.CardCounter2();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2a == numberOfCards){
							instances2a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter2aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances2a < numberOfCards) {	
										GameObject card = Instantiate (card2a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card2a";
										card.AddComponent<OnDestroyCard2a>();
										
										instances2a++;
										instancesCounter2aDeck3++;
										
										CardCounterManager.counter2a++;
										CardCounterManager.CardCounter2a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2b == numberOfCards){
							instances2b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter2bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances2b < numberOfCards) {	
										GameObject card = Instantiate (card2b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card2b";
										card.AddComponent<OnDestroyCard2b>();
										
										instances2b++;
										instancesCounter2bDeck3++;
										
										CardCounterManager.counter2b++;
										CardCounterManager.CardCounter2b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel2c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances2c == numberOfCards){
							instances2c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter2cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances2c < numberOfCards) {	
										GameObject card = Instantiate (card2c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card2c";
										card.AddComponent<OnDestroyCard2c>();
										
										instances2c++;
										instancesCounter2cDeck3++;
										
										CardCounterManager.counter2c++;
										CardCounterManager.CardCounter2c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject2c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel3"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances3 == numberOfCards){
							instances3 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter3Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances3 < numberOfCards) {	
										GameObject card = Instantiate (card3, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card3";
										card.AddComponent<OnDestroyCard3>();
										
										instances3++;
										instancesCounter3Deck3++;
										
										CardCounterManager.counter3++;
										CardCounterManager.CardCounter3();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3a == numberOfCards){
							instances3a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter3aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances3a < numberOfCards) {	
										GameObject card = Instantiate (card3a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card3a";
										card.AddComponent<OnDestroyCard3a>();
										
										instances3a++;
										instancesCounter3aDeck3++;
										
										CardCounterManager.counter3a++;
										CardCounterManager.CardCounter3a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3b == numberOfCards){
							instances3b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter3bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances3b < numberOfCards) {	
										GameObject card = Instantiate (card3b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card3b";
										card.AddComponent<OnDestroyCard3b>();
										
										instances3b++;
										instancesCounter3bDeck3++;
										
										CardCounterManager.counter3b++;
										CardCounterManager.CardCounter3b();
										
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel3c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances3c == numberOfCards){
							instances3c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter3cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances3c < numberOfCards) {	
										GameObject card = Instantiate (card3c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card3c";
										card.AddComponent<OnDestroyCard3c>();
										
										instances3c++;
										instancesCounter3cDeck3++;
										
										CardCounterManager.counter3c++;
										CardCounterManager.CardCounter3c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject3c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances4 == numberOfCards){
							instances4 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter4Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances4 < numberOfCards) {	
										GameObject card = Instantiate (card4, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card4";
										card.AddComponent<OnDestroyCard4>();
										
										instances4++;
										instancesCounter4Deck3++;
										
										CardCounterManager.counter4++;
										CardCounterManager.CardCounter4();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4a == numberOfCards){
							instances4a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter4aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances4a < numberOfCards) {	
										GameObject card = Instantiate (card4a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card4a";
										card.AddComponent<OnDestroyCard4a>();
										
										instances4a++;
										instancesCounter4aDeck3++;
										
										CardCounterManager.counter4a++;
										CardCounterManager.CardCounter4a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4b == numberOfCards){
							instances4b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter4bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances4b < numberOfCards) {	
										GameObject card = Instantiate (card4b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card4b";
										card.AddComponent<OnDestroyCard4b>();
										
										instances4b++;
										instancesCounter4bDeck3++;
										
										CardCounterManager.counter4b++;
										CardCounterManager.CardCounter4b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel4c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances4c == numberOfCards){
							instances4c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter4cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances4c < numberOfCards) {	
										GameObject card = Instantiate (card4c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card4c";
										card.AddComponent<OnDestroyCard4c>();
										
										instances4c++;
										instancesCounter4cDeck3++;
										
										CardCounterManager.counter4c++;
										CardCounterManager.CardCounter4c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject4c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances5 == numberOfCards){
							instances5 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter5Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances5 < numberOfCards) {	
										GameObject card = Instantiate (card5, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card5";
										card.AddComponent<OnDestroyCard5>();
										
										instances5++;
										instancesCounter5Deck3++;
										
										CardCounterManager.counter5++;
										CardCounterManager.CardCounter5();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5a == numberOfCards){
							instances5a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter5aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances5a < numberOfCards) {	
										GameObject card = Instantiate (card5a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card5a";
										card.AddComponent<OnDestroyCard5a>();
										
										instances5a++;
										instancesCounter5aDeck3++;
										
										CardCounterManager.counter5a++;
										CardCounterManager.CardCounter5a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5b == numberOfCards){
							instances5b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter5bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances5b < numberOfCards) {	
										GameObject card = Instantiate (card5b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card5b";
										card.AddComponent<OnDestroyCard5b>();
										
										instances5b++;
										instancesCounter5bDeck3++;
										
										CardCounterManager.counter5b++;
										CardCounterManager.CardCounter5b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel5c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances5c == numberOfCards){
							instances5c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter5cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances5c < numberOfCards) {	
										GameObject card = Instantiate (card5c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card5c";
										card.AddComponent<OnDestroyCard5c>();
										
										instances5c++;
										instancesCounter5cDeck3++;
										
										CardCounterManager.counter5c++;
										CardCounterManager.CardCounter5c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject5c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances6 == numberOfCards){
							instances6 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter6Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances6 < numberOfCards) {	
										GameObject card = Instantiate (card6, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card6";
										card.AddComponent<OnDestroyCard6>();
										
										instances6++;
										instancesCounter6Deck3++;
										
										CardCounterManager.counter6++;
										CardCounterManager.CardCounter6();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6a == numberOfCards){
							instances6a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter6aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances6a < numberOfCards) {	
										GameObject card = Instantiate (card6a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card6a";
										card.AddComponent<OnDestroyCard6a>();
										
										instances6a++;
										instancesCounter6aDeck3++;
										
										CardCounterManager.counter6a++;
										CardCounterManager.CardCounter6a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6b == numberOfCards){
							instances6b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter6bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances6b < numberOfCards) {	
										GameObject card = Instantiate (card6b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card6b";
										card.AddComponent<OnDestroyCard6b>();
										
										instances6b++;
										instancesCounter6bDeck3++;
										
										CardCounterManager.counter6b++;
										CardCounterManager.CardCounter6b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel6c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances6c == numberOfCards){
							instances6c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter6cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances6c < numberOfCards) {	
										GameObject card = Instantiate (card6c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card6c";
										card.AddComponent<OnDestroyCard6c>();
										
										instances6c++;
										instancesCounter6cDeck3++;
										
										CardCounterManager.counter6c++;
										CardCounterManager.CardCounter6c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject6c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances7 == numberOfCards){
							instances7 = 0;
						}
					
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter7Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances7 < numberOfCards) {	
										GameObject card = Instantiate (card7, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card7";
										card.AddComponent<OnDestroyCard7>();
										
										instances7++;
										instancesCounter7Deck3++;
										
										CardCounterManager.counter7++;
										CardCounterManager.CardCounter7();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							}
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7a == numberOfCards){
							instances7a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter7aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances7a < numberOfCards) {	
										GameObject card = Instantiate (card7a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card7a";
										card.AddComponent<OnDestroyCard7a>();
										
										instances7a++;
										instancesCounter7aDeck3++;
										
										CardCounterManager.counter7a++;
										CardCounterManager.CardCounter7a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7b == numberOfCards){
							instances7b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter7bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances7b < numberOfCards) {	
										GameObject card = Instantiate (card7b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card7b";
										card.AddComponent<OnDestroyCard7b>();
										
										instances7b++;
										instancesCounter7bDeck3++;
										
										CardCounterManager.counter7b++;
										CardCounterManager.CardCounter7b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel7c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances7c == numberOfCards){
							instances7c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter7cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances7c < numberOfCards) {	
										GameObject card = Instantiate (card7c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card7c";
										card.AddComponent<OnDestroyCard7c>();
										
										instances7c++;
										instancesCounter7cDeck3++;
										
										CardCounterManager.counter7c++;
										CardCounterManager.CardCounter7c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject7c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances8 == numberOfCards){
							instances8 = 0;
						}
					
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter8Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances8 < numberOfCards) {	
										GameObject card = Instantiate (card8, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card8";
										card.AddComponent<OnDestroyCard8>();
										
										instances8++;
										instancesCounter8Deck3++;
										
										CardCounterManager.counter8++;
										CardCounterManager.CardCounter8();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							}
							
								lastClickTime = Time.time;
							
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8a == numberOfCards){
							instances8a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter8aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances8a < numberOfCards) {	
										GameObject card = Instantiate (card8a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card8a";
										card.AddComponent<OnDestroyCard8a>();
										
										instances8a++;
										instancesCounter8aDeck3++;
										
										CardCounterManager.counter8a++;
										CardCounterManager.CardCounter8a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8b == numberOfCards){
							instances8b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter8bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances8b < numberOfCards) {	
										GameObject card = Instantiate (card8b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card8b";
										card.AddComponent<OnDestroyCard8b>();
										
										instances8b++;
										instancesCounter8bDeck3++;
										
										CardCounterManager.counter8b++;
										CardCounterManager.CardCounter8b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel8c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances8c == numberOfCards){
							instances8c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter8cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances8c < numberOfCards) {	
										GameObject card = Instantiate (card8c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card8c";
										card.AddComponent<OnDestroyCard8c>();
										
										instances8c++;
										instancesCounter8cDeck3++;
										
										CardCounterManager.counter8c++;
										CardCounterManager.CardCounter8c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject8c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel9"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances9 == numberOfCards){
							instances9 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter9Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances9 < numberOfCards) {	
										GameObject card = Instantiate (card9, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card9";
										card.AddComponent<OnDestroyCard9>();
										
										instances9++;
										instancesCounter9Deck3++;
										
										CardCounterManager.counter9++;
										CardCounterManager.CardCounter9();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9a == numberOfCards){
							instances9a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter9aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances9a < numberOfCards) {	
										GameObject card = Instantiate (card9a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card9a";
										card.AddComponent<OnDestroyCard9a>();
										
										instances9a++;
										instancesCounter9aDeck3++;
										
										CardCounterManager.counter9a++;
										CardCounterManager.CardCounter9a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9b == numberOfCards){
							instances9b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter9bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances9b < numberOfCards) {	
										GameObject card = Instantiate (card9b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card9b";
										card.AddComponent<OnDestroyCard9b>();
										
										instances9b++;
										instancesCounter9bDeck3++;
										
										CardCounterManager.counter9b++;
										CardCounterManager.CardCounter9b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel9c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances9c == numberOfCards){
							instances9c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter9cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances9c < numberOfCards) {	
										GameObject card = Instantiate (card9c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card9c";
										card.AddComponent<OnDestroyCard9c>();
										
										instances9c++;
										instancesCounter9cDeck3++;
										
										CardCounterManager.counter9c++;
										CardCounterManager.CardCounter9c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject9c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances10 == numberOfCards){
							instances10 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter10Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances10 < numberOfCards) {	
										GameObject card = Instantiate (card10, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card10";
										card.AddComponent<OnDestroyCard10>();
										
										instances10++;
										instancesCounter10Deck3++;
										
										CardCounterManager.counter10++;
										CardCounterManager.CardCounter10();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10a == numberOfCards){
							instances10a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter10aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances10a < numberOfCards) {	
										GameObject card = Instantiate (card10a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card10a";
										card.AddComponent<OnDestroyCard10a>();
										
										instances10a++;
										instancesCounter10aDeck3++;
										
										CardCounterManager.counter10a++;
										CardCounterManager.CardCounter10a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10b == numberOfCards){
							instances10b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter10bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances10b < numberOfCards) {	
										GameObject card = Instantiate (card10b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card10b";
										card.AddComponent<OnDestroyCard10b>();
										
										instances10b++;
										instancesCounter10bDeck3++;
										
										CardCounterManager.counter10b++;
										CardCounterManager.CardCounter10b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel10c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances10c == numberOfCards){
							instances10c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter10cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances10c < numberOfCards) {	
										GameObject card = Instantiate (card10c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card10c";
										card.AddComponent<OnDestroyCard10c>();
										
										instances10c++;
										instancesCounter10cDeck3++;
										
										CardCounterManager.counter10c++;
										CardCounterManager.CardCounter10c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject10c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel11"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances11 == numberOfCards){
							instances11 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter11Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances11 < numberOfCards) {	
										GameObject card = Instantiate (card11, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card11";
										card.AddComponent<OnDestroyCard11>();
										
										instances11++;
										instancesCounter11Deck3++;
										
										CardCounterManager.counter11++;
										CardCounterManager.CardCounter11();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
					
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11a == numberOfCards){
							instances11a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter11aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances11a < numberOfCards) {	
										GameObject card = Instantiate (card11a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card11a";
										card.AddComponent<OnDestroyCard11a>();
										
										instances11a++;
										instancesCounter11aDeck3++;
										
										CardCounterManager.counter11a++;
										CardCounterManager.CardCounter11a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11b == numberOfCards){
							instances11b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter11bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances11b < numberOfCards) {	
										GameObject card = Instantiate (card11b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card11b";
										card.AddComponent<OnDestroyCard11b>();
										
										instances11b++;
										instancesCounter11bDeck3++;
										
										CardCounterManager.counter11b++;
										CardCounterManager.CardCounter11b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel11c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances11c == numberOfCards){
							instances11c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter11cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances11c < numberOfCards) {	
										GameObject card = Instantiate (card11c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card11c";
										card.AddComponent<OnDestroyCard11c>();
										
										instances11c++;
										instancesCounter11cDeck3++;
										
										CardCounterManager.counter11c++;
										CardCounterManager.CardCounter11c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject11c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel12"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances12 == numberOfCards){
							instances12 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter12Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances12 < numberOfCards) {	
										GameObject card = Instantiate (card12, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card12";
										card.AddComponent<OnDestroyCard12>();
										
										instances12++;
										instancesCounter12Deck3++;
										
										CardCounterManager.counter12++;
										CardCounterManager.CardCounter12();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12a == numberOfCards){
							instances12a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter12aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances12a < numberOfCards) {	
										GameObject card = Instantiate (card12a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card12a";
										card.AddComponent<OnDestroyCard12a>();
										
										instances12a++;
										instancesCounter12aDeck3++;
										
										CardCounterManager.counter12a++;
										CardCounterManager.CardCounter12a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12b == numberOfCards){
							instances12b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter12bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances12b < numberOfCards) {	
										GameObject card = Instantiate (card12b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card12b";
										card.AddComponent<OnDestroyCard12b>();
										
										instances12b++;
										instancesCounter12bDeck3++;
										
										CardCounterManager.counter12b++;
										CardCounterManager.CardCounter12b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel12c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances12c == numberOfCards){
							instances12c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter12cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances12c < numberOfCards) {	
										GameObject card = Instantiate (card12c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card12c";
										card.AddComponent<OnDestroyCard12c>();
										
										instances12c++;
										instancesCounter12cDeck3++;
										
										CardCounterManager.counter12c++;
										CardCounterManager.CardCounter12c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject12c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel13"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances13 == numberOfCards){
							instances13 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter13Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances13 < numberOfCards) {	
										GameObject card = Instantiate (card13, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card13";
										card.AddComponent<OnDestroyCard13>();
										
										instances13++;
										instancesCounter13Deck3++;
										
										CardCounterManager.counter13++;
										CardCounterManager.CardCounter13();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
							lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13a == numberOfCards){
							instances13a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter13aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances13a < numberOfCards) {	
										GameObject card = Instantiate (card13a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card13a";
										card.AddComponent<OnDestroyCard13a>();
										
										instances13a++;
										instancesCounter13aDeck3++;
										
										CardCounterManager.counter13a++;
										CardCounterManager.CardCounter13a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13b == numberOfCards){
							instances13b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter13bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances13b < numberOfCards) {	
										GameObject card = Instantiate (card13b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card13b";
										card.AddComponent<OnDestroyCard13b>();
										
										instances13b++;
										instancesCounter13bDeck3++;
										
										CardCounterManager.counter13b++;
										CardCounterManager.CardCounter13b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel13c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances13c == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter13cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances13c < numberOfCards) {	
										GameObject card = Instantiate (card13c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card13c";
										card.AddComponent<OnDestroyCard13c>();
										
										instances13c++;
										instancesCounter13cDeck3++;
										
										CardCounterManager.counter13c++;
										CardCounterManager.CardCounter13c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject13c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel14"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances14 == numberOfCards){
							instances14 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter14Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances14 < numberOfCards) {	
										GameObject card = Instantiate (card14, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card14";
										card.AddComponent<OnDestroyCard14>();
										
										instances14++;
										instancesCounter14Deck3++;
										
										CardCounterManager.counter14++;
										CardCounterManager.CardCounter14();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14a == numberOfCards){
							instances14a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter14aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances14a < numberOfCards) {	
										GameObject card = Instantiate (card14a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card14a";
										card.AddComponent<OnDestroyCard14a>();
										
										instances14a++;
										instancesCounter14aDeck3++;
										
										CardCounterManager.counter14a++;
										CardCounterManager.CardCounter14a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14b == numberOfCards){
							instances14b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter14bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances14b < numberOfCards) {	
										GameObject card = Instantiate (card14b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card14b";
										card.AddComponent<OnDestroyCard14b>();
										
										instances14b++;
										instancesCounter14bDeck3++;
										
										CardCounterManager.counter14b++;
										CardCounterManager.CardCounter14b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel14c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances14c == numberOfCards){
							instances14c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter14cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances14c < numberOfCards) {	
										GameObject card = Instantiate (card14c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card14c";
										card.AddComponent<OnDestroyCard14c>();
										
										instances14c++;
										instancesCounter14cDeck3++;
										
										CardCounterManager.counter14c++;
										CardCounterManager.CardCounter14c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject14c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel15"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances15 == numberOfCards){
							instances15 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter15Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances15 < numberOfCards) {	
										GameObject card = Instantiate (card15, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card15";
										card.AddComponent<OnDestroyCard15>();
										
										instances15++;
										instancesCounter15Deck3++;
										
										CardCounterManager.counter15++;
										CardCounterManager.CardCounter15();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15a == numberOfCards){
							instances15a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter15aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances15a < numberOfCards) {	
										GameObject card = Instantiate (card15a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card15a";
										card.AddComponent<OnDestroyCard15a>();
										
										instances15a++;
										instancesCounter15aDeck3++;
										
										CardCounterManager.counter15a++;
										CardCounterManager.CardCounter15a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15b == numberOfCards){
							instances15b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter15bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances15b < numberOfCards) {	
										GameObject card = Instantiate (card15b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card15b";
										card.AddComponent<OnDestroyCard15b>();
										
										instances15b++;
										instancesCounter15bDeck3++;
										
										CardCounterManager.counter15b++;
										CardCounterManager.CardCounter15b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel15c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances15c == numberOfCards){
							instances15c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter15cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances15c < numberOfCards) {	
										GameObject card = Instantiate (card15c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card15c";
										card.AddComponent<OnDestroyCard15c>();
										
										instances15c++;
										instancesCounter15cDeck3++;
										
										CardCounterManager.counter15c++;
										CardCounterManager.CardCounter15c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject15c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances16 == numberOfCards){
							instances16 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter16Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances16 < numberOfCards) {	
										GameObject card = Instantiate (card16, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card16";
										card.AddComponent<OnDestroyCard16>();
										
										instances16++;
										instancesCounter16Deck3++;
										
										CardCounterManager.counter16++;
										CardCounterManager.CardCounter16();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16a == numberOfCards){
							instances16a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter16aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances16a < numberOfCards) {	
										GameObject card = Instantiate (card16a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card16a";
										card.AddComponent<OnDestroyCard16a>();
										
										instances16a++;
										instancesCounter16aDeck3++;
										
										CardCounterManager.counter16a++;
										CardCounterManager.CardCounter16a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16b == numberOfCards){
							instances16b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter16bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card16b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card16b";
										card.AddComponent<OnDestroyCard16b>();
										
										instances16b++;
										instancesCounter16bDeck3++;
										
										CardCounterManager.counter16b++;
										CardCounterManager.CardCounter16b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel16c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances16c == numberOfCards){
							instances16c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter16cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances16c < numberOfCards) {	
										GameObject card = Instantiate (card16c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card16c";
										card.AddComponent<OnDestroyCard16c>();
										
										instances16c++;
										instancesCounter16cDeck3++;
										
										CardCounterManager.counter16c++;
										CardCounterManager.CardCounter16c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject16c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel17"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances17 == numberOfCards){
							instances17 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter17Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances17 < numberOfCards) {	
										GameObject card = Instantiate (card17, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card17";
										card.AddComponent<OnDestroyCard17>();
										
										instances17++;
										instancesCounter17Deck3++;
										
										CardCounterManager.counter17++;
										CardCounterManager.CardCounter17();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17a == numberOfCards){
							instances17a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter17aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances17a < numberOfCards) {	
										GameObject card = Instantiate (card17a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card17a";
										card.AddComponent<OnDestroyCard17a>();
										
										instances17a++;
										instancesCounter17aDeck3++;
										
										CardCounterManager.counter17a++;
										CardCounterManager.CardCounter17a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17b == numberOfCards){
							instances17b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter17bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances17b < numberOfCards) {	
										GameObject card = Instantiate (card17b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card17b";
										card.AddComponent<OnDestroyCard17b>();	
										
										instances17b++;
										instancesCounter17bDeck3++;
										
										CardCounterManager.counter17b++;
										CardCounterManager.CardCounter17b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel17c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances17c == numberOfCards){
							instances17c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter17cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances17c < numberOfCards) {	
										GameObject card = Instantiate (card17c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card17c";
										card.AddComponent<OnDestroyCard17c>();
										
										instances17c++;
										instancesCounter17cDeck3++;
										
										CardCounterManager.counter17c++;
										CardCounterManager.CardCounter17c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject17c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances18 == numberOfCards){
							instances18 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter18Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances18 < numberOfCards) {	
										GameObject card = Instantiate (card18, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card18";
										card.AddComponent<OnDestroyCard18>();
										
										instances18++;
										instancesCounter18Deck3++;
										
										CardCounterManager.counter18++;
										CardCounterManager.CardCounter18();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18a == numberOfCards){
							instances18a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter18aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances18a < numberOfCards) {	
										GameObject card = Instantiate (card18a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card18a";
										card.AddComponent<OnDestroyCard18a>();
										
										instances18a++;
										instancesCounter18aDeck3++;
										
										CardCounterManager.counter18a++;
										CardCounterManager.CardCounter18a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18b == numberOfCards){
							instances18b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter18bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances18b < numberOfCards) {	
										GameObject card = Instantiate (card18b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card18b";
										card.AddComponent<OnDestroyCard18b>();
										
										instances18b++;
										instancesCounter18bDeck3++;
										
										CardCounterManager.counter18b++;
										CardCounterManager.CardCounter18b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel18c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances18c == numberOfCards){
							instances18c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter18cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances18c < numberOfCards) {	
										GameObject card = Instantiate (card18c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card18c";
										card.AddComponent<OnDestroyCard18c>();
										
										instances18c++;
										instancesCounter18cDeck3++;
										
										CardCounterManager.counter18c++;
										CardCounterManager.CardCounter18c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject18c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel19"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances19 == numberOfCards){
							instances19 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter19Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances19 < numberOfCards) {	
										GameObject card = Instantiate (card19, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card19";
										card.AddComponent<OnDestroyCard19>();
										
										instances19++;
										instancesCounter19Deck3++;
										
										CardCounterManager.counter19++;
										CardCounterManager.CardCounter19();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19a == numberOfCards){
							instances19a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter19aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances19a < numberOfCards) {	
										GameObject card = Instantiate (card19a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card19a";
										card.AddComponent<OnDestroyCard19a>();
										
										instances19a++;
										instancesCounter19aDeck3++;
										
										CardCounterManager.counter19a++;
										CardCounterManager.CardCounter19a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19b == numberOfCards){
							instances19b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter19bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances19b < numberOfCards) {	
										GameObject card = Instantiate (card19b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card19b";
										card.AddComponent<OnDestroyCard19b>();
										
										instances19b++;
										instancesCounter19bDeck3++;
										
										CardCounterManager.counter19b++;
										CardCounterManager.CardCounter19b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel19c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances19c == numberOfCards){
							instances19c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter19cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances19c < numberOfCards) {	
										GameObject card = Instantiate (card19c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card19c";
										card.AddComponent<OnDestroyCard19c>();
										
										instances19c++;
										instancesCounter19cDeck3++;
										
										CardCounterManager.counter19c++;
										CardCounterManager.CardCounter19c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject19c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel20"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances20 == numberOfCards){
							instances20 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter20Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances20 < numberOfCards) {	
										GameObject card = Instantiate (card20, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card20";
										card.AddComponent<OnDestroyCard20>();
										
										instances20++;
										instancesCounter20Deck3++;
										
										CardCounterManager.counter20++;
										CardCounterManager.CardCounter20();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances20a == numberOfCards){
							instances20a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter20aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances20a < numberOfCards) {	
										GameObject card = Instantiate (card20a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card20a";
										card.AddComponent<OnDestroyCard20a>();
										
										instances20a++;
										instancesCounter20aDeck3++;
										
										CardCounterManager.counter20a++;
										CardCounterManager.CardCounter20a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances1 == numberOfCards){
							instances1 = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter20bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances20b < numberOfCards) {	
										GameObject card = Instantiate (card20b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card20b";
										card.AddComponent<OnDestroyCard20b>();
										
										instances20b++;
										instancesCounter20bDeck3++;
										
										CardCounterManager.counter20b++;
										CardCounterManager.CardCounter20b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel20c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances20c == numberOfCards){
							instances20c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter20cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances20c < numberOfCards) {	
										GameObject card = Instantiate (card20c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card20c";
										card.AddComponent<OnDestroyCard20c>();
										
										instances20c++;
										instancesCounter20cDeck3++;
										
										CardCounterManager.counter20c++;
										CardCounterManager.CardCounter20c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject20c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel21"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances21 == numberOfCards){
							instances21 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter21Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances21 < numberOfCards) {	
										GameObject card = Instantiate (card21, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card21";
										card.AddComponent<OnDestroyCard21>();
										
										instances21++;
										instancesCounter21Deck3++;
										
										CardCounterManager.counter21++;
										CardCounterManager.CardCounter21();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21a == numberOfCards){
							instances21a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter21aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances21a < numberOfCards) {	
										GameObject card = Instantiate (card21a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card21a";
										card.AddComponent<OnDestroyCard21a>();
										
										instances21a++;
										instancesCounter21aDeck3++;
										
										CardCounterManager.counter21a++;
										CardCounterManager.CardCounter21a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21b == numberOfCards){
							instances21b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter21bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances21b < numberOfCards) {	
										GameObject card = Instantiate (card21b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card21b";
										card.AddComponent<OnDestroyCard21b>();
										
										instances21b++;
										instancesCounter21bDeck3++;
										
										CardCounterManager.counter21b++;
										CardCounterManager.CardCounter21b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel21c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances21c == numberOfCards){
							instances21c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter21cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances21c < numberOfCards) {	
										GameObject card = Instantiate (card21c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card21c";
										card.AddComponent<OnDestroyCard21c>();
										
										instances21c++;
										instancesCounter21cDeck3++;
										
										CardCounterManager.counter21c++;
										CardCounterManager.CardCounter21c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject21c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){		
				if(hit.collider.gameObject.name == "CardModel22"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances22 == numberOfCards){
							instances22 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter22Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances22 < numberOfCards) {	
										GameObject card = Instantiate (card22, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card22";
										card.AddComponent<OnDestroyCard22>();
										
										instances22++;
										instancesCounter22Deck3++;
										
										CardCounterManager.counter22++;
										CardCounterManager.CardCounter22();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22a == numberOfCards){
							instances22a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter22aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances22a < numberOfCards) {	
										GameObject card = Instantiate (card22a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card22a";
										card.AddComponent<OnDestroyCard22a>();
										
										instances22a++;
										instancesCounter22aDeck3++;
										
										CardCounterManager.counter22a++;
										CardCounterManager.CardCounter22a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22b == numberOfCards){
							instances22b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter22bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances22b < numberOfCards) {	
										GameObject card = Instantiate (card22b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card22b";
										card.AddComponent<OnDestroyCard22b>();
										
										instances22b++;
										instancesCounter22bDeck3++;
										
										CardCounterManager.counter22b++;
										CardCounterManager.CardCounter22b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel22c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances22c == numberOfCards){
							instances22c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter22cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances22c < numberOfCards) {	
										GameObject card = Instantiate (card22c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card22c";
										card.AddComponent<OnDestroyCard22c>();
										
										instances22c++;
										instancesCounter22cDeck3++;
										
										CardCounterManager.counter22c++;
										CardCounterManager.CardCounter22c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject22c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel23"){	
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances23 == numberOfCards){
							instances23 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter23Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances23 < numberOfCards) {	
										GameObject card = Instantiate (card23, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card23";
										card.AddComponent<OnDestroyCard23>();
										
										instances23++;
										instancesCounter23Deck3++;
										
										CardCounterManager.counter23++;
										CardCounterManager.CardCounter23();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23a == numberOfCards){
							instances23a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter23aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances23a < numberOfCards) {	
										GameObject card = Instantiate (card23a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card23a";
										card.AddComponent<OnDestroyCard23a>();
										
										instances23a++;
										instancesCounter23aDeck3++;
										
										CardCounterManager.counter23a++;
										CardCounterManager.CardCounter23a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23b == numberOfCards){
							instances23b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter23bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances23b < numberOfCards) {	
										GameObject card = Instantiate (card23b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card23b";
										card.AddComponent<OnDestroyCard23b>();
										
										instances23b++;
										instancesCounter23bDeck3++;
										
										CardCounterManager.counter23b++;
										CardCounterManager.CardCounter23b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel23c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances23c == numberOfCards){
							instances23c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter23cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances23c < numberOfCards) {	
										GameObject card = Instantiate (card23c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card23c";
										card.AddComponent<OnDestroyCard23c>();
										
										instances23c++;
										instancesCounter23cDeck3++;
										
										CardCounterManager.counter23c++;
										CardCounterManager.CardCounter23c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject23c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel24"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances24 == numberOfCards){
							instances24 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter24Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances24 < numberOfCards) {	
										GameObject card = Instantiate (card24, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card24";
										card.AddComponent<OnDestroyCard24>();
										
										instances24++;
										instancesCounter24Deck3++;
										
										CardCounterManager.counter24++;
										CardCounterManager.CardCounter24();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24a == numberOfCards){
							instances24a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter24aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances24a < numberOfCards) {	
										GameObject card = Instantiate (card24a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card24a";
										card.AddComponent<OnDestroyCard24a>();
										
										instances24a++;
										instancesCounter24aDeck3++;
										
										CardCounterManager.counter24a++;
										CardCounterManager.CardCounter24a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24b == numberOfCards){
							instances24b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter24bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances24b < numberOfCards) {	
										GameObject card = Instantiate (card24b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card24b";
										card.AddComponent<OnDestroyCard24b>();
										
										instances24b++;
										instancesCounter24bDeck3++;
										
										CardCounterManager.counter24b++;
										CardCounterManager.CardCounter24b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel24c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances24c == numberOfCards){
							instances24c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter24cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances24c < numberOfCards) {	
										GameObject card = Instantiate (card24c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card24c";
										card.AddComponent<OnDestroyCard24c>();
										
										instances24c++;
										instancesCounter24cDeck3++;
										
										CardCounterManager.counter24c++;
										CardCounterManager.CardCounter24c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject24c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances25 == numberOfCards){
							instances25 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter25Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances25 < numberOfCards) {	
										GameObject card = Instantiate (card25, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card25";
										card.AddComponent<OnDestroyCard25>();
										
										instances25++;
										instancesCounter25Deck3++;
										
										CardCounterManager.counter25++;
										CardCounterManager.CardCounter25();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25a == numberOfCards){
							instances25a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter25aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances25a < numberOfCards) {	
										GameObject card = Instantiate (card25a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card25a";
										card.AddComponent<OnDestroyCard25a>();
										
										instances25a++;
										instancesCounter25aDeck3++;
										
										CardCounterManager.counter25a++;
										CardCounterManager.CardCounter25a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25b == numberOfCards){
							instances25b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter25bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances25b < numberOfCards) {	
										GameObject card = Instantiate (card25b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card25b";
										card.AddComponent<OnDestroyCard25b>();
										
										instances25b++;
										instancesCounter25bDeck3++;
										
										CardCounterManager.counter25b++;
										CardCounterManager.CardCounter25b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel25c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances25c == numberOfCards){
							instances25c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter25cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances25c < numberOfCards) {	
										GameObject card = Instantiate (card25c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card25c";
										card.AddComponent<OnDestroyCard25c>();
										
										instances25c++;
										instancesCounter25cDeck3++;
										
										CardCounterManager.counter25c++;
										CardCounterManager.CardCounter25c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject25c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances26 == numberOfCards){
							instances26 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter26Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances26 < numberOfCards) {	
										GameObject card = Instantiate (card26, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card26";
										card.AddComponent<OnDestroyCard26>();
										
										instances26++;
										instancesCounter26Deck3++;
										
										CardCounterManager.counter26++;
										CardCounterManager.CardCounter26();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26a == numberOfCards){
							instances26a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter26aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances26a < numberOfCards) {	
										GameObject card = Instantiate (card26a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card26a";
										card.AddComponent<OnDestroyCard26a>();
										
										instances26a++;
										instancesCounter26aDeck3++;
										
										CardCounterManager.counter26a++;
										CardCounterManager.CardCounter26a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26b == numberOfCards){
							instances26b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter26bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances26b < numberOfCards) {	
										GameObject card = Instantiate (card26b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card26b";
										card.AddComponent<OnDestroyCard26b>();
										
										instances26b++;
										instancesCounter26bDeck3++;
										
										CardCounterManager.counter26b++;
										CardCounterManager.CardCounter26b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel26c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances26c == numberOfCards){
							instances26c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter26cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances26c < numberOfCards) {	
										GameObject card = Instantiate (card26c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card26c";
										card.AddComponent<OnDestroyCard26c>();
										
										instances26c++;
										instancesCounter26cDeck3++;
										
										CardCounterManager.counter26c++;
										CardCounterManager.CardCounter26c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject26c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel27"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances27 == numberOfCards){
							instances27 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter27Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances27 < numberOfCards) {	
										GameObject card = Instantiate (card27, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card27";
										card.AddComponent<OnDestroyCard27>();
										
										instances27++;
										instancesCounter27Deck3++;
										
										CardCounterManager.counter27++;
										CardCounterManager.CardCounter27();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27a == numberOfCards){
							instances27a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter27aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances27a < numberOfCards) {	
										GameObject card = Instantiate (card27a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card27a";
										card.AddComponent<OnDestroyCard27a>();
										
										instances27a++;
										instancesCounter27aDeck3++;
										
										CardCounterManager.counter27a++;
										CardCounterManager.CardCounter27a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27b == numberOfCards){
							instances27b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter27bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances27b < numberOfCards) {	
										GameObject card = Instantiate (card27b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card27b";
										card.AddComponent<OnDestroyCard27b>();
										
										instances27b++;
										instancesCounter27bDeck3++;
										
										CardCounterManager.counter27b++;
										CardCounterManager.CardCounter27b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel27c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances27c == numberOfCards){
							instances27c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter27cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances27c < numberOfCards) {	
										GameObject card = Instantiate (card27c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card27c";
										card.AddComponent<OnDestroyCard27c>();
										
										instances27c++;
										instancesCounter27cDeck3++;
										
										CardCounterManager.counter27c++;
										CardCounterManager.CardCounter27c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject27c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances28 == numberOfCards){
							instances28 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter28Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances28 < numberOfCards) {	
										GameObject card = Instantiate (card28, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card28";
										card.AddComponent<OnDestroyCard28>();
										
										instances28++;
										instancesCounter28Deck3++;
										
										CardCounterManager.counter28++;
										CardCounterManager.CardCounter28();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28a == numberOfCards){
							instances28a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter28aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances28a < numberOfCards) {	
										GameObject card = Instantiate (card28a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card28a";
										card.AddComponent<OnDestroyCard28a>();
										
										instances28a++;
										instancesCounter28aDeck3++;
										
										CardCounterManager.counter28a++;
										CardCounterManager.CardCounter28a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28b == numberOfCards){
							instances28b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter28bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances28b < numberOfCards) {	
										GameObject card = Instantiate (card28b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card28b";
										card.AddComponent<OnDestroyCard28b>();
										
										instances28b++;
										instancesCounter28bDeck3++;
										
										CardCounterManager.counter28b++;
										CardCounterManager.CardCounter28b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel28c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances28c == numberOfCards){
							instances28c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter28cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances28c < numberOfCards) {	
										GameObject card = Instantiate (card28c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card28c";
										card.AddComponent<OnDestroyCard28c>();
										
										instances28c++;
										instancesCounter28cDeck3++;
										
										CardCounterManager.counter28c++;
										CardCounterManager.CardCounter28c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject28c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances29 == numberOfCards){
							instances29 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter29Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances29 < numberOfCards) {	
										GameObject card = Instantiate (card29, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card29";
										card.AddComponent<OnDestroyCard29>();
										
										instances29++;
										instancesCounter29Deck3++;
										
										CardCounterManager.counter29++;
										CardCounterManager.CardCounter29();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29a == numberOfCards){
							instances29a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter29aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances29a < numberOfCards) {	
										GameObject card = Instantiate (card29a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card29a";
										card.AddComponent<OnDestroyCard29a>();
										
										instances29a++;
										instancesCounter29aDeck3++;
										
										CardCounterManager.counter29a++;
										CardCounterManager.CardCounter29a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29b == numberOfCards){
							instances29b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter29bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances29b < numberOfCards) {	
										GameObject card = Instantiate (card29b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card29b";
										card.AddComponent<OnDestroyCard29b>();
										
										instances29b++;
										instancesCounter29bDeck3++;
										
										CardCounterManager.counter29b++;
										CardCounterManager.CardCounter29b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel29c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances29c == numberOfCards){
							instances29c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter29cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances29c < numberOfCards) {	
										GameObject card = Instantiate (card29c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card29c";
										card.AddComponent<OnDestroyCard29c>();
										
										instances29c++;
										instancesCounter29cDeck3++;
										
										CardCounterManager.counter29c++;
										CardCounterManager.CardCounter29c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject29c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel30"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances30 == numberOfCards){
							instances30 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter30Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances30 < numberOfCards) {	
										GameObject card = Instantiate (card30, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card30";
										card.AddComponent<OnDestroyCard30>();
										
										instances30++;
										instancesCounter30Deck3++;
										
										CardCounterManager.counter30++;
										CardCounterManager.CardCounter30();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30a == numberOfCards){
							instances30a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter30aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances30a < numberOfCards) {	
										GameObject card = Instantiate (card30a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card30a";
										card.AddComponent<OnDestroyCard30a>();
										
										instances30a++;
										instancesCounter30aDeck3++;
										
										CardCounterManager.counter30a++;
										CardCounterManager.CardCounter30a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30b == numberOfCards){
							instances30b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter30bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances30b < numberOfCards) {	
										GameObject card = Instantiate (card30b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card30b";
										card.AddComponent<OnDestroyCard30b>();
										
										instances30b++;
										instancesCounter30bDeck3++;
										
										CardCounterManager.counter30b++;
										CardCounterManager.CardCounter30b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel30c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances30c == numberOfCards){
							instances30c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter30cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances30c < numberOfCards) {	
										GameObject card = Instantiate (card30c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card30c";
										card.AddComponent<OnDestroyCard30c>();
										
										instances30c++;
										instancesCounter30cDeck3++;
										
										CardCounterManager.counter30c++;
										CardCounterManager.CardCounter30c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject30c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances31 == numberOfCards){
							instances31 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter31Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances31 < numberOfCards) {	
										GameObject card = Instantiate (card31, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card31";
										card.AddComponent<OnDestroyCard31>();
										
										instances31++;
										instancesCounter31Deck3++;
										
										CardCounterManager.counter31++;
										CardCounterManager.CardCounter31();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31a == numberOfCards){
							instances31a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter31aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances31a < numberOfCards) {	
										GameObject card = Instantiate (card31a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card31a";
										card.AddComponent<OnDestroyCard31a>();
										
										instances31a++;
										instancesCounter31aDeck3++;
										
										CardCounterManager.counter31a++;
										CardCounterManager.CardCounter31a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31b == numberOfCards){
							instances31b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter31bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances31b < numberOfCards) {	
										GameObject card = Instantiate (card31b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card31b";
										card.AddComponent<OnDestroyCard31b>();
										
										instances31b++;
										instancesCounter31bDeck3++;
										
										CardCounterManager.counter31b++;
										CardCounterManager.CardCounter31b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel31c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances31c == numberOfCards){
							instances31c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter31cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances31c < numberOfCards) {	
										GameObject card = Instantiate (card31c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card31c";
										card.AddComponent<OnDestroyCard31c>();
										
										instances31c++;
										instancesCounter31cDeck3++;
										
										CardCounterManager.counter31c++;
										CardCounterManager.CardCounter31c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject31c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			 
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32"){
					
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances32 == numberOfCards){
							instances32 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter32Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances32 < numberOfCards) {	
										GameObject card = Instantiate (card32, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card32";
										card.AddComponent<OnDestroyCard32>();
										
										instances32++;
										instancesCounter32Deck3++;
										
										CardCounterManager.counter32++;
										CardCounterManager.CardCounter32();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32a == numberOfCards){
							instances32a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter32aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances32a < numberOfCards) {	
										GameObject card = Instantiate (card32a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card32a";
										card.AddComponent<OnDestroyCard32a>();
										
										instances32a++;
										instancesCounter32aDeck3++;
										
										CardCounterManager.counter32a++;
										CardCounterManager.CardCounter32a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32b == numberOfCards){
							instances32b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter32bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances32b < numberOfCards) {	
										GameObject card = Instantiate (card32b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card32b";
										card.AddComponent<OnDestroyCard32b>();
										
										instances32b++;
										instancesCounter32bDeck3++;
										
										CardCounterManager.counter32b++;
										CardCounterManager.CardCounter32b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel32c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances32c == numberOfCards){
							instances32c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter32cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances32c < numberOfCards) {	
										GameObject card = Instantiate (card32c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card32c";
										card.AddComponent<OnDestroyCard32c>();
										
										instances32c++;
										instancesCounter32cDeck3++;
										
										CardCounterManager.counter32c++;
										CardCounterManager.CardCounter32c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject32c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel33"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances33 == numberOfCards){
							instances33 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter33Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances33 < numberOfCards) {	
										GameObject card = Instantiate (card33, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card33";
										card.AddComponent<OnDestroyCard33>();
										
										instances33++;
										instancesCounter33Deck3++;
										
										CardCounterManager.counter33++;
										CardCounterManager.CardCounter33();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33a == numberOfCards){
							instances33a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter33aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances33a < numberOfCards) {	
										GameObject card = Instantiate (card33a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card33a";
										card.AddComponent<OnDestroyCard33a>();
										
										instances33a++;
										instancesCounter33aDeck3++;
										
										CardCounterManager.counter33a++;
										CardCounterManager.CardCounter33a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33b == numberOfCards){
							instances33b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter33bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances33b < numberOfCards) {	
										GameObject card = Instantiate (card33b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card33b";
										card.AddComponent<OnDestroyCard33b>();
										
										instances33b++;
										instancesCounter33bDeck3++;
										
										CardCounterManager.counter33b++;
										CardCounterManager.CardCounter33b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel33c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances33c == numberOfCards){
							instances33c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter33cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances33c < numberOfCards) {	
										GameObject card = Instantiate (card33c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card33c";
										card.AddComponent<OnDestroyCard33c>();
										
										instances33c++;
										instancesCounter33cDeck3++;
										
										CardCounterManager.counter33c++;
										CardCounterManager.CardCounter33c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject33c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances34 == numberOfCards){
							instances34 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter34Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances34 < numberOfCards) {	
										GameObject card = Instantiate (card34, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card34";
										card.AddComponent<OnDestroyCard34>();
										
										instances34++;
										instancesCounter34Deck3++;
										
										CardCounterManager.counter34++;
										CardCounterManager.CardCounter34();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34a == numberOfCards){
							instances34a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter34aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances34a < numberOfCards) {	
										GameObject card = Instantiate (card34a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card34a";
										card.AddComponent<OnDestroyCard34a>();
										
										instances34a++;
										instancesCounter34aDeck3++;
										
										CardCounterManager.counter34a++;
										CardCounterManager.CardCounter34a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34b == numberOfCards){
							instances34b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter34bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances34b < numberOfCards) {	
										GameObject card = Instantiate (card34b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card34b";
										card.AddComponent<OnDestroyCard34b>();
										
										instances34b++;
										instancesCounter34bDeck3++;
										
										CardCounterManager.counter34b++;
										CardCounterManager.CardCounter34b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel34c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances34c == numberOfCards){
							instances34c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter34cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances34c < numberOfCards) {	
										GameObject card = Instantiate (card34c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card34c";
										card.AddComponent<OnDestroyCard34c>();
										
										instances34c++;
										instancesCounter34cDeck3++;
										
										CardCounterManager.counter34c++;
										CardCounterManager.CardCounter34c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject34c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances35 == numberOfCards){
								instances35 = 0;
							}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter35Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances35 < numberOfCards) {	
										GameObject card = Instantiate (card35, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card35";
										card.AddComponent<OnDestroyCard35>();
										
										instances35++;
										instancesCounter35Deck3++;
										
										CardCounterManager.counter35++;
										CardCounterManager.CardCounter35();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35a == numberOfCards){
							instances35a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter35aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances35a < numberOfCards) {	
										GameObject card = Instantiate (card35a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card35a";
										card.AddComponent<OnDestroyCard35a>();
										
										instances35a++;
										instancesCounter35aDeck3++;
										
										CardCounterManager.counter35a++;
										CardCounterManager.CardCounter35a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35b == numberOfCards){
							instances35b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter35bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances35b < numberOfCards) {	
										GameObject card = Instantiate (card35b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card35b";
										card.AddComponent<OnDestroyCard35b>();
										
										instances35b++;
										instancesCounter35bDeck3++;
										
										CardCounterManager.counter35b++;
										CardCounterManager.CardCounter35b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel35c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances35c == numberOfCards){
							instances35c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter35cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances35c < numberOfCards) {	
										GameObject card = Instantiate (card35c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card35c";
										card.AddComponent<OnDestroyCard35c>();
										
										instances35c++;
										instancesCounter35cDeck3++;
										
										CardCounterManager.counter35c++;
										CardCounterManager.CardCounter35c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject35c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances36 == numberOfCards){
							instances36 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter36Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances36 < numberOfCards) {	
										GameObject card = Instantiate (card36, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card36";
										card.AddComponent<OnDestroyCard36>();
										
										instances36++;
										instancesCounter36Deck3++;
										
										CardCounterManager.counter36++;
										CardCounterManager.CardCounter36();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36a == numberOfCards){
							instances36a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter36aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances36a < numberOfCards) {	
										GameObject card = Instantiate (card36a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card36a";
										card.AddComponent<OnDestroyCard36a>();
										
										instances36a++;
										instancesCounter36aDeck3++;
										
										CardCounterManager.counter36a++;
										CardCounterManager.CardCounter36a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36b == numberOfCards){
							instances36b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter36bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances36b < numberOfCards) {	
										GameObject card = Instantiate (card36b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card36b";
										card.AddComponent<OnDestroyCard36b>();
										
										instances36b++;
										instancesCounter36bDeck3++;
										
										CardCounterManager.counter36b++;
										CardCounterManager.CardCounter36b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel36c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances36c == numberOfCards){
							instances36c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter36cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances36c < numberOfCards) {	
										GameObject card = Instantiate (card36c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card36c";
										card.AddComponent<OnDestroyCard36c>();
										
										instances36c++;
										instancesCounter36cDeck3++;
										
										CardCounterManager.counter36c++;
										CardCounterManager.CardCounter36c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject36c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances37 == numberOfCards){
							instances37 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter37Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances37 < numberOfCards) {	
										GameObject card = Instantiate (card37, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card37";
										card.AddComponent<OnDestroyCard37>();
										
										instances37++;
										instancesCounter37Deck3++;
										
										CardCounterManager.counter37++;
										CardCounterManager.CardCounter37();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37a == numberOfCards){
							instances37a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter37aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances37a < numberOfCards) {	
										GameObject card = Instantiate (card37a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card37a";
										card.AddComponent<OnDestroyCard37a>();
										
										instances37a++;
										instancesCounter37aDeck3++;
										
										CardCounterManager.counter37a++;
										CardCounterManager.CardCounter37a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37b == numberOfCards){
							instances37b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter37bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances37b < numberOfCards) {	
										GameObject card = Instantiate (card37b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card37b";
										card.AddComponent<OnDestroyCard37b>();
										
										instances37b++;
										instancesCounter37bDeck3++;
										
										CardCounterManager.counter37b++;
										CardCounterManager.CardCounter37b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel37c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances37c == numberOfCards){
							instances37c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter37cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances37c < numberOfCards) {	
										GameObject card = Instantiate (card37c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card37c";
										card.AddComponent<OnDestroyCard37c>();
										
										instances37c++;
										instancesCounter37cDeck3++;
										
										CardCounterManager.counter37c++;
										CardCounterManager.CardCounter37c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject37c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances38 == numberOfCards){
							instances38 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter38Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances38 < numberOfCards) {	
										GameObject card = Instantiate (card38, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card38";
										card.AddComponent<OnDestroyCard38>();
										
										instances38++;
										instancesCounter38Deck3++;
										
										CardCounterManager.counter38++;
										CardCounterManager.CardCounter38();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38a == numberOfCards){
							instances38a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter38aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances38a < numberOfCards) {	
										GameObject card = Instantiate (card38a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card38a";
										card.AddComponent<OnDestroyCard38a>();
										
										instances38a++;
										instancesCounter38aDeck3++;
										
										CardCounterManager.counter38a++;
										CardCounterManager.CardCounter38a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38b == numberOfCards){
							instances38b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter38bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances38b < numberOfCards) {	
										GameObject card = Instantiate (card38b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card38b";
										card.AddComponent<OnDestroyCard38b>();
										
										instances38b++;
										instancesCounter38bDeck3++;
										
										CardCounterManager.counter38b++;
										CardCounterManager.CardCounter38b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel38c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances38c == numberOfCards){
							instances38c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter38cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances38c < numberOfCards) {	
										GameObject card = Instantiate (card38c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card38c";
										card.AddComponent<OnDestroyCard38c>();
										
										instances38c++;
										instancesCounter38cDeck3++;
										
										CardCounterManager.counter38c++;
										CardCounterManager.CardCounter38c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject38c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel39"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances39 == numberOfCards){
							instances39 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter39Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances39 < numberOfCards) {	
										GameObject card = Instantiate (card39, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card39";
										card.AddComponent<OnDestroyCard39>();
										
										instances39++;
										instancesCounter39Deck3++;
										
										CardCounterManager.counter39++;
										CardCounterManager.CardCounter39();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39a == numberOfCards){
							instances39a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter39aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances39a < numberOfCards) {	
										GameObject card = Instantiate (card39a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card39a";
										card.AddComponent<OnDestroyCard39a>();
										
										instances39a++;
										instancesCounter39aDeck3++;
										
										CardCounterManager.counter39a++;
										CardCounterManager.CardCounter39a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39b == numberOfCards){
							instances39b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter39bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances1 < numberOfCards) {	
										GameObject card = Instantiate (card39b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card39b";
										card.AddComponent<OnDestroyCard39b>();
										
										instances39b++;
										instancesCounter39bDeck3++;
										
										CardCounterManager.counter39b++;
										CardCounterManager.CardCounter39b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel39c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances39c == numberOfCards){
							instances39c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter39cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances39c < numberOfCards) {	
										GameObject card = Instantiate (card39c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card39c";
										card.AddComponent<OnDestroyCard39c>();
										
										instances39c++;
										instancesCounter39cDeck3++;
										
										CardCounterManager.counter39c++;
										CardCounterManager.CardCounter39c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject39c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances40 == numberOfCards){
							instances40 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter40Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances40 < numberOfCards) {	
										GameObject card = Instantiate (card40, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card40";
										card.AddComponent<OnDestroyCard40>();
										
										instances40++;
										instancesCounter40Deck3++;
										
										CardCounterManager.counter40++;
										CardCounterManager.CardCounter40();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40a == numberOfCards){
							instances40a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter40aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances40a < numberOfCards) {	
										GameObject card = Instantiate (card40a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card40a";
										card.AddComponent<OnDestroyCard40a>();
										
										instances40a++;
										instancesCounter40aDeck3++;
										
										CardCounterManager.counter40a++;
										CardCounterManager.CardCounter40a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40b == numberOfCards){
							instances40b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter40bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances40b < numberOfCards) {	
										GameObject card = Instantiate (card40b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card40b";
										card.AddComponent<OnDestroyCard40b>();
										
										instances40b++;
										instancesCounter40bDeck3++;
										
										CardCounterManager.counter40b++;
										CardCounterManager.CardCounter40b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel40c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances40c == numberOfCards){
							instances40c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter40cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances40c < numberOfCards) {	
										GameObject card = Instantiate (card40c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card40c";
										card.AddComponent<OnDestroyCard40c>();
										
										instances40c++;
										instancesCounter40cDeck3++;
										
										CardCounterManager.counter40c++;
										CardCounterManager.CardCounter40c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject40c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel41"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances41 == numberOfCards){
							instances41 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter41Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances41 < numberOfCards) {	
										GameObject card = Instantiate (card41, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card41";
										card.AddComponent<OnDestroyCard41>();
										
										instances41++;
										instancesCounter41Deck3++;
										
										CardCounterManager.counter41++;
										CardCounterManager.CardCounter41();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
					
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41a == numberOfCards){
							instances41a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter41aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances41a < numberOfCards) {	
										GameObject card = Instantiate (card41a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card41a";
										card.AddComponent<OnDestroyCard41a>();
										
										instances41a++;
										instancesCounter41aDeck3++;
										
										CardCounterManager.counter41a++;
										CardCounterManager.CardCounter41a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41b == numberOfCards){
							instances41b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter41bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances41b < numberOfCards) {	
										GameObject card = Instantiate (card41b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card41b";
										card.AddComponent<OnDestroyCard41b>();
										
										instances41b++;
										instancesCounter41bDeck3++;
										
										CardCounterManager.counter41b++;
										CardCounterManager.CardCounter41b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel41c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances41c == numberOfCards){
							instances41c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter41cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances41c < numberOfCards) {	
										GameObject card = Instantiate (card41c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card41c";
										card.AddComponent<OnDestroyCard41c>();
										
										instances41c++;
										instancesCounter41cDeck3++;
										
										CardCounterManager.counter41c++;
										CardCounterManager.CardCounter41c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject41c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel42"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances42 == numberOfCards){
							instances42 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter42Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances42 < numberOfCards) {	
										GameObject card = Instantiate (card42, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card42";
										card.AddComponent<OnDestroyCard42>();
										
										instances42++;
										instancesCounter42Deck3++;
										
										CardCounterManager.counter42++;
										CardCounterManager.CardCounter42();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42a == numberOfCards){
							instances42a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter42aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances42a < numberOfCards) {	
										GameObject card = Instantiate (card42a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card42a";
										card.AddComponent<OnDestroyCard42a>();
										
										instances42a++;
										instancesCounter42aDeck3++;
										
										CardCounterManager.counter42a++;
										CardCounterManager.CardCounter42a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42b == numberOfCards){
							instances42b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter42bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances42b < numberOfCards) {	
										GameObject card = Instantiate (card42b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card42b";
										card.AddComponent<OnDestroyCard42b>();
										
										instances42b++;
										instancesCounter42bDeck3++;
										
										CardCounterManager.counter42b++;
										CardCounterManager.CardCounter42b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel42c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances42c == numberOfCards){
							instances42c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter42cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances42c < numberOfCards) {	
										GameObject card = Instantiate (card42c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card42c";
										card.AddComponent<OnDestroyCard42c>();
										
										instances42c++;
										instancesCounter42cDeck3++;
										
										CardCounterManager.counter42c++;
										CardCounterManager.CardCounter42c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject42c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel43"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances43 == numberOfCards){
							instances43 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter43Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances43 < numberOfCards) {	
										GameObject card = Instantiate (card43, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card43";
										card.AddComponent<OnDestroyCard43>();
										
										instances43++;
										instancesCounter43Deck3++;
										
										CardCounterManager.counter43++;
										CardCounterManager.CardCounter43();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43a == numberOfCards){
							instances43a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter43aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances43a < numberOfCards) {	
										GameObject card = Instantiate (card43a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card43a";
										card.AddComponent<OnDestroyCard43a>();
										
										instances43a++;
										instancesCounter43aDeck3++;
										
										CardCounterManager.counter43a++;
										CardCounterManager.CardCounter43a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43b == numberOfCards){
							instances43b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter43bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances43b < numberOfCards) {	
										GameObject card = Instantiate (card43b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card43b";
										card.AddComponent<OnDestroyCard43b>();
										
										instances43b++;
										instancesCounter43bDeck3++;
										
										CardCounterManager.counter43b++;
										CardCounterManager.CardCounter43b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel43c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances43c == numberOfCards){
							instances43c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter43cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances43c < numberOfCards) {	
										GameObject card = Instantiate (card43c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card43c";
										card.AddComponent<OnDestroyCard43c>();
										
										instances43c++;
										instancesCounter43cDeck3++;
										
										CardCounterManager.counter43c++;
										CardCounterManager.CardCounter43c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject43c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel44"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances44 == numberOfCards){
							instances44 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter44Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances44 < numberOfCards) {	
										GameObject card = Instantiate (card44, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card44";
										card.AddComponent<OnDestroyCard44>();
										
										instances44++;
										instancesCounter44Deck3++;
										
										CardCounterManager.counter44++;
										CardCounterManager.CardCounter44();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44a == numberOfCards){
							instances44a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter44aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances44a < numberOfCards) {	
										GameObject card = Instantiate (card44a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card44a";
										card.AddComponent<OnDestroyCard44a>();
										
										instances44a++;
										instancesCounter44aDeck3++;
										
										CardCounterManager.counter44a++;
										CardCounterManager.CardCounter44a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44b == numberOfCards){
							instances44b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter44bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances44b < numberOfCards) {	
										GameObject card = Instantiate (card44b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card44b";
										card.AddComponent<OnDestroyCard44b>();
										
										instances44b++;
										instancesCounter44bDeck3++;
										
										CardCounterManager.counter44b++;
										CardCounterManager.CardCounter44b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel44c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances44c == numberOfCards){
							instances44c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter44cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances44c < numberOfCards) {	
										GameObject card = Instantiate (card44c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card44c";
										card.AddComponent<OnDestroyCard44c>();
										
										instances44c++;
										instancesCounter44cDeck3++;
										
										CardCounterManager.counter44c++;
										CardCounterManager.CardCounter44c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject44c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel45"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances45 == numberOfCards){
							instances45 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter45Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances45 < numberOfCards) {	
										GameObject card = Instantiate (card45, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card45";
										card.AddComponent<OnDestroyCard45>();
										
										instances45++;
										instancesCounter45Deck3++;
										
										CardCounterManager.counter45++;
										CardCounterManager.CardCounter45();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45a == numberOfCards){
							instances45a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter45aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances45a < numberOfCards) {	
										GameObject card = Instantiate (card45a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card45a";
										card.AddComponent<OnDestroyCard45a>();
										
										instances45a++;
										instancesCounter45aDeck3++;
										
										CardCounterManager.counter45a++;
										CardCounterManager.CardCounter45a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45b == numberOfCards){
							instances45b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter45bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances45b < numberOfCards) {	
										GameObject card = Instantiate (card45b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card45b";
										card.AddComponent<OnDestroyCard45b>();
										
										instances45b++;
										instancesCounter45bDeck3++;
										
										CardCounterManager.counter45b++;
										CardCounterManager.CardCounter45b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel45c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances45c == numberOfCards){
							instances45c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter45cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances45c < numberOfCards) {	
										GameObject card = Instantiate (card45c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card45c";
										card.AddComponent<OnDestroyCard45c>();
										
										instances45c++;
										instancesCounter45cDeck3++;
										
										CardCounterManager.counter45c++;
										CardCounterManager.CardCounter45c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject45c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances46 == numberOfCards){
							instances46 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter46Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances46 < numberOfCards) {	
										GameObject card = Instantiate (card46, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card46";
										card.AddComponent<OnDestroyCard46>();
										
										instances46++;
										instancesCounter46Deck3++;
										
										CardCounterManager.counter46++;
										CardCounterManager.CardCounter46();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46a == numberOfCards){
							instances46a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter46aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances46a < numberOfCards) {	
										GameObject card = Instantiate (card46a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card46a";
										card.AddComponent<OnDestroyCard46a>();
										
										instances46a++;
										instancesCounter46aDeck3++;
										
										CardCounterManager.counter46a++;
										CardCounterManager.CardCounter46a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46b == numberOfCards){
							instances46b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter46bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances46b < numberOfCards) {	
										GameObject card = Instantiate (card46b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card46b";
										card.AddComponent<OnDestroyCard46b>();
										
										instances46b++;
										instancesCounter46bDeck3++;
										
										CardCounterManager.counter46b++;
										CardCounterManager.CardCounter46b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel46c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances46c == numberOfCards){
							instances46c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter46cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances46c < numberOfCards) {	
										GameObject card = Instantiate (card46c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card46c";
										card.AddComponent<OnDestroyCard46c>();
										
										instances46c++;
										instancesCounter46cDeck3++;
										
										CardCounterManager.counter46c++;
										CardCounterManager.CardCounter46c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject46c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel47"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances47 == numberOfCards){
							instances47 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter47Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances47 < numberOfCards) {	
										GameObject card = Instantiate (card47, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card47";
										card.AddComponent<OnDestroyCard47>();
										
										instances47++;
										instancesCounter47Deck3++;
										
										CardCounterManager.counter47++;
										CardCounterManager.CardCounter47();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47a == numberOfCards){
							instances47a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter47aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances47a < numberOfCards) {	
										GameObject card = Instantiate (card47a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card47a";
										card.AddComponent<OnDestroyCard47a>();
										
										instances47a++;
										instancesCounter47aDeck3++;
										
										CardCounterManager.counter47a++;
										CardCounterManager.CardCounter47a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47b == numberOfCards){
							instances47b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter47bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances47b < numberOfCards) {	
										GameObject card = Instantiate (card47b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card47b";
										card.AddComponent<OnDestroyCard47b>();
										
										instances47b++;
										instancesCounter47bDeck3++;
										
										CardCounterManager.counter47b++;
										CardCounterManager.CardCounter47b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel47c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances47c == numberOfCards){
							instances47c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter47cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances47c < numberOfCards) {	
										GameObject card = Instantiate (card47c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card47c";
										card.AddComponent<OnDestroyCard47c>();
										
										instances47c++;
										instancesCounter47cDeck3++;
										
										CardCounterManager.counter47c++;
										CardCounterManager.CardCounter47c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject47c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances48 == numberOfCards){
							instances48 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter48Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances48 < numberOfCards) {	
										GameObject card = Instantiate (card48, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card48";
										card.AddComponent<OnDestroyCard48>();
										
										instances48++;
										instancesCounter48Deck3++;
										
										CardCounterManager.counter48++;
										CardCounterManager.CardCounter48();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48a == numberOfCards){
							instances48a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter48aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances48a < numberOfCards) {	
										GameObject card = Instantiate (card48a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card48a";
										card.AddComponent<OnDestroyCard48a>();
										
										instances48a++;
										instancesCounter48aDeck3++;
										
										CardCounterManager.counter48a++;
										CardCounterManager.CardCounter48a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48b == numberOfCards){
							instances48b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter48bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances48b < numberOfCards) {	
										GameObject card = Instantiate (card48b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card48b";
										card.AddComponent<OnDestroyCard48b>();
										
										instances48b++;
										instancesCounter48bDeck3++;
										
										CardCounterManager.counter48b++;
										CardCounterManager.CardCounter48b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel48c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances48c == numberOfCards){
							instances48c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter48cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances48c < numberOfCards) {	
										GameObject card = Instantiate (card48c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card48c";
										card.AddComponent<OnDestroyCard48c>();
										
										instances48c++;
										instancesCounter48cDeck3++;
										
										CardCounterManager.counter48c++;
										CardCounterManager.CardCounter48c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject48c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel49"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances49 == numberOfCards){
							instances49 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter49Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances49 < numberOfCards) {	
										GameObject card = Instantiate (card49, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card49";
										card.AddComponent<OnDestroyCard49>();
										
										instances49++;
										instancesCounter49Deck3++;
										
										CardCounterManager.counter49++;
										CardCounterManager.CardCounter49();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49a == numberOfCards){
							instances49a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter49aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances49a < numberOfCards) {	
										GameObject card = Instantiate (card49a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card49a";
										card.AddComponent<OnDestroyCard49a>();
										
										instances49a++;
										instancesCounter49aDeck3++;
										
										CardCounterManager.counter49a++;
										CardCounterManager.CardCounter49a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49b == numberOfCards){
							instances49b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter49bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances49b < numberOfCards) {	
										GameObject card = Instantiate (card49b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card49b";
										card.AddComponent<OnDestroyCard49b>();
										
										instances49b++;
										instancesCounter49bDeck3++;
										
										CardCounterManager.counter49b++;
										CardCounterManager.CardCounter49b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel49c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances49c == numberOfCards){
							instances49c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter49cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances49c < numberOfCards) {	
										GameObject card = Instantiate (card49c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card49c";
										card.AddComponent<OnDestroyCard49c>();
										
										instances49c++;
										instancesCounter49cDeck3++;
										
										CardCounterManager.counter49c++;
										CardCounterManager.CardCounter49c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject49c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel50"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances50 == numberOfCards){
							instances50 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter50Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances50 < numberOfCards) {	
										GameObject card = Instantiate (card50, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card50";
										card.AddComponent<OnDestroyCard50>();
										
										instances50++;
										instancesCounter50Deck3++;
										
										CardCounterManager.counter50++;
										CardCounterManager.CardCounter50();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50a == numberOfCards){
							instances50a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter50aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances50a < numberOfCards) {	
										GameObject card = Instantiate (card50a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card50a";
										card.AddComponent<OnDestroyCard50a>();
										
										instances50a++;
										instancesCounter50aDeck3++;
										
										CardCounterManager.counter50a++;
										CardCounterManager.CardCounter50a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50b == numberOfCards){
							instances50b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter50bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances50b < numberOfCards) {	
										GameObject card = Instantiate (card50b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card50b";
										card.AddComponent<OnDestroyCard50b>();
										
										instances50b++;
										instancesCounter50bDeck3++;
										
										CardCounterManager.counter50b++;
										CardCounterManager.CardCounter50b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel50c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances50c == numberOfCards){
							instances50c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter50cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances50c < numberOfCards) {	
										GameObject card = Instantiate (card50c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card50c";
										card.AddComponent<OnDestroyCard50c>();
										
										instances50c++;
										instancesCounter50cDeck3++;
										
										CardCounterManager.counter50c++;
										CardCounterManager.CardCounter50c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject50c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){	
				if(hit.collider.gameObject.name == "CardModel51"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances51 == numberOfCards){
							instances51 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter51Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances51 < numberOfCards) {	
										GameObject card = Instantiate (card51, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card51";
										card.AddComponent<OnDestroyCard51>();
										
										instances51++;
										instancesCounter51Deck3++;
										
										CardCounterManager.counter51++;
										CardCounterManager.CardCounter51();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51a == numberOfCards){
							instances51a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter51aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances51a < numberOfCards) {	
										GameObject card = Instantiate (card51a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card51a";
										card.AddComponent<OnDestroyCard51a>();
										
										instances51a++;
										instancesCounter51aDeck3++;
										
										CardCounterManager.counter51a++;
										CardCounterManager.CardCounter51a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51b == numberOfCards){
							instances51b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter51bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances51b < numberOfCards) {	
										GameObject card = Instantiate (card51b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card51b";
										card.AddComponent<OnDestroyCard51b>();
										
										instances51b++;
										instancesCounter51bDeck3++;
										
										CardCounterManager.counter51b++;
										CardCounterManager.CardCounter51b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel51c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances51c == numberOfCards){
							instances51c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter51cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances51c < numberOfCards) {	
										GameObject card = Instantiate (card51c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card51c";
										card.AddComponent<OnDestroyCard51c>();
										
										instances51c++;
										instancesCounter51cDeck3++;
										
										CardCounterManager.counter51c++;
										CardCounterManager.CardCounter51c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject51c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){		
				if(hit.collider.gameObject.name == "CardModel52"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances52 == numberOfCards){
							instances52 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter52Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances52 < numberOfCards) {	
										GameObject card = Instantiate (card52, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card52";
										card.AddComponent<OnDestroyCard52>();
										
										instances52++;
										instancesCounter52Deck3++;
										
										CardCounterManager.counter52++;
										CardCounterManager.CardCounter52();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52a == numberOfCards){
							instances52a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter52aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances52a < numberOfCards) {	
										GameObject card = Instantiate (card52a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card52a";
										card.AddComponent<OnDestroyCard52a>();
										
										instances52a++;
										instancesCounter52aDeck3++;
										
										CardCounterManager.counter52a++;
										CardCounterManager.CardCounter52a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52b == numberOfCards){
							instances52b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter52bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances52b < numberOfCards) {	
										GameObject card = Instantiate (card52b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card52b";
										card.AddComponent<OnDestroyCard52b>();
										
										instances52b++;
										instancesCounter52bDeck3++;
										
										CardCounterManager.counter52b++;
										CardCounterManager.CardCounter52b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel52c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances52c == numberOfCards){
							instances52c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter52cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances52c < numberOfCards) {	
										GameObject card = Instantiate (card52c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card52c";
										card.AddComponent<OnDestroyCard52c>();
										
										instances52c++;
										instancesCounter52cDeck3++;
										
										CardCounterManager.counter52c++;
										CardCounterManager.CardCounter52c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject52c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){

				if(hit.collider.gameObject.name == "CardModel53"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances53 == numberOfCards){
							instances53 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter53Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances53 < numberOfCards) {	
										GameObject card = Instantiate (card53, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card53";
										card.AddComponent<OnDestroyCard53>();
										
										instances53++;
										instancesCounter53Deck3++;
										
										CardCounterManager.counter53++;
										CardCounterManager.CardCounter53();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53a == numberOfCards){
							instances53a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter53aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances53a < numberOfCards) {	
										GameObject card = Instantiate (card53a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card53a";
										card.AddComponent<OnDestroyCard53a>();
										
										instances53a++;
										instancesCounter53aDeck3++;
										
										CardCounterManager.counter53a++;
										CardCounterManager.CardCounter53a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53b == numberOfCards){
							instances53b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter53bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances53b < numberOfCards) {	
										GameObject card = Instantiate (card53b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card53b";
										card.AddComponent<OnDestroyCard53b>();
										
										instances53b++;
										instancesCounter53bDeck3++;
										
										CardCounterManager.counter53b++;
										CardCounterManager.CardCounter53b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel53c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances53c == numberOfCards){
							instances53c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter53cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances53c < numberOfCards) {	
										GameObject card = Instantiate (card53c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card53c";
										card.AddComponent<OnDestroyCard53c>();
										
										instances53c++;
										instancesCounter53cDeck3++;
										
										CardCounterManager.counter53c++;
										CardCounterManager.CardCounter53c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject53c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel54"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances54 == numberOfCards){
							instances54 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter54Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances54 < numberOfCards) {	
										GameObject card = Instantiate (card54, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card54";
										card.AddComponent<OnDestroyCard54>();
										
										instances54++;
										instancesCounter54Deck3++;
										
										CardCounterManager.counter54++;
										CardCounterManager.CardCounter54();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54a == numberOfCards){
							instances54a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter54aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances54a < numberOfCards) {	
										GameObject card = Instantiate (card54a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card54a";
										card.AddComponent<OnDestroyCard54a>();
										
										instances54a++;
										instancesCounter54aDeck3++;
										
										CardCounterManager.counter54a++;
										CardCounterManager.CardCounter54a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54b == numberOfCards){
							instances54b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter54bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances54b < numberOfCards) {	
										GameObject card = Instantiate (card54b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card54b";
										card.AddComponent<OnDestroyCard54b>();
										
										instances54b++;
										instancesCounter54bDeck3++;
										
										CardCounterManager.counter54b++;
										CardCounterManager.CardCounter54b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel54c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances54c == numberOfCards){
							instances54c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter54cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances54c < numberOfCards) {	
										GameObject card = Instantiate (card54c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card54c";
										card.AddComponent<OnDestroyCard54c>();
										
										instances54c++;
										instancesCounter54cDeck3++;
										
										CardCounterManager.counter54c++;
										CardCounterManager.CardCounter54c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject54c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances55 == numberOfCards){
							instances55 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter55Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances55 < numberOfCards) {	
										GameObject card = Instantiate (card55, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card55";
										card.AddComponent<OnDestroyCard55>();
										
										instances55++;
										instancesCounter55Deck3++;
										
										CardCounterManager.counter55++;
										CardCounterManager.CardCounter55();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55a == numberOfCards){
							instances55a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter55aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances55a < numberOfCards) {	
										GameObject card = Instantiate (card55a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card55a";
										card.AddComponent<OnDestroyCard55a>();
										
										instances55a++;
										instancesCounter55aDeck3++;
										
										CardCounterManager.counter55a++;
										CardCounterManager.CardCounter55a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55b == numberOfCards){
							instances55b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter55bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances55b < numberOfCards) {	
										GameObject card = Instantiate (card55b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card55b";
										card.AddComponent<OnDestroyCard55b>();
										
										instances55b++;
										instancesCounter55bDeck3++;
										
										CardCounterManager.counter55b++;
										CardCounterManager.CardCounter55b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel55c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances55c == numberOfCards){
							instances55c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter55cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances55c < numberOfCards) {	
										GameObject card = Instantiate (card55c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card55c";
										card.AddComponent<OnDestroyCard55c>();
										
										instances55c++;
										instancesCounter55cDeck3++;
										
										CardCounterManager.counter55c++;
										CardCounterManager.CardCounter55c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject55c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances56 == numberOfCards){
							instances56 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter56Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances56 < numberOfCards) {	
										GameObject card = Instantiate (card56, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card56";
										card.AddComponent<OnDestroyCard56>();
										
										instances56++;
										instancesCounter56Deck3++;
										
										CardCounterManager.counter56++;
										CardCounterManager.CardCounter56();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56a == numberOfCards){
							instances56a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter56aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances56a < numberOfCards) {	
										GameObject card = Instantiate (card56a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card56a";
										card.AddComponent<OnDestroyCard56a>();
										
										instances56a++;
										instancesCounter56aDeck3++;
										
										CardCounterManager.counter56a++;
										CardCounterManager.CardCounter56a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56b == numberOfCards){
							instances56b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter56bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances56b < numberOfCards) {	
										GameObject card = Instantiate (card56b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card56b";
										card.AddComponent<OnDestroyCard56b>();
										
										instances56b++;
										instancesCounter56bDeck3++;
										
										CardCounterManager.counter56b++;
										CardCounterManager.CardCounter56b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel56c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances56c == numberOfCards){
							instances56c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter56cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances56c < numberOfCards) {	
										GameObject card = Instantiate (card56c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card56c";
										card.AddComponent<OnDestroyCard56c>();
										
										instances56c++;
										instancesCounter56cDeck3++;
										
										CardCounterManager.counter56c++;
										CardCounterManager.CardCounter56c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject56c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}


			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel57"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances57 == numberOfCards){
							instances57 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter57Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances57 < numberOfCards) {	
										GameObject card = Instantiate (card57, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card57";
										card.AddComponent<OnDestroyCard57>();
										
										instances57++;
										instancesCounter57Deck3++;
										
										CardCounterManager.counter57++;
										CardCounterManager.CardCounter57();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57a == numberOfCards){
							instances57a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter57aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances57a < numberOfCards) {	
										GameObject card = Instantiate (card57a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card57a";
										card.AddComponent<OnDestroyCard57a>();
										
										instances57a++;
										instancesCounter57aDeck3++;
										
										CardCounterManager.counter57a++;
										CardCounterManager.CardCounter57a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57b == numberOfCards){
							instances57b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter57bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances57b < numberOfCards) {	
										GameObject card = Instantiate (card57b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card57b";
										card.AddComponent<OnDestroyCard57b>();
										
										instances57b++;
										instancesCounter57bDeck3++;
										
										CardCounterManager.counter57b++;
										CardCounterManager.CardCounter57b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel57c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances57c == numberOfCards){
							instances57c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter57cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances57c < numberOfCards) {	
										GameObject card = Instantiate (card57c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card57c";
										card.AddComponent<OnDestroyCard57c>();
										
										instances57c++;
										instancesCounter57cDeck3++;
										
										CardCounterManager.counter57c++;
										CardCounterManager.CardCounter57c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject57c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances58 == numberOfCards){
							instances58 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter58Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances58 < numberOfCards) {	
										GameObject card = Instantiate (card58, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card58";
										card.AddComponent<OnDestroyCard58>();
										
										instances58++;
										instancesCounter58Deck3++;
										
										CardCounterManager.counter58++;
										CardCounterManager.CardCounter58();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58a == numberOfCards){
							instances58a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter58aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances58a < numberOfCards) {	
										GameObject card = Instantiate (card58a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card58a";
										card.AddComponent<OnDestroyCard58a>();
										
										instances58a++;
										instancesCounter58aDeck3++;
										
										CardCounterManager.counter58a++;
										CardCounterManager.CardCounter58a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58b == numberOfCards){
							instances58b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter58bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances58b < numberOfCards) {	
										GameObject card = Instantiate (card58b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card58b";
										card.AddComponent<OnDestroyCard58b>();
										
										instances58b++;
										instancesCounter58bDeck3++;
										
										CardCounterManager.counter58b++;
										CardCounterManager.CardCounter58b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel58c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances58c == numberOfCards){
							instances58c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter58cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances58c < numberOfCards) {	
										GameObject card = Instantiate (card58c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card58c";
										card.AddComponent<OnDestroyCard58c>();
										
										instances58c++;
										instancesCounter58cDeck3++;
										
										CardCounterManager.counter58c++;
										CardCounterManager.CardCounter58c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject58c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances59 == numberOfCards){
							instances59 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter59Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances59 < numberOfCards) {	
										GameObject card = Instantiate (card59, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card59";
										card.AddComponent<OnDestroyCard59>();
										
										instances59++;
										instancesCounter59Deck3++;
										
										CardCounterManager.counter59++;
										CardCounterManager.CardCounter59();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}
				
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59a == numberOfCards){
							instances59a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter59aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances59a < numberOfCards) {	
										GameObject card = Instantiate (card59a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card59a";
										card.AddComponent<OnDestroyCard59a>();
										
										instances59a++;
										instancesCounter59aDeck3++;
										
										CardCounterManager.counter59a++;
										CardCounterManager.CardCounter59a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59b == numberOfCards){
							instances59b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter59bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances59b < numberOfCards) {	
										GameObject card = Instantiate (card59b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card59b";
										card.AddComponent<OnDestroyCard59b>();
										
										instances59b++;
										instancesCounter59bDeck3++;
										
										CardCounterManager.counter59b++;
										CardCounterManager.CardCounter59b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel59c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances59c == numberOfCards){
							instances59c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter59cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances59c < numberOfCards) {	
										GameObject card = Instantiate (card59c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card59c";
										card.AddComponent<OnDestroyCard59c>();
										
										instances59c++;
										instancesCounter59cDeck3++;
										
										CardCounterManager.counter59c++;
										CardCounterManager.CardCounter59c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject59c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}

			if(Physics.Raycast(ray,out hit)){
				if(hit.collider.gameObject.name == "CardModel60"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						if(instances60 == numberOfCards){
							instances60 = 0;
						}
							
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter60Deck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances60 < numberOfCards) {	
										GameObject card = Instantiate (card60, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card60";
										card.AddComponent<OnDestroyCard60>();
										
										instances60++;
										instancesCounter60Deck3++;
										
										CardCounterManager.counter60++;
										CardCounterManager.CardCounter60();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
							
								lastClickTime = Time.time;
						}
					}				
				 
				}

			}
				
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60a"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60a == numberOfCards){
							instances60a = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter60aDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances60a < numberOfCards) {	
										GameObject card = Instantiate (card60a, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card60a";
										card.AddComponent<OnDestroyCard60a>();
										
										instances60a++;
										instancesCounter60aDeck3++;
										
										CardCounterManager.counter60a++;
										CardCounterManager.CardCounter60a();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60a.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60b"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60b == numberOfCards){
							instances60b = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter60bDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances60b < numberOfCards) {	
										GameObject card = Instantiate (card60b, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card60b";
										card.AddComponent<OnDestroyCard60b>();
										
										instances60b++;
										instancesCounter60bDeck3++;
										
										CardCounterManager.counter60b++;
										CardCounterManager.CardCounter60b();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60b.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			if(Physics.Raycast(ray,out hit)){
				
				if(hit.collider.gameObject.name == "CardModel60c"){
					if(hit.collider.gameObject.transform.localScale.magnitude >= modelCardScale.magnitude){
						
						if(instances60c == numberOfCards){
							instances60c = 0;
						}
						
						if(Input.GetKeyDown(KeyCode.Mouse0)){
							if(Time.time - lastClickTime < catchTime){
								
								if(switcher3 && spawnPoints3.Count != 0 && instancesCounter60cDeck3 < numberOfInstancesCounter){
									spawnPoint3 = spawnPoints3[Random.Range(0,spawnPoints3.Count)];
									
									while(instances60c < numberOfCards) {	
										GameObject card = Instantiate (card60c, spawnPoint3.transform.position,Quaternion.identity) as GameObject;
										card.transform.parent = spawnPoint3.transform;
										card.transform.localScale = normalCardScale;
										card.name = "instantiated3Card60c";
										card.AddComponent<OnDestroyCard60c>();
										
										instances60c++;
										instancesCounter60cDeck3++;
										
										CardCounterManager.counter60c++;
										CardCounterManager.CardCounter60c();
										
										if(System.Convert.ToInt32(DeckManager.deckManager.instancesCounterTextObject60c.GetComponent<Text>().text) <= 0){
											hit.collider.gameObject.transform.localScale = lockedCardScale;
										}else{
											hit.collider.gameObject.transform.localScale = modelCardScale;
										}
										
										spawnPoints3.Remove(spawnPoint3);
									}
								}
							
							}
								lastClickTime = Time.time;
						}
					}				
				 
				}
			}
			
			#endregion
			
			
		
		}	
		
		/** Create the deck 1 */
		public void CreateDeck1(){
			
			switcher1 = true;
			switcher2 = false;
			switcher3 = false;
			
			if(SaveCardDeck1.saveCardDeck1.cardsDeck1.Count > 0){
				SaveCardDeck1.saveCardDeck1.cardsDeck1.Clear();
				foreach(string name in SaveCardDeck1.saveCardDeck1.cardsDeck1){
					GameObject.Destroy(GameObject.Find(name));
				}
				
			}
			if(SaveCardDeck1.editDeck1.Count > 0){
				SaveCardDeck1.editDeck1.Clear();
				foreach(GameObject cardObject in SaveCardDeck1.editDeck1){
					GameObject.Destroy(cardObject);
				}
			}
			
			if(File.Exists(Path.Combine(Application.persistentDataPath, SaveCardDeck1.BINARY_FILE1))){
				
				File.Delete(Path.Combine(Application.persistentDataPath, SaveCardDeck1.BINARY_FILE1));
				
				}
				
			
			deckSize.SetActive(true);
			
			//SaveCardDeck1.GetCardCounterInDeck1();
			
			SaveCardDeck1.saveCardDeck1.create1Button.GetComponent<Button>().interactable = false;
			SaveCardDeck1.saveCardDeck1.delete1Button.GetComponent<Button>().interactable = true;
			//GetDeck1CardsOnCreate();
			//GetDeck2CardsOnCreate();
			//GetDeck3CardsOnCreate();
				
			}
			
		public void CreateDeck2(){
			
			switcher1 = false;
			switcher2 = true;
			switcher3 = false;
			
			if(SaveCardDeck2.saveCardDeck2.cardsDeck2.Count > 0){
				SaveCardDeck2.saveCardDeck2.cardsDeck2.Clear();
				foreach(string name in SaveCardDeck2.saveCardDeck2.cardsDeck2){
					GameObject.Destroy(GameObject.Find(name));
				}
				
			}
			if(SaveCardDeck2.editDeck2.Count > 0){
				SaveCardDeck2.editDeck2.Clear();
				foreach(GameObject cardObject in SaveCardDeck2.editDeck2){
					GameObject.Destroy(cardObject);
				}
			}
			
			if(File.Exists(Path.Combine(Application.persistentDataPath, SaveCardDeck2.BINARY_FILE2))){
				
				File.Delete(Path.Combine(Application.persistentDataPath, SaveCardDeck2.BINARY_FILE2));
				
				}
			
			deckSize.SetActive(true);
			
			//SaveCardDeck2.GetCardCounterInDeck2();
			
			SaveCardDeck2.saveCardDeck2.create2Button.GetComponent<Button>().interactable = false;
			SaveCardDeck2.saveCardDeck2.delete2Button.GetComponent<Button>().interactable = true;
			//GetDeck1CardsOnCreate();
			//GetDeck2CardsOnCreate();
			//GetDeck3CardsOnCreate();
		
		}
			
			
			
		public void CreateDeck3(){
			
			switcher1 = false;
			switcher2 = false;
			switcher3 = true;
			
			if(SaveCardDeck3.saveCardDeck3.cardsDeck3.Count > 0){
				SaveCardDeck3.saveCardDeck3.cardsDeck3.Clear();
				foreach(string name in SaveCardDeck3.saveCardDeck3.cardsDeck3){
					GameObject.Destroy(GameObject.Find(name));
				}
				
			}
			if(SaveCardDeck3.editDeck3.Count > 0){
				SaveCardDeck3.editDeck3.Clear();
				foreach(GameObject cardObject in SaveCardDeck3.editDeck3){
					GameObject.Destroy(cardObject);
				}
			}
			
			if(File.Exists(Path.Combine(Application.persistentDataPath, SaveCardDeck3.BINARY_FILE3))){
				
				File.Delete(Path.Combine(Application.persistentDataPath, SaveCardDeck3.BINARY_FILE3));
				
				}
			
			deckSize.SetActive(true);
			
			//SaveCardDeck3.GetCardCounterInDeck3();
			
			SaveCardDeck3.saveCardDeck3.create3Button.GetComponent<Button>().interactable = false;
			SaveCardDeck3.saveCardDeck3.delete3Button.GetComponent<Button>().interactable = true;
			//GetDeck1CardsOnCreate();
			//GetDeck2CardsOnCreate();
			//GetDeck3CardsOnCreate();
		}
		
		/** Set spawn points for decks to spawn cards */
		#region SetSpawnPointsStuff definition
		
		public void SetDeckSize20(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize25(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize30(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize35(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			spawnPoints1.Insert(30,deck1Slot31);
			spawnPoints1.Insert(31,deck1Slot32);
			spawnPoints1.Insert(32,deck1Slot33);
			spawnPoints1.Insert(33,deck1Slot34);
			spawnPoints1.Insert(34,deck1Slot35);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			spawnPoints2.Insert(30,deck2Slot31);
			spawnPoints2.Insert(31,deck2Slot32);
			spawnPoints2.Insert(32,deck2Slot33);
			spawnPoints2.Insert(33,deck2Slot34);
			spawnPoints2.Insert(34,deck2Slot35);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			spawnPoints3.Insert(30,deck3Slot31);
			spawnPoints3.Insert(31,deck3Slot32);
			spawnPoints3.Insert(32,deck3Slot33);
			spawnPoints3.Insert(33,deck3Slot34);
			spawnPoints3.Insert(34,deck3Slot35);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize40(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			spawnPoints1.Insert(30,deck1Slot31);
			spawnPoints1.Insert(31,deck1Slot32);
			spawnPoints1.Insert(32,deck1Slot33);
			spawnPoints1.Insert(33,deck1Slot34);
			spawnPoints1.Insert(34,deck1Slot35);
			spawnPoints1.Insert(35,deck1Slot36);
			spawnPoints1.Insert(36,deck1Slot37);
			spawnPoints1.Insert(37,deck1Slot38);
			spawnPoints1.Insert(38,deck1Slot39);
			spawnPoints1.Insert(39,deck1Slot40);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			spawnPoints2.Insert(30,deck2Slot31);
			spawnPoints2.Insert(31,deck2Slot32);
			spawnPoints2.Insert(32,deck2Slot33);
			spawnPoints2.Insert(33,deck2Slot34);
			spawnPoints2.Insert(34,deck2Slot35);
			spawnPoints2.Insert(35,deck2Slot36);
			spawnPoints2.Insert(36,deck2Slot37);
			spawnPoints2.Insert(37,deck2Slot38);
			spawnPoints2.Insert(38,deck2Slot39);
			spawnPoints2.Insert(39,deck2Slot40);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			spawnPoints3.Insert(30,deck3Slot31);
			spawnPoints3.Insert(31,deck3Slot32);
			spawnPoints3.Insert(32,deck3Slot33);
			spawnPoints3.Insert(33,deck3Slot34);
			spawnPoints3.Insert(34,deck3Slot35);
			spawnPoints3.Insert(35,deck3Slot36);
			spawnPoints3.Insert(36,deck3Slot37);
			spawnPoints3.Insert(37,deck3Slot38);
			spawnPoints3.Insert(38,deck3Slot39);
			spawnPoints3.Insert(39,deck3Slot40);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			inputFieldSwitcher1.SetActive(true);
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		public void SetDeckSize45(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			spawnPoints1.Insert(30,deck1Slot31);
			spawnPoints1.Insert(31,deck1Slot32);
			spawnPoints1.Insert(32,deck1Slot33);
			spawnPoints1.Insert(33,deck1Slot34);
			spawnPoints1.Insert(34,deck1Slot35);
			spawnPoints1.Insert(35,deck1Slot36);
			spawnPoints1.Insert(36,deck1Slot37);
			spawnPoints1.Insert(37,deck1Slot38);
			spawnPoints1.Insert(38,deck1Slot39);
			spawnPoints1.Insert(39,deck1Slot40);
			spawnPoints1.Insert(40,deck1Slot41);
			spawnPoints1.Insert(41,deck1Slot42);
			spawnPoints1.Insert(42,deck1Slot43);
			spawnPoints1.Insert(43,deck1Slot44);
			spawnPoints1.Insert(44,deck1Slot45);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			spawnPoints2.Insert(30,deck2Slot31);
			spawnPoints2.Insert(31,deck2Slot32);
			spawnPoints2.Insert(32,deck2Slot33);
			spawnPoints2.Insert(33,deck2Slot34);
			spawnPoints2.Insert(34,deck2Slot35);
			spawnPoints2.Insert(35,deck2Slot36);
			spawnPoints2.Insert(36,deck2Slot37);
			spawnPoints2.Insert(37,deck2Slot38);
			spawnPoints2.Insert(38,deck2Slot39);
			spawnPoints2.Insert(39,deck2Slot40);
			spawnPoints2.Insert(40,deck2Slot41);
			spawnPoints2.Insert(41,deck2Slot42);
			spawnPoints2.Insert(42,deck2Slot43);
			spawnPoints2.Insert(43,deck2Slot44);
			spawnPoints2.Insert(44,deck2Slot45);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			spawnPoints3.Insert(30,deck3Slot31);
			spawnPoints3.Insert(31,deck3Slot32);
			spawnPoints3.Insert(32,deck3Slot33);
			spawnPoints3.Insert(33,deck3Slot34);
			spawnPoints3.Insert(34,deck3Slot35);
			spawnPoints3.Insert(35,deck3Slot36);
			spawnPoints3.Insert(36,deck3Slot37);
			spawnPoints3.Insert(37,deck3Slot38);
			spawnPoints3.Insert(38,deck3Slot39);
			spawnPoints3.Insert(39,deck3Slot40);
			spawnPoints3.Insert(40,deck3Slot41);
			spawnPoints3.Insert(41,deck3Slot42);
			spawnPoints3.Insert(42,deck3Slot43);
			spawnPoints3.Insert(43,deck3Slot44);
			spawnPoints3.Insert(44,deck3Slot45);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			inputFieldSwitcher1.SetActive(true);
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize50(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			spawnPoints1.Insert(30,deck1Slot31);
			spawnPoints1.Insert(31,deck1Slot32);
			spawnPoints1.Insert(32,deck1Slot33);
			spawnPoints1.Insert(33,deck1Slot34);
			spawnPoints1.Insert(34,deck1Slot35);
			spawnPoints1.Insert(35,deck1Slot36);
			spawnPoints1.Insert(36,deck1Slot37);
			spawnPoints1.Insert(37,deck1Slot38);
			spawnPoints1.Insert(38,deck1Slot39);
			spawnPoints1.Insert(39,deck1Slot40);
			spawnPoints1.Insert(40,deck1Slot41);
			spawnPoints1.Insert(41,deck1Slot42);
			spawnPoints1.Insert(42,deck1Slot43);
			spawnPoints1.Insert(43,deck1Slot44);
			spawnPoints1.Insert(44,deck1Slot45);
			spawnPoints1.Insert(45,deck1Slot46);
			spawnPoints1.Insert(46,deck1Slot47);
			spawnPoints1.Insert(47,deck1Slot48);
			spawnPoints1.Insert(48,deck1Slot49);
			spawnPoints1.Insert(49,deck1Slot50);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			spawnPoints2.Insert(30,deck2Slot31);
			spawnPoints2.Insert(31,deck2Slot32);
			spawnPoints2.Insert(32,deck2Slot33);
			spawnPoints2.Insert(33,deck2Slot34);
			spawnPoints2.Insert(34,deck2Slot35);
			spawnPoints2.Insert(35,deck2Slot36);
			spawnPoints2.Insert(36,deck2Slot37);
			spawnPoints2.Insert(37,deck2Slot38);
			spawnPoints2.Insert(38,deck2Slot39);
			spawnPoints2.Insert(39,deck2Slot40);
			spawnPoints2.Insert(40,deck2Slot41);
			spawnPoints2.Insert(41,deck2Slot42);
			spawnPoints2.Insert(42,deck2Slot43);
			spawnPoints2.Insert(43,deck2Slot44);
			spawnPoints2.Insert(44,deck2Slot45);
			spawnPoints2.Insert(45,deck2Slot46);
			spawnPoints2.Insert(46,deck2Slot47);
			spawnPoints2.Insert(47,deck2Slot48);
			spawnPoints2.Insert(48,deck2Slot49);
			spawnPoints2.Insert(49,deck2Slot50);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			spawnPoints3.Insert(30,deck3Slot31);
			spawnPoints3.Insert(31,deck3Slot32);
			spawnPoints3.Insert(32,deck3Slot33);
			spawnPoints3.Insert(33,deck3Slot34);
			spawnPoints3.Insert(34,deck3Slot35);
			spawnPoints3.Insert(35,deck3Slot36);
			spawnPoints3.Insert(36,deck3Slot37);
			spawnPoints3.Insert(37,deck3Slot38);
			spawnPoints3.Insert(38,deck3Slot39);
			spawnPoints3.Insert(39,deck3Slot40);
			spawnPoints3.Insert(40,deck3Slot41);
			spawnPoints3.Insert(41,deck3Slot42);
			spawnPoints3.Insert(42,deck3Slot43);
			spawnPoints3.Insert(43,deck3Slot44);
			spawnPoints3.Insert(44,deck3Slot45);
			spawnPoints3.Insert(45,deck3Slot46);
			spawnPoints3.Insert(46,deck3Slot47);
			spawnPoints3.Insert(47,deck3Slot48);
			spawnPoints3.Insert(48,deck3Slot49);
			spawnPoints3.Insert(49,deck3Slot50);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			inputFieldSwitcher1.SetActive(true);
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize55(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			spawnPoints1.Insert(30,deck1Slot31);
			spawnPoints1.Insert(31,deck1Slot32);
			spawnPoints1.Insert(32,deck1Slot33);
			spawnPoints1.Insert(33,deck1Slot34);
			spawnPoints1.Insert(34,deck1Slot35);
			spawnPoints1.Insert(35,deck1Slot36);
			spawnPoints1.Insert(36,deck1Slot37);
			spawnPoints1.Insert(37,deck1Slot38);
			spawnPoints1.Insert(38,deck1Slot39);
			spawnPoints1.Insert(39,deck1Slot40);
			spawnPoints1.Insert(40,deck1Slot41);
			spawnPoints1.Insert(41,deck1Slot42);
			spawnPoints1.Insert(42,deck1Slot43);
			spawnPoints1.Insert(43,deck1Slot44);
			spawnPoints1.Insert(44,deck1Slot45);
			spawnPoints1.Insert(45,deck1Slot46);
			spawnPoints1.Insert(46,deck1Slot47);
			spawnPoints1.Insert(47,deck1Slot48);
			spawnPoints1.Insert(48,deck1Slot49);
			spawnPoints1.Insert(49,deck1Slot50);
			spawnPoints1.Insert(50,deck1Slot51);
			spawnPoints1.Insert(51,deck1Slot52);
			spawnPoints1.Insert(52,deck1Slot53);
			spawnPoints1.Insert(53,deck1Slot54);
			spawnPoints1.Insert(54,deck1Slot55);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			spawnPoints2.Insert(30,deck2Slot31);
			spawnPoints2.Insert(31,deck2Slot32);
			spawnPoints2.Insert(32,deck2Slot33);
			spawnPoints2.Insert(33,deck2Slot34);
			spawnPoints2.Insert(34,deck2Slot35);
			spawnPoints2.Insert(35,deck2Slot36);
			spawnPoints2.Insert(36,deck2Slot37);
			spawnPoints2.Insert(37,deck2Slot38);
			spawnPoints2.Insert(38,deck2Slot39);
			spawnPoints2.Insert(39,deck2Slot40);
			spawnPoints2.Insert(40,deck2Slot41);
			spawnPoints2.Insert(41,deck2Slot42);
			spawnPoints2.Insert(42,deck2Slot43);
			spawnPoints2.Insert(43,deck2Slot44);
			spawnPoints2.Insert(44,deck2Slot45);
			spawnPoints2.Insert(45,deck2Slot46);
			spawnPoints2.Insert(46,deck2Slot47);
			spawnPoints2.Insert(47,deck2Slot48);
			spawnPoints2.Insert(48,deck2Slot49);
			spawnPoints2.Insert(49,deck2Slot50);
			spawnPoints2.Insert(50,deck2Slot51);
			spawnPoints2.Insert(51,deck2Slot52);
			spawnPoints2.Insert(52,deck2Slot53);
			spawnPoints2.Insert(53,deck2Slot54);
			spawnPoints2.Insert(54,deck2Slot55);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			spawnPoints3.Insert(30,deck3Slot31);
			spawnPoints3.Insert(31,deck3Slot32);
			spawnPoints3.Insert(32,deck3Slot33);
			spawnPoints3.Insert(33,deck3Slot34);
			spawnPoints3.Insert(34,deck3Slot35);
			spawnPoints3.Insert(35,deck3Slot36);
			spawnPoints3.Insert(36,deck3Slot37);
			spawnPoints3.Insert(37,deck3Slot38);
			spawnPoints3.Insert(38,deck3Slot39);
			spawnPoints3.Insert(39,deck3Slot40);
			spawnPoints3.Insert(40,deck3Slot41);
			spawnPoints3.Insert(41,deck3Slot42);
			spawnPoints3.Insert(42,deck3Slot43);
			spawnPoints3.Insert(43,deck3Slot44);
			spawnPoints3.Insert(44,deck3Slot45);
			spawnPoints3.Insert(45,deck3Slot46);
			spawnPoints3.Insert(46,deck3Slot47);
			spawnPoints3.Insert(47,deck3Slot48);
			spawnPoints3.Insert(48,deck3Slot49);
			spawnPoints3.Insert(49,deck3Slot50);
			spawnPoints3.Insert(50,deck3Slot51);
			spawnPoints3.Insert(51,deck3Slot52);
			spawnPoints3.Insert(52,deck3Slot53);
			spawnPoints3.Insert(53,deck3Slot54);
			spawnPoints3.Insert(54,deck3Slot55);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			inputFieldSwitcher1.SetActive(true);
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		
		
		public void SetDeckSize60(){
			spawnPoints1.Clear();
			spawnPoints1.RemoveAll(item => item == null);
			
			spawnPoints1.Insert(0,deck1Slot1);
			spawnPoints1.Insert(1,deck1Slot2);
			spawnPoints1.Insert(2,deck1Slot3);
			spawnPoints1.Insert(3,deck1Slot4);
			spawnPoints1.Insert(4,deck1Slot5);
			spawnPoints1.Insert(5,deck1Slot6);
			spawnPoints1.Insert(6,deck1Slot7);
			spawnPoints1.Insert(7,deck1Slot8);
			spawnPoints1.Insert(8,deck1Slot9);
			spawnPoints1.Insert(9,deck1Slot10);
			spawnPoints1.Insert(10,deck1Slot11);
			spawnPoints1.Insert(11,deck1Slot12);
			spawnPoints1.Insert(12,deck1Slot13);
			spawnPoints1.Insert(13,deck1Slot14);
			spawnPoints1.Insert(14,deck1Slot15);
			spawnPoints1.Insert(15,deck1Slot16);
			spawnPoints1.Insert(16,deck1Slot17);
			spawnPoints1.Insert(17,deck1Slot18);
			spawnPoints1.Insert(18,deck1Slot19);
			spawnPoints1.Insert(19,deck1Slot20);
			spawnPoints1.Insert(20,deck1Slot21);
			spawnPoints1.Insert(21,deck1Slot22);
			spawnPoints1.Insert(22,deck1Slot23);
			spawnPoints1.Insert(23,deck1Slot24);
			spawnPoints1.Insert(24,deck1Slot25);
			spawnPoints1.Insert(25,deck1Slot26);
			spawnPoints1.Insert(26,deck1Slot27);
			spawnPoints1.Insert(27,deck1Slot28);
			spawnPoints1.Insert(28,deck1Slot29);
			spawnPoints1.Insert(29,deck1Slot30);
			spawnPoints1.Insert(30,deck1Slot31);
			spawnPoints1.Insert(31,deck1Slot32);
			spawnPoints1.Insert(32,deck1Slot33);
			spawnPoints1.Insert(33,deck1Slot34);
			spawnPoints1.Insert(34,deck1Slot35);
			spawnPoints1.Insert(35,deck1Slot36);
			spawnPoints1.Insert(36,deck1Slot37);
			spawnPoints1.Insert(37,deck1Slot38);
			spawnPoints1.Insert(38,deck1Slot39);
			spawnPoints1.Insert(39,deck1Slot40);
			spawnPoints1.Insert(40,deck1Slot41);
			spawnPoints1.Insert(41,deck1Slot42);
			spawnPoints1.Insert(42,deck1Slot43);
			spawnPoints1.Insert(43,deck1Slot44);
			spawnPoints1.Insert(44,deck1Slot45);
			spawnPoints1.Insert(45,deck1Slot46);
			spawnPoints1.Insert(46,deck1Slot47);
			spawnPoints1.Insert(47,deck1Slot48);
			spawnPoints1.Insert(48,deck1Slot49);
			spawnPoints1.Insert(49,deck1Slot50);
			spawnPoints1.Insert(50,deck1Slot51);
			spawnPoints1.Insert(51,deck1Slot52);
			spawnPoints1.Insert(52,deck1Slot53);
			spawnPoints1.Insert(53,deck1Slot54);
			spawnPoints1.Insert(54,deck1Slot55);
			spawnPoints1.Insert(55,deck1Slot56);
			spawnPoints1.Insert(56,deck1Slot57);
			spawnPoints1.Insert(57,deck1Slot58);
			spawnPoints1.Insert(58,deck1Slot59);
			spawnPoints1.Insert(59,deck1Slot60);
			
			spawnPoints2.Clear();
			spawnPoints2.RemoveAll(item => item == null);
			
			spawnPoints2.Insert(0,deck2Slot1);
			spawnPoints2.Insert(1,deck2Slot2);
			spawnPoints2.Insert(2,deck2Slot3);
			spawnPoints2.Insert(3,deck2Slot4);
			spawnPoints2.Insert(4,deck2Slot5);
			spawnPoints2.Insert(5,deck2Slot6);
			spawnPoints2.Insert(6,deck2Slot7);
			spawnPoints2.Insert(7,deck2Slot8);
			spawnPoints2.Insert(8,deck2Slot9);
			spawnPoints2.Insert(9,deck2Slot10);
			spawnPoints2.Insert(10,deck2Slot11);
			spawnPoints2.Insert(11,deck2Slot12);
			spawnPoints2.Insert(12,deck2Slot13);
			spawnPoints2.Insert(13,deck2Slot14);
			spawnPoints2.Insert(14,deck2Slot15);
			spawnPoints2.Insert(15,deck2Slot16);
			spawnPoints2.Insert(16,deck2Slot17);
			spawnPoints2.Insert(17,deck2Slot18);
			spawnPoints2.Insert(18,deck2Slot19);
			spawnPoints2.Insert(19,deck2Slot20);
			spawnPoints2.Insert(20,deck2Slot21);
			spawnPoints2.Insert(21,deck2Slot22);
			spawnPoints2.Insert(22,deck2Slot23);
			spawnPoints2.Insert(23,deck2Slot24);
			spawnPoints2.Insert(24,deck2Slot25);
			spawnPoints2.Insert(25,deck2Slot26);
			spawnPoints2.Insert(26,deck2Slot27);
			spawnPoints2.Insert(27,deck2Slot28);
			spawnPoints2.Insert(28,deck2Slot29);
			spawnPoints2.Insert(29,deck2Slot30);
			spawnPoints2.Insert(30,deck2Slot31);
			spawnPoints2.Insert(31,deck2Slot32);
			spawnPoints2.Insert(32,deck2Slot33);
			spawnPoints2.Insert(33,deck2Slot34);
			spawnPoints2.Insert(34,deck2Slot35);
			spawnPoints2.Insert(35,deck2Slot36);
			spawnPoints2.Insert(36,deck2Slot37);
			spawnPoints2.Insert(37,deck2Slot38);
			spawnPoints2.Insert(38,deck2Slot39);
			spawnPoints2.Insert(39,deck2Slot40);
			spawnPoints2.Insert(40,deck2Slot41);
			spawnPoints2.Insert(41,deck2Slot42);
			spawnPoints2.Insert(42,deck2Slot43);
			spawnPoints2.Insert(43,deck2Slot44);
			spawnPoints2.Insert(44,deck2Slot45);
			spawnPoints2.Insert(45,deck2Slot46);
			spawnPoints2.Insert(46,deck2Slot47);
			spawnPoints2.Insert(47,deck2Slot48);
			spawnPoints2.Insert(48,deck2Slot49);
			spawnPoints2.Insert(49,deck2Slot50);
			spawnPoints2.Insert(50,deck2Slot51);
			spawnPoints2.Insert(51,deck2Slot52);
			spawnPoints2.Insert(52,deck2Slot53);
			spawnPoints2.Insert(53,deck2Slot54);
			spawnPoints2.Insert(54,deck2Slot55);
			spawnPoints2.Insert(55,deck2Slot56);
			spawnPoints2.Insert(56,deck2Slot57);
			spawnPoints2.Insert(57,deck2Slot58);
			spawnPoints2.Insert(58,deck2Slot59);
			spawnPoints2.Insert(59,deck2Slot60);
			
			spawnPoints3.Clear();
			spawnPoints3.RemoveAll(item => item == null);
			
			spawnPoints3.Insert(0,deck3Slot1);
			spawnPoints3.Insert(1,deck3Slot2);
			spawnPoints3.Insert(2,deck3Slot3);
			spawnPoints3.Insert(3,deck3Slot4);
			spawnPoints3.Insert(4,deck3Slot5);
			spawnPoints3.Insert(5,deck3Slot6);
			spawnPoints3.Insert(6,deck3Slot7);
			spawnPoints3.Insert(7,deck3Slot8);
			spawnPoints3.Insert(8,deck3Slot9);
			spawnPoints3.Insert(9,deck3Slot10);
			spawnPoints3.Insert(10,deck3Slot11);
			spawnPoints3.Insert(11,deck3Slot12);
			spawnPoints3.Insert(12,deck3Slot13);
			spawnPoints3.Insert(13,deck3Slot14);
			spawnPoints3.Insert(14,deck3Slot15);
			spawnPoints3.Insert(15,deck3Slot16);
			spawnPoints3.Insert(16,deck3Slot17);
			spawnPoints3.Insert(17,deck3Slot18);
			spawnPoints3.Insert(18,deck3Slot19);
			spawnPoints3.Insert(19,deck3Slot20);
			spawnPoints3.Insert(20,deck3Slot21);
			spawnPoints3.Insert(21,deck3Slot22);
			spawnPoints3.Insert(22,deck3Slot23);
			spawnPoints3.Insert(23,deck3Slot24);
			spawnPoints3.Insert(24,deck3Slot25);
			spawnPoints3.Insert(25,deck3Slot26);
			spawnPoints3.Insert(26,deck3Slot27);
			spawnPoints3.Insert(27,deck3Slot28);
			spawnPoints3.Insert(28,deck3Slot29);
			spawnPoints3.Insert(29,deck3Slot30);
			spawnPoints3.Insert(30,deck3Slot31);
			spawnPoints3.Insert(31,deck3Slot32);
			spawnPoints3.Insert(32,deck3Slot33);
			spawnPoints3.Insert(33,deck3Slot34);
			spawnPoints3.Insert(34,deck3Slot35);
			spawnPoints3.Insert(35,deck3Slot36);
			spawnPoints3.Insert(36,deck3Slot37);
			spawnPoints3.Insert(37,deck3Slot38);
			spawnPoints3.Insert(38,deck3Slot39);
			spawnPoints3.Insert(39,deck3Slot40);
			spawnPoints3.Insert(40,deck3Slot41);
			spawnPoints3.Insert(41,deck3Slot42);
			spawnPoints3.Insert(42,deck3Slot43);
			spawnPoints3.Insert(43,deck3Slot44);
			spawnPoints3.Insert(44,deck3Slot45);
			spawnPoints3.Insert(45,deck3Slot46);
			spawnPoints3.Insert(46,deck3Slot47);
			spawnPoints3.Insert(47,deck3Slot48);
			spawnPoints3.Insert(48,deck3Slot49);
			spawnPoints3.Insert(49,deck3Slot50);
			spawnPoints3.Insert(50,deck3Slot51);
			spawnPoints3.Insert(51,deck3Slot52);
			spawnPoints3.Insert(52,deck3Slot53);
			spawnPoints3.Insert(53,deck3Slot54);
			spawnPoints3.Insert(54,deck3Slot55);
			spawnPoints3.Insert(55,deck3Slot56);
			spawnPoints3.Insert(56,deck3Slot57);
			spawnPoints3.Insert(57,deck3Slot58);
			spawnPoints3.Insert(58,deck3Slot59);
			spawnPoints3.Insert(59,deck3Slot60);
			
			deckSize.SetActive(false);
			StartCoroutine("ShowTipText");
			inputFieldSwitcher1.SetActive(true);
			
			if(switcher1){
				inputFieldSwitcher1.SetActive(true);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher2){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(true);
				inputFieldSwitcher3.SetActive(false);
			}else if(switcher3){
				inputFieldSwitcher1.SetActive(false);
				inputFieldSwitcher2.SetActive(false);
				inputFieldSwitcher3.SetActive(true);
			}
			
		}
		#endregion
		
		/** Show the info that the deck must be created and named to save it */
		IEnumerator ShowTipText(){
			tipText.SetActive(true);
			yield return new WaitForSeconds(2);
			tipText.SetActive(false);
			
		}
		
		/* void GetDeck1CardsOnCreate(){
			allObjects1 = GameObject.FindObjectsOfType(typeof(GameObject)) as GameObject[];
			foreach (GameObject obj in allObjects1){
				
				if (obj.name.Contains("instantiated1Card")){
					
					deck1Cards.Add(obj);
						
				}
				
			}
			
			FindDeck1Cards();
			//FindDeck2Cards();
			//FindDeck3Cards();
			print("d1C: " + deck1Cards.Count);
			//print("d2C: " + deck2Cards.Count);
			//print("d3C: " + deck3Cards.Count);
		}
		
		void GetDeck2CardsOnCreate(){
			allObjects1 = GameObject.FindObjectsOfType(typeof(GameObject)) as GameObject[];
			foreach (GameObject obj in allObjects1){
				
				if (obj.name.Contains("instantiated2Card")){
					
					deck2Cards.Add(obj);
						
				}
				
			}
			
			//FindDeck1Cards();
			FindDeck2Cards();
			//FindDeck3Cards();
			//print("d1C: " + deck1Cards.Count);
			print("d2C: " + deck2Cards.Count);
			//print("d3C: " + deck3Cards.Count);
		}
		
		void GetDeck3CardsOnCreate(){
			allObjects1 = GameObject.FindObjectsOfType(typeof(GameObject)) as GameObject[];
			foreach (GameObject obj in allObjects1){
				
				if (obj.name.Contains("instantiated3Card")){
					
					deck3Cards.Add(obj);
						
				}
			}
			
			//FindDeck1Cards();
			//FindDeck2Cards();
			FindDeck3Cards();
			//print("d1C: " + deck1Cards.Count);
			//print("d2C: " + deck2Cards.Count);
			print("d3C: " + deck3Cards.Count);
		}
		
		void FindDeck1Cards(){
			
			foreach(GameObject card in deck1Cards){
				
				
				if(card.name == "instantiated1Card1"){
						
					SaveCardDeck1.instantiated1Card1List.Add(card);
					
					
				}
				
				else if(card.name == "instantiated1Card1a"){
						
					SaveCardDeck1.instantiated1Card1aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card1b"){
						
					SaveCardDeck1.instantiated1Card1bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card1c"){
						
					SaveCardDeck1.instantiated1Card1cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card2"){
						
					SaveCardDeck1.instantiated1Card2List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card2a"){
						
					SaveCardDeck1.instantiated1Card2aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card2b"){
						
					SaveCardDeck1.instantiated1Card2bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card2c"){
						
					SaveCardDeck1.instantiated1Card2cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card3"){
						
					SaveCardDeck1.instantiated1Card3List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card3a"){
						
					SaveCardDeck1.instantiated1Card3aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card3b"){
						
					SaveCardDeck1.instantiated1Card3bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card3c"){
						
					SaveCardDeck1.instantiated1Card3cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card4"){
						
					SaveCardDeck1.instantiated1Card4List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card4a"){
						
					SaveCardDeck1.instantiated1Card4aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card4b"){
						
					SaveCardDeck1.instantiated1Card4bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card4c"){
						
					SaveCardDeck1.instantiated1Card4cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card5"){
						
					SaveCardDeck1.instantiated1Card5List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card5a"){
						
					SaveCardDeck1.instantiated1Card5aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card5b"){
						
					SaveCardDeck1.instantiated1Card5bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card5c"){
						
					SaveCardDeck1.instantiated1Card5cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card6"){
						
					SaveCardDeck1.instantiated1Card6List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card6a"){
						
					SaveCardDeck1.instantiated1Card6aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card6b"){
						
					SaveCardDeck1.instantiated1Card6bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card6c"){
						
					SaveCardDeck1.instantiated1Card6cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card7"){
						
					SaveCardDeck1.instantiated1Card7List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card7a"){
						
					SaveCardDeck1.instantiated1Card7aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card7b"){
						
					SaveCardDeck1.instantiated1Card7bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card7c"){
						
					SaveCardDeck1.instantiated1Card7cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card8"){
						
					SaveCardDeck1.instantiated1Card8List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card8a"){
						
					SaveCardDeck1.instantiated1Card8aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card8b"){
						
					SaveCardDeck1.instantiated1Card8bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card8c"){
						
					SaveCardDeck1.instantiated1Card8cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card9"){
						
					SaveCardDeck1.instantiated1Card9List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card9a"){
						
					SaveCardDeck1.instantiated1Card9aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card9b"){
						
					SaveCardDeck1.instantiated1Card9bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card9c"){
						
					SaveCardDeck1.instantiated1Card9cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card10"){
						
					SaveCardDeck1.instantiated1Card10List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card10a"){
						
					SaveCardDeck1.instantiated1Card10aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card10b"){
						
					SaveCardDeck1.instantiated1Card10bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card10c"){
						
					SaveCardDeck1.instantiated1Card10cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card11"){
						
					SaveCardDeck1.instantiated1Card11List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card11a"){
						
					SaveCardDeck1.instantiated1Card11aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card11b"){
						
					SaveCardDeck1.instantiated1Card11bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card11c"){
						
					SaveCardDeck1.instantiated1Card11cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card12"){
						
					SaveCardDeck1.instantiated1Card12List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card12a"){
						
					SaveCardDeck1.instantiated1Card12aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card12b"){
						
					SaveCardDeck1.instantiated1Card12bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card12c"){
						
					SaveCardDeck1.instantiated1Card12cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card13"){
						
					SaveCardDeck1.instantiated1Card13List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card13a"){
						
					SaveCardDeck1.instantiated1Card13aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card13b"){
						
					SaveCardDeck1.instantiated1Card13bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card13c"){
						
					SaveCardDeck1.instantiated1Card13cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card14"){
						
					SaveCardDeck1.instantiated1Card14List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card14a"){
						
					SaveCardDeck1.instantiated1Card14aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card14b"){
						
					SaveCardDeck1.instantiated1Card14bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card14c"){
						
					SaveCardDeck1.instantiated1Card14cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card15"){
						
					SaveCardDeck1.instantiated1Card15List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card15a"){
						
					SaveCardDeck1.instantiated1Card15aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card15b"){
						
					SaveCardDeck1.instantiated1Card15bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card15c"){
						
					SaveCardDeck1.instantiated1Card15cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card16"){
						
					SaveCardDeck1.instantiated1Card16List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card16a"){
						
					SaveCardDeck1.instantiated1Card16aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card16b"){
						
					SaveCardDeck1.instantiated1Card16bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card16c"){
						
					SaveCardDeck1.instantiated1Card16cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card17"){
						
					SaveCardDeck1.instantiated1Card17List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card17a"){
						
					SaveCardDeck1.instantiated1Card17aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card17b"){
						
					SaveCardDeck1.instantiated1Card17bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card17c"){
						
					SaveCardDeck1.instantiated1Card17cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card18"){
						
					SaveCardDeck1.instantiated1Card18List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card18a"){
						
					SaveCardDeck1.instantiated1Card18aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card18b"){
						
					SaveCardDeck1.instantiated1Card18bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card18c"){
						
					SaveCardDeck1.instantiated1Card18cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card19"){
						
					SaveCardDeck1.instantiated1Card19List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card19a"){
						
					SaveCardDeck1.instantiated1Card19aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card19b"){
						
					SaveCardDeck1.instantiated1Card19bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card19c"){
						
					SaveCardDeck1.instantiated1Card19cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card20"){
						
					SaveCardDeck1.instantiated1Card20List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card20a"){
						
					SaveCardDeck1.instantiated1Card20aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card20b"){
						
					SaveCardDeck1.instantiated1Card20bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card20c"){
						
					SaveCardDeck1.instantiated1Card20cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card21"){
						
					SaveCardDeck1.instantiated1Card21List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card21a"){
						
					SaveCardDeck1.instantiated1Card21aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card21b"){
						
					SaveCardDeck1.instantiated1Card21bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card21c"){
						
					SaveCardDeck1.instantiated1Card21cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card22"){
						
					SaveCardDeck1.instantiated1Card22List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card22a"){
						
					SaveCardDeck1.instantiated1Card22aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card22b"){
						
					SaveCardDeck1.instantiated1Card22bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card22c"){
						
					SaveCardDeck1.instantiated1Card22cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card23"){
						
					SaveCardDeck1.instantiated1Card23List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card23a"){
						
					SaveCardDeck1.instantiated1Card23aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card23b"){
						
					SaveCardDeck1.instantiated1Card23bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card23c"){
						
					SaveCardDeck1.instantiated1Card23cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card24"){
						
					SaveCardDeck1.instantiated1Card24List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card24a"){
						
					SaveCardDeck1.instantiated1Card24aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card24b"){
						
					SaveCardDeck1.instantiated1Card24bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card24c"){
						
					SaveCardDeck1.instantiated1Card24cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card25"){
						
					SaveCardDeck1.instantiated1Card25List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card25a"){
						
					SaveCardDeck1.instantiated1Card25aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card25b"){
						
					SaveCardDeck1.instantiated1Card25bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card25c"){
						
					SaveCardDeck1.instantiated1Card25cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card26"){
						
					SaveCardDeck1.instantiated1Card26List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card26a"){
						
					SaveCardDeck1.instantiated1Card26aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card26b"){
						
					SaveCardDeck1.instantiated1Card26bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card26c"){
						
					SaveCardDeck1.instantiated1Card26cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card27"){
						
					SaveCardDeck1.instantiated1Card27List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card27a"){
						
					SaveCardDeck1.instantiated1Card27aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card27b"){
						
					SaveCardDeck1.instantiated1Card27bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card27c"){
						
					SaveCardDeck1.instantiated1Card27cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card28"){
						
					SaveCardDeck1.instantiated1Card28List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card28a"){
						
					SaveCardDeck1.instantiated1Card28aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card28b"){
						
					SaveCardDeck1.instantiated1Card28bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card28c"){
						
					SaveCardDeck1.instantiated1Card28cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card29"){
						
					SaveCardDeck1.instantiated1Card29List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card29a"){
						
					SaveCardDeck1.instantiated1Card29aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card29b"){
						
					SaveCardDeck1.instantiated1Card29bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card29c"){
						
					SaveCardDeck1.instantiated1Card29cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card30"){
						
					SaveCardDeck1.instantiated1Card30List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card30a"){
						
					SaveCardDeck1.instantiated1Card30aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card30b"){
						
					SaveCardDeck1.instantiated1Card30bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card30c"){
						
					SaveCardDeck1.instantiated1Card30cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card31"){
						
					SaveCardDeck1.instantiated1Card31List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card31a"){
						
					SaveCardDeck1.instantiated1Card31aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card31b"){
						
					SaveCardDeck1.instantiated1Card31bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card31c"){
						
					SaveCardDeck1.instantiated1Card31cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card32"){
						
					SaveCardDeck1.instantiated1Card32List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card32a"){
						
					SaveCardDeck1.instantiated1Card32aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card32b"){
						
					SaveCardDeck1.instantiated1Card32bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card32c"){
						
					SaveCardDeck1.instantiated1Card32cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card33"){
						
					SaveCardDeck1.instantiated1Card33List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card33a"){
						
					SaveCardDeck1.instantiated1Card33aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card33b"){
						
					SaveCardDeck1.instantiated1Card33bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card33c"){
						
					SaveCardDeck1.instantiated1Card33cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card34"){
						
					SaveCardDeck1.instantiated1Card34List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card34a"){
						
					SaveCardDeck1.instantiated1Card34aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card34b"){
						
					SaveCardDeck1.instantiated1Card34bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card34c"){
						
					SaveCardDeck1.instantiated1Card34cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card35"){
						
					SaveCardDeck1.instantiated1Card35List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card35a"){
						
					SaveCardDeck1.instantiated1Card35aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card35b"){
						
					SaveCardDeck1.instantiated1Card35bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card35c"){
						
					SaveCardDeck1.instantiated1Card35cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card36"){
						
					SaveCardDeck1.instantiated1Card36List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card36a"){
						
					SaveCardDeck1.instantiated1Card36aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card36b"){
						
					SaveCardDeck1.instantiated1Card36bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card36c"){
						
					SaveCardDeck1.instantiated1Card36cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card37"){
						
					SaveCardDeck1.instantiated1Card37List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card37a"){
						
					SaveCardDeck1.instantiated1Card37aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card37b"){
						
					SaveCardDeck1.instantiated1Card37bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card37c"){
						
					SaveCardDeck1.instantiated1Card37cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card38"){
						
					SaveCardDeck1.instantiated1Card38List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card38a"){
						
					SaveCardDeck1.instantiated1Card38aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card38b"){
						
					SaveCardDeck1.instantiated1Card38bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card38c"){
						
					SaveCardDeck1.instantiated1Card38cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card39"){
						
					SaveCardDeck1.instantiated1Card39List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card39a"){
						
					SaveCardDeck1.instantiated1Card39aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card39b"){
						
					SaveCardDeck1.instantiated1Card39bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card39c"){
						
					SaveCardDeck1.instantiated1Card39cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card40"){
						
					SaveCardDeck1.instantiated1Card40List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card40a"){
						
					SaveCardDeck1.instantiated1Card40aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card40b"){
						
					SaveCardDeck1.instantiated1Card40bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card40c"){
						
					SaveCardDeck1.instantiated1Card40cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card41"){
						
					SaveCardDeck1.instantiated1Card41List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card41a"){
						
					SaveCardDeck1.instantiated1Card41aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card41b"){
						
					SaveCardDeck1.instantiated1Card41bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card41c"){
						
					SaveCardDeck1.instantiated1Card41cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card42"){
						
					SaveCardDeck1.instantiated1Card42List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card42a"){
						
					SaveCardDeck1.instantiated1Card42aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card42b"){
						
					SaveCardDeck1.instantiated1Card42bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card42c"){
						
					SaveCardDeck1.instantiated1Card42cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card43"){
						
					SaveCardDeck1.instantiated1Card43List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card43a"){
						
					SaveCardDeck1.instantiated1Card43aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card43b"){
						
					SaveCardDeck1.instantiated1Card43bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card43c"){
						
					SaveCardDeck1.instantiated1Card43cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card44"){
						
					SaveCardDeck1.instantiated1Card44List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card44a"){
						
					SaveCardDeck1.instantiated1Card44aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card44b"){
						
					SaveCardDeck1.instantiated1Card44bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card44c"){
						
					SaveCardDeck1.instantiated1Card44cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card45"){
						
					SaveCardDeck1.instantiated1Card45List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card45a"){
						
					SaveCardDeck1.instantiated1Card45aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card45b"){
						
					SaveCardDeck1.instantiated1Card45bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card45c"){
						
					SaveCardDeck1.instantiated1Card45cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card46"){
						
					SaveCardDeck1.instantiated1Card46List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card46a"){
						
					SaveCardDeck1.instantiated1Card46aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card46b"){
						
					SaveCardDeck1.instantiated1Card46bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card46c"){
						
					SaveCardDeck1.instantiated1Card46cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card47"){
						
					SaveCardDeck1.instantiated1Card47List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card47a"){
						
					SaveCardDeck1.instantiated1Card47aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card47b"){
						
					SaveCardDeck1.instantiated1Card47bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card47c"){
						
					SaveCardDeck1.instantiated1Card47cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card48"){
						
					SaveCardDeck1.instantiated1Card48List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card48a"){
						
					SaveCardDeck1.instantiated1Card48aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card48b"){
						
					SaveCardDeck1.instantiated1Card48bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card48c"){
						
					SaveCardDeck1.instantiated1Card48cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card49"){
						
					SaveCardDeck1.instantiated1Card49List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card49a"){
						
					SaveCardDeck1.instantiated1Card49aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card49b"){
						
					SaveCardDeck1.instantiated1Card49bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card49c"){
						
					SaveCardDeck1.instantiated1Card49cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card50"){
						
					SaveCardDeck1.instantiated1Card50List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card50a"){
						
					SaveCardDeck1.instantiated1Card50aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card50b"){
						
					SaveCardDeck1.instantiated1Card50bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card50c"){
						
					SaveCardDeck1.instantiated1Card50cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card51"){
						
					SaveCardDeck1.instantiated1Card51List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card51a"){
						
					SaveCardDeck1.instantiated1Card51aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card51b"){
						
					SaveCardDeck1.instantiated1Card51bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card51c"){
						
					SaveCardDeck1.instantiated1Card51cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card52"){
						
					SaveCardDeck1.instantiated1Card52List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card52a"){
						
					SaveCardDeck1.instantiated1Card52aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card52b"){
						
					SaveCardDeck1.instantiated1Card52bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card52c"){
						
					SaveCardDeck1.instantiated1Card52cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card53"){
						
					SaveCardDeck1.instantiated1Card53List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card53a"){
						
					SaveCardDeck1.instantiated1Card53aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card53b"){
						
					SaveCardDeck1.instantiated1Card53bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card53c"){
						
					SaveCardDeck1.instantiated1Card53cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card54"){
						
					SaveCardDeck1.instantiated1Card54List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card54a"){
						
					SaveCardDeck1.instantiated1Card54aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card54b"){
						
					SaveCardDeck1.instantiated1Card54bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card54c"){
						
					SaveCardDeck1.instantiated1Card54cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card55"){
						
					SaveCardDeck1.instantiated1Card55List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card55a"){
						
					SaveCardDeck1.instantiated1Card55aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card55b"){
						
					SaveCardDeck1.instantiated1Card55bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card55c"){
						
					SaveCardDeck1.instantiated1Card55cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card56"){
						
					SaveCardDeck1.instantiated1Card56List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card56a"){
						
					SaveCardDeck1.instantiated1Card56aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card56b"){
						
					SaveCardDeck1.instantiated1Card56bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card56c"){
						
					SaveCardDeck1.instantiated1Card56cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card57"){
						
					SaveCardDeck1.instantiated1Card57List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card57a"){
						
					SaveCardDeck1.instantiated1Card57aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card57b"){
						
					SaveCardDeck1.instantiated1Card57bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card57c"){
						
					SaveCardDeck1.instantiated1Card57cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card58"){
						
					SaveCardDeck1.instantiated1Card58List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card58a"){
						
					SaveCardDeck1.instantiated1Card58aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card58b"){
						
					SaveCardDeck1.instantiated1Card58bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card58c"){
						
					SaveCardDeck1.instantiated1Card58cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card59"){
						
					SaveCardDeck1.instantiated1Card59List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card59a"){
						
					SaveCardDeck1.instantiated1Card59aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card59b"){
						
					SaveCardDeck1.instantiated1Card59bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card59c"){
						
					SaveCardDeck1.instantiated1Card59cList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card60"){
						
					SaveCardDeck1.instantiated1Card60List.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card60a"){
						
					SaveCardDeck1.instantiated1Card60aList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card60b"){
						
					SaveCardDeck1.instantiated1Card60bList.Add(card);
					
				}
				
				else if(card.name == "instantiated1Card60c"){
						
					SaveCardDeck1.instantiated1Card60cList.Add(card);
					
				}
				
			
			}
			
			CardCounterManager.counter1 += SaveCardDeck1.instantiated1Card1List.Count;
			print("I1C1L: " + SaveCardDeck1.instantiated1Card1List.Count);
			CardCounterManager.CardCounter1();
			
			CardCounterManager.counter1a += SaveCardDeck1.instantiated1Card1aList.Count;
			CardCounterManager.CardCounter1a();
			
			CardCounterManager.counter1b += SaveCardDeck1.instantiated1Card1bList.Count;
			CardCounterManager.CardCounter1b();
			
			CardCounterManager.counter1c += SaveCardDeck1.instantiated1Card1cList.Count;
			CardCounterManager.CardCounter1c();
			
			CardCounterManager.counter2 += SaveCardDeck1.instantiated1Card2List.Count;
			CardCounterManager.CardCounter2();
			
			CardCounterManager.counter2a += SaveCardDeck1.instantiated1Card2aList.Count;
			CardCounterManager.CardCounter2a();
			
			CardCounterManager.counter2b += SaveCardDeck1.instantiated1Card2bList.Count;
			CardCounterManager.CardCounter2b();
			
			CardCounterManager.counter2c += SaveCardDeck1.instantiated1Card2cList.Count;
			CardCounterManager.CardCounter2c();
			
			CardCounterManager.counter3 += SaveCardDeck1.instantiated1Card3List.Count;
			CardCounterManager.CardCounter3();
			
			CardCounterManager.counter3a += SaveCardDeck1.instantiated1Card3aList.Count;
			CardCounterManager.CardCounter3a();
			
			CardCounterManager.counter3b += SaveCardDeck1.instantiated1Card3bList.Count;
			CardCounterManager.CardCounter3b();
			
			CardCounterManager.counter3c += SaveCardDeck1.instantiated1Card3cList.Count;
			CardCounterManager.CardCounter3c();
			
			CardCounterManager.counter4 += SaveCardDeck1.instantiated1Card4List.Count;
			CardCounterManager.CardCounter4();
			
			CardCounterManager.counter4a += SaveCardDeck1.instantiated1Card4aList.Count;
			CardCounterManager.CardCounter4a();
			
			CardCounterManager.counter4b += SaveCardDeck1.instantiated1Card4bList.Count;
			CardCounterManager.CardCounter4b();
			
			CardCounterManager.counter4c += SaveCardDeck1.instantiated1Card4cList.Count;
			CardCounterManager.CardCounter4c();
			
			CardCounterManager.counter5 += SaveCardDeck1.instantiated1Card5List.Count;
			CardCounterManager.CardCounter5();
			
			CardCounterManager.counter5a += SaveCardDeck1.instantiated1Card5aList.Count;
			CardCounterManager.CardCounter5a();
			
			CardCounterManager.counter5b += SaveCardDeck1.instantiated1Card5bList.Count;
			CardCounterManager.CardCounter5b();
			
			CardCounterManager.counter5c += SaveCardDeck1.instantiated1Card5cList.Count;
			CardCounterManager.CardCounter5c();
			
			CardCounterManager.counter6 += SaveCardDeck1.instantiated1Card6List.Count;
			CardCounterManager.CardCounter6();
			
			CardCounterManager.counter6a += SaveCardDeck1.instantiated1Card6aList.Count;
			CardCounterManager.CardCounter6a();
			
			CardCounterManager.counter6b += SaveCardDeck1.instantiated1Card6bList.Count;
			CardCounterManager.CardCounter6b();
			
			CardCounterManager.counter6c += SaveCardDeck1.instantiated1Card6cList.Count;
			CardCounterManager.CardCounter6c();
			
			CardCounterManager.counter7 += SaveCardDeck1.instantiated1Card7List.Count;
			CardCounterManager.CardCounter7();
			
			CardCounterManager.counter7a += SaveCardDeck1.instantiated1Card7aList.Count;
			CardCounterManager.CardCounter7a();
			
			CardCounterManager.counter7b += SaveCardDeck1.instantiated1Card7bList.Count;
			CardCounterManager.CardCounter7b();
			
			CardCounterManager.counter7c += SaveCardDeck1.instantiated1Card7cList.Count;
			CardCounterManager.CardCounter7c();
			
			CardCounterManager.counter8 += SaveCardDeck1.instantiated1Card8List.Count;
			CardCounterManager.CardCounter8();
			
			CardCounterManager.counter8a += SaveCardDeck1.instantiated1Card8aList.Count;
			CardCounterManager.CardCounter8a();
			
			CardCounterManager.counter8b += SaveCardDeck1.instantiated1Card8bList.Count;
			CardCounterManager.CardCounter8b();
			
			CardCounterManager.counter8c += SaveCardDeck1.instantiated1Card8cList.Count;
			CardCounterManager.CardCounter8c();
			
			CardCounterManager.counter9 += SaveCardDeck1.instantiated1Card9List.Count;
			CardCounterManager.CardCounter9();
			
			CardCounterManager.counter9a += SaveCardDeck1.instantiated1Card9aList.Count;
			CardCounterManager.CardCounter9a();
			
			CardCounterManager.counter9b += SaveCardDeck1.instantiated1Card9bList.Count;
			CardCounterManager.CardCounter9b();
			
			CardCounterManager.counter9c += SaveCardDeck1.instantiated1Card9cList.Count;
			CardCounterManager.CardCounter9c();
			
			CardCounterManager.counter10 += SaveCardDeck1.instantiated1Card10List.Count;
			CardCounterManager.CardCounter10();
			
			CardCounterManager.counter10a += SaveCardDeck1.instantiated1Card10aList.Count;
			CardCounterManager.CardCounter10a();
			
			CardCounterManager.counter10b += SaveCardDeck1.instantiated1Card10bList.Count;
			CardCounterManager.CardCounter10b();
			
			CardCounterManager.counter10c += SaveCardDeck1.instantiated1Card10cList.Count;
			CardCounterManager.CardCounter10c();
			
			CardCounterManager.counter11 += SaveCardDeck1.instantiated1Card11List.Count;
			CardCounterManager.CardCounter11();
			
			CardCounterManager.counter11a += SaveCardDeck1.instantiated1Card11aList.Count;
			CardCounterManager.CardCounter11a();
			
			CardCounterManager.counter11b += SaveCardDeck1.instantiated1Card11bList.Count;
			CardCounterManager.CardCounter11b();
			
			CardCounterManager.counter11c += SaveCardDeck1.instantiated1Card11cList.Count;
			CardCounterManager.CardCounter11c();
			
			CardCounterManager.counter12 += SaveCardDeck1.instantiated1Card12List.Count;
			CardCounterManager.CardCounter12();
			
			CardCounterManager.counter12a += SaveCardDeck1.instantiated1Card12aList.Count;
			CardCounterManager.CardCounter12a();
			
			CardCounterManager.counter12b += SaveCardDeck1.instantiated1Card12bList.Count;
			CardCounterManager.CardCounter12b();
			
			CardCounterManager.counter12c += SaveCardDeck1.instantiated1Card12cList.Count;
			CardCounterManager.CardCounter12c();
			
			CardCounterManager.counter13 += SaveCardDeck1.instantiated1Card13List.Count;
			CardCounterManager.CardCounter13();
			
			CardCounterManager.counter13a += SaveCardDeck1.instantiated1Card13aList.Count;
			CardCounterManager.CardCounter13a();
			
			CardCounterManager.counter13b += SaveCardDeck1.instantiated1Card13bList.Count;
			CardCounterManager.CardCounter13b();
			
			CardCounterManager.counter13c += SaveCardDeck1.instantiated1Card13cList.Count;
			CardCounterManager.CardCounter13c();
			
			CardCounterManager.counter14 += SaveCardDeck1.instantiated1Card14List.Count;
			CardCounterManager.CardCounter14();
			
			CardCounterManager.counter14a += SaveCardDeck1.instantiated1Card14aList.Count;
			CardCounterManager.CardCounter14a();
			
			CardCounterManager.counter14b += SaveCardDeck1.instantiated1Card14bList.Count;
			CardCounterManager.CardCounter14b();
			
			CardCounterManager.counter14c += SaveCardDeck1.instantiated1Card14cList.Count;
			CardCounterManager.CardCounter14c();
			
			CardCounterManager.counter15 += SaveCardDeck1.instantiated1Card15List.Count;
			CardCounterManager.CardCounter15();
			
			CardCounterManager.counter15a += SaveCardDeck1.instantiated1Card15aList.Count;
			CardCounterManager.CardCounter15a();
			
			CardCounterManager.counter15b += SaveCardDeck1.instantiated1Card15bList.Count;
			CardCounterManager.CardCounter15b();
			
			CardCounterManager.counter15c += SaveCardDeck1.instantiated1Card15cList.Count;
			CardCounterManager.CardCounter15c();
			
			CardCounterManager.counter16 += SaveCardDeck1.instantiated1Card16List.Count;
			CardCounterManager.CardCounter16();
			
			CardCounterManager.counter16a += SaveCardDeck1.instantiated1Card16aList.Count;
			CardCounterManager.CardCounter16a();
			
			CardCounterManager.counter16b += SaveCardDeck1.instantiated1Card16bList.Count;
			CardCounterManager.CardCounter16b();
			
			CardCounterManager.counter16c += SaveCardDeck1.instantiated1Card16cList.Count;
			CardCounterManager.CardCounter16c();
			
			CardCounterManager.counter17 += SaveCardDeck1.instantiated1Card17List.Count;
			CardCounterManager.CardCounter17();
			
			CardCounterManager.counter17a += SaveCardDeck1.instantiated1Card17aList.Count;
			CardCounterManager.CardCounter17a();
			
			CardCounterManager.counter17b += SaveCardDeck1.instantiated1Card17bList.Count;
			CardCounterManager.CardCounter17b();
			
			CardCounterManager.counter17c += SaveCardDeck1.instantiated1Card17cList.Count;
			CardCounterManager.CardCounter17c();
			
			CardCounterManager.counter18 += SaveCardDeck1.instantiated1Card18List.Count;
			CardCounterManager.CardCounter18();
			
			CardCounterManager.counter18a += SaveCardDeck1.instantiated1Card18aList.Count;
			CardCounterManager.CardCounter18a();
			
			CardCounterManager.counter18b += SaveCardDeck1.instantiated1Card18bList.Count;
			CardCounterManager.CardCounter18b();
			
			CardCounterManager.counter18c += SaveCardDeck1.instantiated1Card18cList.Count;
			CardCounterManager.CardCounter18c();
			
			CardCounterManager.counter19 += SaveCardDeck1.instantiated1Card19List.Count;
			CardCounterManager.CardCounter19();
			
			CardCounterManager.counter19a += SaveCardDeck1.instantiated1Card19aList.Count;
			CardCounterManager.CardCounter19a();
			
			CardCounterManager.counter19b += SaveCardDeck1.instantiated1Card19bList.Count;
			CardCounterManager.CardCounter19b();
			
			CardCounterManager.counter19c += SaveCardDeck1.instantiated1Card19cList.Count;
			CardCounterManager.CardCounter19c();
			
			CardCounterManager.counter20 += SaveCardDeck1.instantiated1Card20List.Count;
			CardCounterManager.CardCounter20();
			
			CardCounterManager.counter20a += SaveCardDeck1.instantiated1Card20aList.Count;
			CardCounterManager.CardCounter20a();
			
			CardCounterManager.counter20b += SaveCardDeck1.instantiated1Card20bList.Count;
			CardCounterManager.CardCounter20b();
			
			CardCounterManager.counter20c += SaveCardDeck1.instantiated1Card20cList.Count;
			CardCounterManager.CardCounter20c();
			
			CardCounterManager.counter21 += SaveCardDeck1.instantiated1Card21List.Count;
			CardCounterManager.CardCounter21();
			
			CardCounterManager.counter21a += SaveCardDeck1.instantiated1Card21aList.Count;
			CardCounterManager.CardCounter21a();
			
			CardCounterManager.counter21b += SaveCardDeck1.instantiated1Card21bList.Count;
			CardCounterManager.CardCounter21b();
			
			CardCounterManager.counter21c += SaveCardDeck1.instantiated1Card21cList.Count;
			CardCounterManager.CardCounter21c();
			
			CardCounterManager.counter22 += SaveCardDeck1.instantiated1Card22List.Count;
			CardCounterManager.CardCounter22();
			
			CardCounterManager.counter22a += SaveCardDeck1.instantiated1Card22aList.Count;
			CardCounterManager.CardCounter22a();
			
			CardCounterManager.counter22b += SaveCardDeck1.instantiated1Card22bList.Count;
			CardCounterManager.CardCounter22b();
			
			CardCounterManager.counter22c += SaveCardDeck1.instantiated1Card22cList.Count;
			CardCounterManager.CardCounter22c();
			
			CardCounterManager.counter23 += SaveCardDeck1.instantiated1Card23List.Count;
			CardCounterManager.CardCounter23();
			
			CardCounterManager.counter23a += SaveCardDeck1.instantiated1Card23aList.Count;
			CardCounterManager.CardCounter23a();
			
			CardCounterManager.counter23b += SaveCardDeck1.instantiated1Card23bList.Count;
			CardCounterManager.CardCounter23b();
			
			CardCounterManager.counter23c += SaveCardDeck1.instantiated1Card23cList.Count;
			CardCounterManager.CardCounter23c();
			
			CardCounterManager.counter24 += SaveCardDeck1.instantiated1Card24List.Count;
			CardCounterManager.CardCounter24();
			
			CardCounterManager.counter24a += SaveCardDeck1.instantiated1Card24aList.Count;
			CardCounterManager.CardCounter24a();
			
			CardCounterManager.counter24b += SaveCardDeck1.instantiated1Card24bList.Count;
			CardCounterManager.CardCounter24b();
			
			CardCounterManager.counter24c += SaveCardDeck1.instantiated1Card24cList.Count;
			CardCounterManager.CardCounter24c();
			
			CardCounterManager.counter25 += SaveCardDeck1.instantiated1Card25List.Count;
			CardCounterManager.CardCounter25();
			
			CardCounterManager.counter25a += SaveCardDeck1.instantiated1Card25aList.Count;
			CardCounterManager.CardCounter25a();
			
			CardCounterManager.counter25b += SaveCardDeck1.instantiated1Card25bList.Count;
			CardCounterManager.CardCounter25b();
			
			CardCounterManager.counter25c += SaveCardDeck1.instantiated1Card25cList.Count;
			CardCounterManager.CardCounter25c();
			
			CardCounterManager.counter26 += SaveCardDeck1.instantiated1Card26List.Count;
			CardCounterManager.CardCounter26();
			
			CardCounterManager.counter26a += SaveCardDeck1.instantiated1Card26aList.Count;
			CardCounterManager.CardCounter26a();
			
			CardCounterManager.counter26b += SaveCardDeck1.instantiated1Card26bList.Count;
			CardCounterManager.CardCounter26b();
			
			CardCounterManager.counter26c += SaveCardDeck1.instantiated1Card26cList.Count;
			CardCounterManager.CardCounter26c();
			
			CardCounterManager.counter27 += SaveCardDeck1.instantiated1Card27List.Count;
			CardCounterManager.CardCounter27();
			
			CardCounterManager.counter27a += SaveCardDeck1.instantiated1Card27aList.Count;
			CardCounterManager.CardCounter27a();
			
			CardCounterManager.counter27b += SaveCardDeck1.instantiated1Card27bList.Count;
			CardCounterManager.CardCounter27b();
			
			CardCounterManager.counter27c += SaveCardDeck1.instantiated1Card27cList.Count;
			CardCounterManager.CardCounter27c();
			
			CardCounterManager.counter28 += SaveCardDeck1.instantiated1Card28List.Count;
			CardCounterManager.CardCounter28();
			
			CardCounterManager.counter28a += SaveCardDeck1.instantiated1Card28aList.Count;
			CardCounterManager.CardCounter28a();
			
			CardCounterManager.counter28b += SaveCardDeck1.instantiated1Card28bList.Count;
			CardCounterManager.CardCounter28b();
			
			CardCounterManager.counter28c += SaveCardDeck1.instantiated1Card28cList.Count;
			CardCounterManager.CardCounter28c();
			
			CardCounterManager.counter29 += SaveCardDeck1.instantiated1Card29List.Count;
			CardCounterManager.CardCounter29();
			
			CardCounterManager.counter29a += SaveCardDeck1.instantiated1Card29aList.Count;
			CardCounterManager.CardCounter29a();
			
			CardCounterManager.counter29b += SaveCardDeck1.instantiated1Card29bList.Count;
			CardCounterManager.CardCounter29b();
			
			CardCounterManager.counter29c += SaveCardDeck1.instantiated1Card29cList.Count;
			CardCounterManager.CardCounter29c();
			
			CardCounterManager.counter30 += SaveCardDeck1.instantiated1Card30List.Count;
			CardCounterManager.CardCounter30();
			
			CardCounterManager.counter30a += SaveCardDeck1.instantiated1Card30aList.Count;
			CardCounterManager.CardCounter30a();
			
			CardCounterManager.counter30b += SaveCardDeck1.instantiated1Card30bList.Count;
			CardCounterManager.CardCounter30b();
			
			CardCounterManager.counter30c += SaveCardDeck1.instantiated1Card30cList.Count;
			CardCounterManager.CardCounter30c();
			
			CardCounterManager.counter31 += SaveCardDeck1.instantiated1Card31List.Count;
			CardCounterManager.CardCounter31();
			
			CardCounterManager.counter31a += SaveCardDeck1.instantiated1Card31aList.Count;
			CardCounterManager.CardCounter31a();
			
			CardCounterManager.counter31b += SaveCardDeck1.instantiated1Card31bList.Count;
			CardCounterManager.CardCounter31b();
			
			CardCounterManager.counter31c += SaveCardDeck1.instantiated1Card31cList.Count;
			CardCounterManager.CardCounter31c();
			
			CardCounterManager.counter32 += SaveCardDeck1.instantiated1Card32List.Count;
			CardCounterManager.CardCounter32();
			
			CardCounterManager.counter32a += SaveCardDeck1.instantiated1Card32aList.Count;
			CardCounterManager.CardCounter32a();
			
			CardCounterManager.counter32b += SaveCardDeck1.instantiated1Card32bList.Count;
			CardCounterManager.CardCounter32b();
			
			CardCounterManager.counter32c += SaveCardDeck1.instantiated1Card32cList.Count;
			CardCounterManager.CardCounter32c();
			
			CardCounterManager.counter33 += SaveCardDeck1.instantiated1Card33List.Count;
			CardCounterManager.CardCounter33();
			
			CardCounterManager.counter33a += SaveCardDeck1.instantiated1Card33aList.Count;
			CardCounterManager.CardCounter33a();
			
			CardCounterManager.counter33b += SaveCardDeck1.instantiated1Card33bList.Count;
			CardCounterManager.CardCounter33b();
			
			CardCounterManager.counter33c += SaveCardDeck1.instantiated1Card33cList.Count;
			CardCounterManager.CardCounter33c();
			
			CardCounterManager.counter34 += SaveCardDeck1.instantiated1Card34List.Count;
			CardCounterManager.CardCounter34();
			
			CardCounterManager.counter34a += SaveCardDeck1.instantiated1Card34aList.Count;
			CardCounterManager.CardCounter34a();
			
			CardCounterManager.counter34b += SaveCardDeck1.instantiated1Card34bList.Count;
			CardCounterManager.CardCounter34b();
			
			CardCounterManager.counter34c += SaveCardDeck1.instantiated1Card34cList.Count;
			CardCounterManager.CardCounter34c();
			
			CardCounterManager.counter35 += SaveCardDeck1.instantiated1Card35List.Count;
			CardCounterManager.CardCounter35();
			
			CardCounterManager.counter35a += SaveCardDeck1.instantiated1Card35aList.Count;
			CardCounterManager.CardCounter35a();
			
			CardCounterManager.counter35b += SaveCardDeck1.instantiated1Card35bList.Count;
			CardCounterManager.CardCounter35b();
			
			CardCounterManager.counter35c += SaveCardDeck1.instantiated1Card35cList.Count;
			CardCounterManager.CardCounter35c();
			
			CardCounterManager.counter36 += SaveCardDeck1.instantiated1Card36List.Count;
			CardCounterManager.CardCounter36();
			
			CardCounterManager.counter36a += SaveCardDeck1.instantiated1Card36aList.Count;
			CardCounterManager.CardCounter36a();
			
			CardCounterManager.counter36b += SaveCardDeck1.instantiated1Card36bList.Count;
			CardCounterManager.CardCounter36b();
			
			CardCounterManager.counter36c += SaveCardDeck1.instantiated1Card36cList.Count;
			CardCounterManager.CardCounter36c();
			
			CardCounterManager.counter37 += SaveCardDeck1.instantiated1Card37List.Count;
			CardCounterManager.CardCounter37();
			
			CardCounterManager.counter37a += SaveCardDeck1.instantiated1Card37aList.Count;
			CardCounterManager.CardCounter37a();
			
			CardCounterManager.counter37b += SaveCardDeck1.instantiated1Card37bList.Count;
			CardCounterManager.CardCounter37b();
			
			CardCounterManager.counter37c += SaveCardDeck1.instantiated1Card37cList.Count;
			CardCounterManager.CardCounter37c();
			
			CardCounterManager.counter38 += SaveCardDeck1.instantiated1Card38List.Count;
			CardCounterManager.CardCounter38();
			
			CardCounterManager.counter38a += SaveCardDeck1.instantiated1Card38aList.Count;
			CardCounterManager.CardCounter38a();
			
			CardCounterManager.counter38b += SaveCardDeck1.instantiated1Card38bList.Count;
			CardCounterManager.CardCounter38b();
			
			CardCounterManager.counter38c += SaveCardDeck1.instantiated1Card38cList.Count;
			CardCounterManager.CardCounter38c();
			
			CardCounterManager.counter39 += SaveCardDeck1.instantiated1Card39List.Count;
			CardCounterManager.CardCounter39();
			
			CardCounterManager.counter39a += SaveCardDeck1.instantiated1Card39aList.Count;
			CardCounterManager.CardCounter39a();
			
			CardCounterManager.counter39b += SaveCardDeck1.instantiated1Card39bList.Count;
			CardCounterManager.CardCounter39b();
			
			CardCounterManager.counter39c += SaveCardDeck1.instantiated1Card39cList.Count;
			CardCounterManager.CardCounter39c();
			
			CardCounterManager.counter40 += SaveCardDeck1.instantiated1Card40List.Count;
			CardCounterManager.CardCounter40();
			
			CardCounterManager.counter40a += SaveCardDeck1.instantiated1Card40aList.Count;
			CardCounterManager.CardCounter40a();
			
			CardCounterManager.counter40b += SaveCardDeck1.instantiated1Card40bList.Count;
			CardCounterManager.CardCounter40b();
			
			CardCounterManager.counter40c += SaveCardDeck1.instantiated1Card40cList.Count;
			CardCounterManager.CardCounter40c();
			
			CardCounterManager.counter41 += SaveCardDeck1.instantiated1Card41List.Count;
			CardCounterManager.CardCounter41();
			
			CardCounterManager.counter41a += SaveCardDeck1.instantiated1Card41aList.Count;
			CardCounterManager.CardCounter41a();
			
			CardCounterManager.counter41b += SaveCardDeck1.instantiated1Card41bList.Count;
			CardCounterManager.CardCounter41b();
			
			CardCounterManager.counter41c += SaveCardDeck1.instantiated1Card41cList.Count;
			CardCounterManager.CardCounter41c();
			
			CardCounterManager.counter42 += SaveCardDeck1.instantiated1Card42List.Count;
			CardCounterManager.CardCounter42();
			
			CardCounterManager.counter42a += SaveCardDeck1.instantiated1Card42aList.Count;
			CardCounterManager.CardCounter42a();
			
			CardCounterManager.counter42b += SaveCardDeck1.instantiated1Card42bList.Count;
			CardCounterManager.CardCounter42b();
			
			CardCounterManager.counter42c += SaveCardDeck1.instantiated1Card42cList.Count;
			CardCounterManager.CardCounter42c();
			
			CardCounterManager.counter43 += SaveCardDeck1.instantiated1Card43List.Count;
			CardCounterManager.CardCounter43();
			
			CardCounterManager.counter43a += SaveCardDeck1.instantiated1Card43aList.Count;
			CardCounterManager.CardCounter43a();
			
			CardCounterManager.counter43b += SaveCardDeck1.instantiated1Card43bList.Count;
			CardCounterManager.CardCounter43b();
			
			CardCounterManager.counter43c += SaveCardDeck1.instantiated1Card43cList.Count;
			CardCounterManager.CardCounter43c();
			
			CardCounterManager.counter44 += SaveCardDeck1.instantiated1Card44List.Count;
			CardCounterManager.CardCounter44();
			
			CardCounterManager.counter44a += SaveCardDeck1.instantiated1Card44aList.Count;
			CardCounterManager.CardCounter44a();
			
			CardCounterManager.counter44b += SaveCardDeck1.instantiated1Card44bList.Count;
			CardCounterManager.CardCounter44b();
			
			CardCounterManager.counter44c += SaveCardDeck1.instantiated1Card44cList.Count;
			CardCounterManager.CardCounter44c();
			
			CardCounterManager.counter45 += SaveCardDeck1.instantiated1Card45List.Count;
			CardCounterManager.CardCounter45();
			
			CardCounterManager.counter45a += SaveCardDeck1.instantiated1Card45aList.Count;
			CardCounterManager.CardCounter45a();
			
			CardCounterManager.counter45b += SaveCardDeck1.instantiated1Card45bList.Count;
			CardCounterManager.CardCounter45b();
			
			CardCounterManager.counter45c += SaveCardDeck1.instantiated1Card45cList.Count;
			CardCounterManager.CardCounter45c();
			
			CardCounterManager.counter46 += SaveCardDeck1.instantiated1Card46List.Count;
			CardCounterManager.CardCounter46();
			
			CardCounterManager.counter46a += SaveCardDeck1.instantiated1Card46aList.Count;
			CardCounterManager.CardCounter46a();
			
			CardCounterManager.counter46b += SaveCardDeck1.instantiated1Card46bList.Count;
			CardCounterManager.CardCounter46b();
			
			CardCounterManager.counter46c += SaveCardDeck1.instantiated1Card46cList.Count;
			CardCounterManager.CardCounter46c();
			
			CardCounterManager.counter47 += SaveCardDeck1.instantiated1Card47List.Count;
			CardCounterManager.CardCounter47();
			
			CardCounterManager.counter47a += SaveCardDeck1.instantiated1Card47aList.Count;
			CardCounterManager.CardCounter47a();
			
			CardCounterManager.counter47b += SaveCardDeck1.instantiated1Card47bList.Count;
			CardCounterManager.CardCounter47b();
			
			CardCounterManager.counter47c += SaveCardDeck1.instantiated1Card47cList.Count;
			CardCounterManager.CardCounter47c();
			
			CardCounterManager.counter48 += SaveCardDeck1.instantiated1Card48List.Count;
			CardCounterManager.CardCounter48();
			
			CardCounterManager.counter48a += SaveCardDeck1.instantiated1Card48aList.Count;
			CardCounterManager.CardCounter48a();
			
			CardCounterManager.counter48b += SaveCardDeck1.instantiated1Card48bList.Count;
			CardCounterManager.CardCounter48b();
			
			CardCounterManager.counter48c += SaveCardDeck1.instantiated1Card48cList.Count;
			CardCounterManager.CardCounter48c();
			
			CardCounterManager.counter49 += SaveCardDeck1.instantiated1Card49List.Count;
			CardCounterManager.CardCounter49();
			
			CardCounterManager.counter49a += SaveCardDeck1.instantiated1Card49aList.Count;
			CardCounterManager.CardCounter49a();
			
			CardCounterManager.counter49b += SaveCardDeck1.instantiated1Card49bList.Count;
			CardCounterManager.CardCounter49b();
			
			CardCounterManager.counter49c += SaveCardDeck1.instantiated1Card49cList.Count;
			CardCounterManager.CardCounter49c();
			
			CardCounterManager.counter50 += SaveCardDeck1.instantiated1Card50List.Count;
			CardCounterManager.CardCounter50();
			
			CardCounterManager.counter50a += SaveCardDeck1.instantiated1Card50aList.Count;
			CardCounterManager.CardCounter50a();
			
			CardCounterManager.counter50b += SaveCardDeck1.instantiated1Card50bList.Count;
			CardCounterManager.CardCounter50b();
			
			CardCounterManager.counter50c += SaveCardDeck1.instantiated1Card50cList.Count;
			CardCounterManager.CardCounter50c();
			
			CardCounterManager.counter51 += SaveCardDeck1.instantiated1Card51List.Count;
			CardCounterManager.CardCounter51();
			
			CardCounterManager.counter51a += SaveCardDeck1.instantiated1Card51aList.Count;
			CardCounterManager.CardCounter51a();
			
			CardCounterManager.counter51b += SaveCardDeck1.instantiated1Card51bList.Count;
			CardCounterManager.CardCounter51b();
			
			CardCounterManager.counter51c += SaveCardDeck1.instantiated1Card51cList.Count;
			CardCounterManager.CardCounter51c();
			
			CardCounterManager.counter52 += SaveCardDeck1.instantiated1Card52List.Count;
			CardCounterManager.CardCounter52();
			
			CardCounterManager.counter52a += SaveCardDeck1.instantiated1Card52aList.Count;
			CardCounterManager.CardCounter52a();
			
			CardCounterManager.counter52b += SaveCardDeck1.instantiated1Card52bList.Count;
			CardCounterManager.CardCounter52b();
			
			CardCounterManager.counter52c += SaveCardDeck1.instantiated1Card52cList.Count;
			CardCounterManager.CardCounter52c();
			
			CardCounterManager.counter53 += SaveCardDeck1.instantiated1Card53List.Count;
			CardCounterManager.CardCounter53();
			
			CardCounterManager.counter53a += SaveCardDeck1.instantiated1Card53aList.Count;
			CardCounterManager.CardCounter53a();
			
			CardCounterManager.counter53b += SaveCardDeck1.instantiated1Card53bList.Count;
			CardCounterManager.CardCounter53b();
			
			CardCounterManager.counter53c += SaveCardDeck1.instantiated1Card53cList.Count;
			CardCounterManager.CardCounter53c();
			
			CardCounterManager.counter54 += SaveCardDeck1.instantiated1Card54List.Count;
			CardCounterManager.CardCounter54();
			
			CardCounterManager.counter54a += SaveCardDeck1.instantiated1Card54aList.Count;
			CardCounterManager.CardCounter54a();
			
			CardCounterManager.counter54b += SaveCardDeck1.instantiated1Card54bList.Count;
			CardCounterManager.CardCounter54b();
			
			CardCounterManager.counter54c += SaveCardDeck1.instantiated1Card54cList.Count;
			CardCounterManager.CardCounter54c();
			
			CardCounterManager.counter55 += SaveCardDeck1.instantiated1Card55List.Count;
			CardCounterManager.CardCounter55();
			
			CardCounterManager.counter55a += SaveCardDeck1.instantiated1Card55aList.Count;
			CardCounterManager.CardCounter55a();
			
			CardCounterManager.counter55b += SaveCardDeck1.instantiated1Card55bList.Count;
			CardCounterManager.CardCounter55b();
			
			CardCounterManager.counter55c += SaveCardDeck1.instantiated1Card55cList.Count;
			CardCounterManager.CardCounter55c();
			
			CardCounterManager.counter56 += SaveCardDeck1.instantiated1Card56List.Count;
			CardCounterManager.CardCounter56();
			
			CardCounterManager.counter56a += SaveCardDeck1.instantiated1Card56aList.Count;
			CardCounterManager.CardCounter56a();
			
			CardCounterManager.counter56b += SaveCardDeck1.instantiated1Card56bList.Count;
			CardCounterManager.CardCounter56b();
			
			CardCounterManager.counter56c += SaveCardDeck1.instantiated1Card56cList.Count;
			CardCounterManager.CardCounter56c();
			
			CardCounterManager.counter57 += SaveCardDeck1.instantiated1Card57List.Count;
			CardCounterManager.CardCounter57();
			
			CardCounterManager.counter57a += SaveCardDeck1.instantiated1Card57aList.Count;
			CardCounterManager.CardCounter57a();
			
			CardCounterManager.counter57b += SaveCardDeck1.instantiated1Card57bList.Count;
			CardCounterManager.CardCounter57b();
			
			CardCounterManager.counter57c += SaveCardDeck1.instantiated1Card57cList.Count;
			CardCounterManager.CardCounter57c();
			
			CardCounterManager.counter58 += SaveCardDeck1.instantiated1Card58List.Count;
			CardCounterManager.CardCounter58();
			
			CardCounterManager.counter58a += SaveCardDeck1.instantiated1Card58aList.Count;
			CardCounterManager.CardCounter58a();
			
			CardCounterManager.counter58b += SaveCardDeck1.instantiated1Card58bList.Count;
			CardCounterManager.CardCounter58b();
			
			CardCounterManager.counter58c += SaveCardDeck1.instantiated1Card58cList.Count;
			CardCounterManager.CardCounter58c();
			
			CardCounterManager.counter59 += SaveCardDeck1.instantiated1Card59List.Count;
			CardCounterManager.CardCounter59();
			
			CardCounterManager.counter59a += SaveCardDeck1.instantiated1Card59aList.Count;
			CardCounterManager.CardCounter59a();
			
			CardCounterManager.counter59b += SaveCardDeck1.instantiated1Card59bList.Count;
			CardCounterManager.CardCounter59b();
			
			CardCounterManager.counter59c += SaveCardDeck1.instantiated1Card59cList.Count;
			CardCounterManager.CardCounter59c();
			
			CardCounterManager.counter60 += SaveCardDeck1.instantiated1Card60List.Count;
			CardCounterManager.CardCounter60();
			
			CardCounterManager.counter60a += SaveCardDeck1.instantiated1Card60aList.Count;
			CardCounterManager.CardCounter60a();
			
			CardCounterManager.counter60b += SaveCardDeck1.instantiated1Card60bList.Count;
			CardCounterManager.CardCounter60b();
			
			CardCounterManager.counter60c += SaveCardDeck1.instantiated1Card60cList.Count;
			CardCounterManager.CardCounter60c();
			
		}
		
		
		void FindDeck2Cards(){
			
			foreach(GameObject card in deck2Cards){
				
				if(card.name == "instantiated2Card1"){
						
					SaveCardDeck2.instantiated2Card1List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card1a"){
						
					SaveCardDeck2.instantiated2Card1aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card1b"){
						
					SaveCardDeck2.instantiated2Card1bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card1c"){
						
					SaveCardDeck2.instantiated2Card1cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card2"){
						
					SaveCardDeck2.instantiated2Card2List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card2a"){
						
					SaveCardDeck2.instantiated2Card2aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card2b"){
						
					SaveCardDeck2.instantiated2Card2bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card2c"){
						
					SaveCardDeck2.instantiated2Card2cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card3"){
						
					SaveCardDeck2.instantiated2Card3List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card3a"){
						
					SaveCardDeck2.instantiated2Card3aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card3b"){
						
					SaveCardDeck2.instantiated2Card3bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card3c"){
						
					SaveCardDeck2.instantiated2Card3cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card4"){
						
					SaveCardDeck2.instantiated2Card4List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card4a"){
						
					SaveCardDeck2.instantiated2Card4aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card4b"){
						
					SaveCardDeck2.instantiated2Card4bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card4c"){
						
					SaveCardDeck2.instantiated2Card4cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card5"){
						
					SaveCardDeck2.instantiated2Card5List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card5a"){
						
					SaveCardDeck2.instantiated2Card5aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card5b"){
						
					SaveCardDeck2.instantiated2Card5bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card5c"){
						
					SaveCardDeck2.instantiated2Card5cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card6"){
						
					SaveCardDeck2.instantiated2Card6List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card6a"){
						
					SaveCardDeck2.instantiated2Card6aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card6b"){
						
					SaveCardDeck2.instantiated2Card6bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card6c"){
						
					SaveCardDeck2.instantiated2Card6cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card7"){
						
					SaveCardDeck2.instantiated2Card7List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card7a"){
						
					SaveCardDeck2.instantiated2Card7aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card7b"){
						
					SaveCardDeck2.instantiated2Card7bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card7c"){
						
					SaveCardDeck2.instantiated2Card7cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card8"){
						
					SaveCardDeck2.instantiated2Card8List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card8a"){
						
					SaveCardDeck2.instantiated2Card8aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card8b"){
						
					SaveCardDeck2.instantiated2Card8bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card8c"){
						
					SaveCardDeck2.instantiated2Card8cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card9"){
						
					SaveCardDeck2.instantiated2Card9List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card9a"){
						
					SaveCardDeck2.instantiated2Card9aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card9b"){
						
					SaveCardDeck2.instantiated2Card9bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card9c"){
						
					SaveCardDeck2.instantiated2Card9cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card10"){
						
					SaveCardDeck2.instantiated2Card10List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card10a"){
						
					SaveCardDeck2.instantiated2Card10aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card10b"){
						
					SaveCardDeck2.instantiated2Card10bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card10c"){
						
					SaveCardDeck2.instantiated2Card10cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card11"){
						
					SaveCardDeck2.instantiated2Card11List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card11a"){
						
					SaveCardDeck2.instantiated2Card11aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card11b"){
						
					SaveCardDeck2.instantiated2Card11bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card11c"){
						
					SaveCardDeck2.instantiated2Card11cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card12"){
						
					SaveCardDeck2.instantiated2Card12List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card12a"){
						
					SaveCardDeck2.instantiated2Card12aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card12b"){
						
					SaveCardDeck2.instantiated2Card12bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card12c"){
						
					SaveCardDeck2.instantiated2Card12cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card13"){
						
					SaveCardDeck2.instantiated2Card13List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card13a"){
						
					SaveCardDeck2.instantiated2Card13aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card13b"){
						
					SaveCardDeck2.instantiated2Card13bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card13c"){
						
					SaveCardDeck2.instantiated2Card13cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card14"){
						
					SaveCardDeck2.instantiated2Card14List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card14a"){
						
					SaveCardDeck2.instantiated2Card14aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card14b"){
						
					SaveCardDeck2.instantiated2Card14bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card14c"){
						
					SaveCardDeck2.instantiated2Card14cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card15"){
						
					SaveCardDeck2.instantiated2Card15List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card15a"){
						
					SaveCardDeck2.instantiated2Card15aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card15b"){
						
					SaveCardDeck2.instantiated2Card15bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card15c"){
						
					SaveCardDeck2.instantiated2Card15cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card16"){
						
					SaveCardDeck2.instantiated2Card16List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card16a"){
						
					SaveCardDeck2.instantiated2Card16aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card16b"){
						
					SaveCardDeck2.instantiated2Card16bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card16c"){
						
					SaveCardDeck2.instantiated2Card16cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card17"){
						
					SaveCardDeck2.instantiated2Card17List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card17a"){
						
					SaveCardDeck2.instantiated2Card17aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card17b"){
						
					SaveCardDeck2.instantiated2Card17bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card17c"){
						
					SaveCardDeck2.instantiated2Card17cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card18"){
						
					SaveCardDeck2.instantiated2Card18List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card18a"){
						
					SaveCardDeck2.instantiated2Card18aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card18b"){
						
					SaveCardDeck2.instantiated2Card18bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card18c"){
						
					SaveCardDeck2.instantiated2Card18cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card19"){
						
					SaveCardDeck2.instantiated2Card19List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card19a"){
						
					SaveCardDeck2.instantiated2Card19aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card19b"){
						
					SaveCardDeck2.instantiated2Card19bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card19c"){
						
					SaveCardDeck2.instantiated2Card19cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card20"){
						
					SaveCardDeck2.instantiated2Card20List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card20a"){
						
					SaveCardDeck2.instantiated2Card20aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card20b"){
						
					SaveCardDeck2.instantiated2Card20bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card20c"){
						
					SaveCardDeck2.instantiated2Card20cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card21"){
						
					SaveCardDeck2.instantiated2Card21List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card21a"){
						
					SaveCardDeck2.instantiated2Card21aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card21b"){
						
					SaveCardDeck2.instantiated2Card21bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card21c"){
						
					SaveCardDeck2.instantiated2Card21cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card22"){
						
					SaveCardDeck2.instantiated2Card22List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card22a"){
						
					SaveCardDeck2.instantiated2Card22aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card22b"){
						
					SaveCardDeck2.instantiated2Card22bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card22c"){
						
					SaveCardDeck2.instantiated2Card22cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card23"){
						
					SaveCardDeck2.instantiated2Card23List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card23a"){
						
					SaveCardDeck2.instantiated2Card23aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card23b"){
						
					SaveCardDeck2.instantiated2Card23bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card23c"){
						
					SaveCardDeck2.instantiated2Card23cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card24"){
						
					SaveCardDeck2.instantiated2Card24List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card24a"){
						
					SaveCardDeck2.instantiated2Card24aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card24b"){
						
					SaveCardDeck2.instantiated2Card24bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card24c"){
						
					SaveCardDeck2.instantiated2Card24cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card25"){
						
					SaveCardDeck2.instantiated2Card25List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card25a"){
						
					SaveCardDeck2.instantiated2Card25aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card25b"){
						
					SaveCardDeck2.instantiated2Card25bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card25c"){
						
					SaveCardDeck2.instantiated2Card25cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card26"){
						
					SaveCardDeck2.instantiated2Card26List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card26a"){
						
					SaveCardDeck2.instantiated2Card26aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card26b"){
						
					SaveCardDeck2.instantiated2Card26bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card26c"){
						
					SaveCardDeck2.instantiated2Card26cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card27"){
						
					SaveCardDeck2.instantiated2Card27List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card27a"){
						
					SaveCardDeck2.instantiated2Card27aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card27b"){
						
					SaveCardDeck2.instantiated2Card27bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card27c"){
						
					SaveCardDeck2.instantiated2Card27cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card28"){
						
					SaveCardDeck2.instantiated2Card28List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card28a"){
						
					SaveCardDeck2.instantiated2Card28aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card28b"){
						
					SaveCardDeck2.instantiated2Card28bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card28c"){
						
					SaveCardDeck2.instantiated2Card28cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card29"){
						
					SaveCardDeck2.instantiated2Card29List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card29a"){
						
					SaveCardDeck2.instantiated2Card29aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card29b"){
						
					SaveCardDeck2.instantiated2Card29bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card29c"){
						
					SaveCardDeck2.instantiated2Card29cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card30"){
						
					SaveCardDeck2.instantiated2Card30List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card30a"){
						
					SaveCardDeck2.instantiated2Card30aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card30b"){
						
					SaveCardDeck2.instantiated2Card30bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card30c"){
						
					SaveCardDeck2.instantiated2Card30cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card31"){
						
					SaveCardDeck2.instantiated2Card31List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card31a"){
						
					SaveCardDeck2.instantiated2Card31aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card31b"){
						
					SaveCardDeck2.instantiated2Card31bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card31c"){
						
					SaveCardDeck2.instantiated2Card31cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card32"){
						
					SaveCardDeck2.instantiated2Card32List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card32a"){
						
					SaveCardDeck2.instantiated2Card32aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card32b"){
						
					SaveCardDeck2.instantiated2Card32bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card32c"){
						
					SaveCardDeck2.instantiated2Card32cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card33"){
						
					SaveCardDeck2.instantiated2Card33List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card33a"){
						
					SaveCardDeck2.instantiated2Card33aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card33b"){
						
					SaveCardDeck2.instantiated2Card33bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card33c"){
						
					SaveCardDeck2.instantiated2Card33cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card34"){
						
					SaveCardDeck2.instantiated2Card34List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card34a"){
						
					SaveCardDeck2.instantiated2Card34aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card34b"){
						
					SaveCardDeck2.instantiated2Card34bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card34c"){
						
					SaveCardDeck2.instantiated2Card34cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card35"){
						
					SaveCardDeck2.instantiated2Card35List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card35a"){
						
					SaveCardDeck2.instantiated2Card35aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card35b"){
						
					SaveCardDeck2.instantiated2Card35bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card35c"){
						
					SaveCardDeck2.instantiated2Card35cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card36"){
						
					SaveCardDeck2.instantiated2Card36List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card36a"){
						
					SaveCardDeck2.instantiated2Card36aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card36b"){
						
					SaveCardDeck2.instantiated2Card36bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card36c"){
						
					SaveCardDeck2.instantiated2Card36cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card37"){
						
					SaveCardDeck2.instantiated2Card37List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card37a"){
						
					SaveCardDeck2.instantiated2Card37aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card37b"){
						
					SaveCardDeck2.instantiated2Card37bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card37c"){
						
					SaveCardDeck2.instantiated2Card37cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card38"){
						
					SaveCardDeck2.instantiated2Card38List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card38a"){
						
					SaveCardDeck2.instantiated2Card38aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card38b"){
						
					SaveCardDeck2.instantiated2Card38bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card38c"){
						
					SaveCardDeck2.instantiated2Card38cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card39"){
						
					SaveCardDeck2.instantiated2Card39List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card39a"){
						
					SaveCardDeck2.instantiated2Card39aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card39b"){
						
					SaveCardDeck2.instantiated2Card39bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card39c"){
						
					SaveCardDeck2.instantiated2Card39cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card40"){
						
					SaveCardDeck2.instantiated2Card40List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card40a"){
						
					SaveCardDeck2.instantiated2Card40aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card40b"){
						
					SaveCardDeck2.instantiated2Card40bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card40c"){
						
					SaveCardDeck2.instantiated2Card40cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card41"){
						
					SaveCardDeck2.instantiated2Card41List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card41a"){
						
					SaveCardDeck2.instantiated2Card41aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card41b"){
						
					SaveCardDeck2.instantiated2Card41bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card41c"){
						
					SaveCardDeck2.instantiated2Card41cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card42"){
						
					SaveCardDeck2.instantiated2Card42List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card42a"){
						
					SaveCardDeck2.instantiated2Card42aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card42b"){
						
					SaveCardDeck2.instantiated2Card42bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card42c"){
						
					SaveCardDeck2.instantiated2Card42cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card43"){
						
					SaveCardDeck2.instantiated2Card43List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card43a"){
						
					SaveCardDeck2.instantiated2Card43aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card43b"){
						
					SaveCardDeck2.instantiated2Card43bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card43c"){
						
					SaveCardDeck2.instantiated2Card43cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card44"){
						
					SaveCardDeck2.instantiated2Card44List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card44a"){
						
					SaveCardDeck2.instantiated2Card44aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card44b"){
						
					SaveCardDeck2.instantiated2Card44bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card44c"){
						
					SaveCardDeck2.instantiated2Card44cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card45"){
						
					SaveCardDeck2.instantiated2Card45List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card45a"){
						
					SaveCardDeck2.instantiated2Card45aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card45b"){
						
					SaveCardDeck2.instantiated2Card45bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card45c"){
						
					SaveCardDeck2.instantiated2Card45cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card46"){
						
					SaveCardDeck2.instantiated2Card46List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card46a"){
						
					SaveCardDeck2.instantiated2Card46aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card46b"){
						
					SaveCardDeck2.instantiated2Card46bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card46c"){
						
					SaveCardDeck2.instantiated2Card46cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card47"){
						
					SaveCardDeck2.instantiated2Card47List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card47a"){
						
					SaveCardDeck2.instantiated2Card47aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card47b"){
						
					SaveCardDeck2.instantiated2Card47bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card47c"){
						
					SaveCardDeck2.instantiated2Card47cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card48"){
						
					SaveCardDeck2.instantiated2Card48List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card48a"){
						
					SaveCardDeck2.instantiated2Card48aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card48b"){
						
					SaveCardDeck2.instantiated2Card48bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card48c"){
						
					SaveCardDeck2.instantiated2Card48cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card49"){
						
					SaveCardDeck2.instantiated2Card49List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card49a"){
						
					SaveCardDeck2.instantiated2Card49aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card49b"){
						
					SaveCardDeck2.instantiated2Card49bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card49c"){
						
					SaveCardDeck2.instantiated2Card49cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card50"){
						
					SaveCardDeck2.instantiated2Card50List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card50a"){
						
					SaveCardDeck2.instantiated2Card50aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card50b"){
						
					SaveCardDeck2.instantiated2Card50bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card50c"){
						
					SaveCardDeck2.instantiated2Card50cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card51"){
						
					SaveCardDeck2.instantiated2Card51List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card51a"){
						
					SaveCardDeck2.instantiated2Card51aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card51b"){
						
					SaveCardDeck2.instantiated2Card51bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card51c"){
						
					SaveCardDeck2.instantiated2Card51cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card52"){
						
					SaveCardDeck2.instantiated2Card52List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card52a"){
						
					SaveCardDeck2.instantiated2Card52aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card52b"){
						
					SaveCardDeck2.instantiated2Card52bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card52c"){
						
					SaveCardDeck2.instantiated2Card52cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card53"){
						
					SaveCardDeck2.instantiated2Card53List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card53a"){
						
					SaveCardDeck2.instantiated2Card53aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card53b"){
						
					SaveCardDeck2.instantiated2Card53bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card53c"){
						
					SaveCardDeck2.instantiated2Card53cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card54"){
						
					SaveCardDeck2.instantiated2Card54List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card54a"){
						
					SaveCardDeck2.instantiated2Card54aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card54b"){
						
					SaveCardDeck2.instantiated2Card54bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card54c"){
						
					SaveCardDeck2.instantiated2Card54cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card55"){
						
					SaveCardDeck2.instantiated2Card55List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card55a"){
						
					SaveCardDeck2.instantiated2Card55aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card55b"){
						
					SaveCardDeck2.instantiated2Card55bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card55c"){
						
					SaveCardDeck2.instantiated2Card55cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card56"){
						
					SaveCardDeck2.instantiated2Card56List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card56a"){
						
					SaveCardDeck2.instantiated2Card56aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card56b"){
						
					SaveCardDeck2.instantiated2Card56bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card56c"){
						
					SaveCardDeck2.instantiated2Card56cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card57"){
						
					SaveCardDeck2.instantiated2Card57List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card57a"){
						
					SaveCardDeck2.instantiated2Card57aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card57b"){
						
					SaveCardDeck2.instantiated2Card57bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card57c"){
						
					SaveCardDeck2.instantiated2Card57cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card58"){
						
					SaveCardDeck2.instantiated2Card58List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card58a"){
						
					SaveCardDeck2.instantiated2Card58aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card58b"){
						
					SaveCardDeck2.instantiated2Card58bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card58c"){
						
					SaveCardDeck2.instantiated2Card58cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card59"){
						
					SaveCardDeck2.instantiated2Card59List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card59a"){
						
					SaveCardDeck2.instantiated2Card59aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card59b"){
						
					SaveCardDeck2.instantiated2Card59bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card59c"){
						
					SaveCardDeck2.instantiated2Card59cList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card60"){
						
					SaveCardDeck2.instantiated2Card60List.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card60a"){
						
					SaveCardDeck2.instantiated2Card60aList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card60b"){
						
					SaveCardDeck2.instantiated2Card60bList.Add(card);
					
				}
				
				else if(card.name == "instantiated2Card60c"){
						
					SaveCardDeck2.instantiated2Card60cList.Add(card);
					
				}
				
		
			}
			CardCounterManager.counter1 += SaveCardDeck2.instantiated2Card1List.Count;
			print("I2C1L: " + SaveCardDeck2.instantiated2Card1List.Count);
			CardCounterManager.CardCounter1();
			
			CardCounterManager.counter1a += SaveCardDeck2.instantiated2Card1aList.Count;
			CardCounterManager.CardCounter1a();
			
			CardCounterManager.counter1b += SaveCardDeck2.instantiated2Card1bList.Count;
			CardCounterManager.CardCounter1b();
			
			CardCounterManager.counter1c += SaveCardDeck2.instantiated2Card1cList.Count;
			CardCounterManager.CardCounter1c();
			
			CardCounterManager.counter2 += SaveCardDeck2.instantiated2Card2List.Count;
			CardCounterManager.CardCounter2();
			
			CardCounterManager.counter2a += SaveCardDeck2.instantiated2Card2aList.Count;
			CardCounterManager.CardCounter2a();
			
			CardCounterManager.counter2b += SaveCardDeck2.instantiated2Card2bList.Count;
			CardCounterManager.CardCounter2b();
			
			CardCounterManager.counter2c += SaveCardDeck2.instantiated2Card2cList.Count;
			CardCounterManager.CardCounter2c();
			
			CardCounterManager.counter3 += SaveCardDeck2.instantiated2Card3List.Count;
			CardCounterManager.CardCounter3();
			
			CardCounterManager.counter3a += SaveCardDeck2.instantiated2Card3aList.Count;
			CardCounterManager.CardCounter3a();
			
			CardCounterManager.counter3b += SaveCardDeck2.instantiated2Card3bList.Count;
			CardCounterManager.CardCounter3b();
			
			CardCounterManager.counter3c += SaveCardDeck2.instantiated2Card3cList.Count;
			CardCounterManager.CardCounter3c();
			
			CardCounterManager.counter4 += SaveCardDeck2.instantiated2Card4List.Count;
			CardCounterManager.CardCounter4();
			
			CardCounterManager.counter4a += SaveCardDeck2.instantiated2Card4aList.Count;
			CardCounterManager.CardCounter4a();
			
			CardCounterManager.counter4b += SaveCardDeck2.instantiated2Card4bList.Count;
			CardCounterManager.CardCounter4b();
			
			CardCounterManager.counter4c += SaveCardDeck2.instantiated2Card4cList.Count;
			CardCounterManager.CardCounter4c();
			
			CardCounterManager.counter5 += SaveCardDeck2.instantiated2Card5List.Count;
			CardCounterManager.CardCounter5();
			
			CardCounterManager.counter5a += SaveCardDeck2.instantiated2Card5aList.Count;
			CardCounterManager.CardCounter5a();
			
			CardCounterManager.counter5b += SaveCardDeck2.instantiated2Card5bList.Count;
			CardCounterManager.CardCounter5b();
			
			CardCounterManager.counter5c += SaveCardDeck2.instantiated2Card5cList.Count;
			CardCounterManager.CardCounter5c();
			
			CardCounterManager.counter6 += SaveCardDeck2.instantiated2Card6List.Count;
			CardCounterManager.CardCounter6();
			
			CardCounterManager.counter6a += SaveCardDeck2.instantiated2Card6aList.Count;
			CardCounterManager.CardCounter6a();
			
			CardCounterManager.counter6b += SaveCardDeck2.instantiated2Card6bList.Count;
			CardCounterManager.CardCounter6b();
			
			CardCounterManager.counter6c += SaveCardDeck2.instantiated2Card6cList.Count;
			CardCounterManager.CardCounter6c();
			
			CardCounterManager.counter7 += SaveCardDeck2.instantiated2Card7List.Count;
			CardCounterManager.CardCounter7();
			
			CardCounterManager.counter7a += SaveCardDeck2.instantiated2Card7aList.Count;
			CardCounterManager.CardCounter7a();
			
			CardCounterManager.counter7b += SaveCardDeck2.instantiated2Card7bList.Count;
			CardCounterManager.CardCounter7b();
			
			CardCounterManager.counter7c += SaveCardDeck2.instantiated2Card7cList.Count;
			CardCounterManager.CardCounter7c();
			
			CardCounterManager.counter8 += SaveCardDeck2.instantiated2Card8List.Count;
			CardCounterManager.CardCounter8();
			
			CardCounterManager.counter8a += SaveCardDeck2.instantiated2Card8aList.Count;
			CardCounterManager.CardCounter8a();
			
			CardCounterManager.counter8b += SaveCardDeck2.instantiated2Card8bList.Count;
			CardCounterManager.CardCounter8b();
			
			CardCounterManager.counter8c += SaveCardDeck2.instantiated2Card8cList.Count;
			CardCounterManager.CardCounter8c();
			
			CardCounterManager.counter9 += SaveCardDeck2.instantiated2Card9List.Count;
			CardCounterManager.CardCounter9();
			
			CardCounterManager.counter9a += SaveCardDeck2.instantiated2Card9aList.Count;
			CardCounterManager.CardCounter9a();
			
			CardCounterManager.counter9b += SaveCardDeck2.instantiated2Card9bList.Count;
			CardCounterManager.CardCounter9b();
			
			CardCounterManager.counter9c += SaveCardDeck2.instantiated2Card9cList.Count;
			CardCounterManager.CardCounter9c();
			
			CardCounterManager.counter10 += SaveCardDeck2.instantiated2Card10List.Count;
			CardCounterManager.CardCounter10();
			
			CardCounterManager.counter10a += SaveCardDeck2.instantiated2Card10aList.Count;
			CardCounterManager.CardCounter10a();
			
			CardCounterManager.counter10b += SaveCardDeck2.instantiated2Card10bList.Count;
			CardCounterManager.CardCounter10b();
			
			CardCounterManager.counter10c += SaveCardDeck2.instantiated2Card10cList.Count;
			CardCounterManager.CardCounter10c();
			
			CardCounterManager.counter11 += SaveCardDeck2.instantiated2Card11List.Count;
			CardCounterManager.CardCounter11();
			
			CardCounterManager.counter11a += SaveCardDeck2.instantiated2Card11aList.Count;
			CardCounterManager.CardCounter11a();
			
			CardCounterManager.counter11b += SaveCardDeck2.instantiated2Card11bList.Count;
			CardCounterManager.CardCounter11b();
			
			CardCounterManager.counter11c += SaveCardDeck2.instantiated2Card11cList.Count;
			CardCounterManager.CardCounter11c();
			
			CardCounterManager.counter12 += SaveCardDeck2.instantiated2Card12List.Count;
			CardCounterManager.CardCounter12();
			
			CardCounterManager.counter12a += SaveCardDeck2.instantiated2Card12aList.Count;
			CardCounterManager.CardCounter12a();
			
			CardCounterManager.counter12b += SaveCardDeck2.instantiated2Card12bList.Count;
			CardCounterManager.CardCounter12b();
			
			CardCounterManager.counter12c += SaveCardDeck2.instantiated2Card12cList.Count;
			CardCounterManager.CardCounter12c();
			
			CardCounterManager.counter13 += SaveCardDeck2.instantiated2Card13List.Count;
			CardCounterManager.CardCounter13();
			
			CardCounterManager.counter13a += SaveCardDeck2.instantiated2Card13aList.Count;
			CardCounterManager.CardCounter13a();
			
			CardCounterManager.counter13b += SaveCardDeck2.instantiated2Card13bList.Count;
			CardCounterManager.CardCounter13b();
			
			CardCounterManager.counter13c += SaveCardDeck2.instantiated2Card13cList.Count;
			CardCounterManager.CardCounter13c();
			
			CardCounterManager.counter14 += SaveCardDeck2.instantiated2Card14List.Count;
			CardCounterManager.CardCounter14();
			
			CardCounterManager.counter14a += SaveCardDeck2.instantiated2Card14aList.Count;
			CardCounterManager.CardCounter14a();
			
			CardCounterManager.counter14b += SaveCardDeck2.instantiated2Card14bList.Count;
			CardCounterManager.CardCounter14b();
			
			CardCounterManager.counter14c += SaveCardDeck2.instantiated2Card14cList.Count;
			CardCounterManager.CardCounter14c();
			
			CardCounterManager.counter15 += SaveCardDeck2.instantiated2Card15List.Count;
			CardCounterManager.CardCounter15();
			
			CardCounterManager.counter15a += SaveCardDeck2.instantiated2Card15aList.Count;
			CardCounterManager.CardCounter15a();
			
			CardCounterManager.counter15b += SaveCardDeck2.instantiated2Card15bList.Count;
			CardCounterManager.CardCounter15b();
			
			CardCounterManager.counter15c += SaveCardDeck2.instantiated2Card15cList.Count;
			CardCounterManager.CardCounter15c();
			
			CardCounterManager.counter16 += SaveCardDeck2.instantiated2Card16List.Count;
			CardCounterManager.CardCounter16();
			
			CardCounterManager.counter16a += SaveCardDeck2.instantiated2Card16aList.Count;
			CardCounterManager.CardCounter16a();
			
			CardCounterManager.counter16b += SaveCardDeck2.instantiated2Card16bList.Count;
			CardCounterManager.CardCounter16b();
			
			CardCounterManager.counter16c += SaveCardDeck2.instantiated2Card16cList.Count;
			CardCounterManager.CardCounter16c();
			
			CardCounterManager.counter17 += SaveCardDeck2.instantiated2Card17List.Count;
			CardCounterManager.CardCounter17();
			
			CardCounterManager.counter17a += SaveCardDeck2.instantiated2Card17aList.Count;
			CardCounterManager.CardCounter17a();
			
			CardCounterManager.counter7b += SaveCardDeck2.instantiated2Card17bList.Count;
			CardCounterManager.CardCounter7b();
			
			CardCounterManager.counter17c += SaveCardDeck2.instantiated2Card17cList.Count;
			CardCounterManager.CardCounter17c();
			
			CardCounterManager.counter18 += SaveCardDeck2.instantiated2Card18List.Count;
			CardCounterManager.CardCounter18();
			
			CardCounterManager.counter18a += SaveCardDeck2.instantiated2Card18aList.Count;
			CardCounterManager.CardCounter18a();
			
			CardCounterManager.counter18b += SaveCardDeck2.instantiated2Card18bList.Count;
			CardCounterManager.CardCounter18b();
			
			CardCounterManager.counter18c += SaveCardDeck2.instantiated2Card18cList.Count;
			CardCounterManager.CardCounter18c();
			
			CardCounterManager.counter19 += SaveCardDeck2.instantiated2Card19List.Count;
			CardCounterManager.CardCounter19();
			
			CardCounterManager.counter19a += SaveCardDeck2.instantiated2Card19aList.Count;
			CardCounterManager.CardCounter19a();
			
			CardCounterManager.counter19b += SaveCardDeck2.instantiated2Card19bList.Count;
			CardCounterManager.CardCounter19b();
			
			CardCounterManager.counter19c += SaveCardDeck2.instantiated2Card19cList.Count;
			CardCounterManager.CardCounter19c();
			
			CardCounterManager.counter20 += SaveCardDeck2.instantiated2Card20List.Count;
			CardCounterManager.CardCounter20();
			
			CardCounterManager.counter20a += SaveCardDeck2.instantiated2Card20aList.Count;
			CardCounterManager.CardCounter20a();
			
			CardCounterManager.counter20b += SaveCardDeck2.instantiated2Card20bList.Count;
			CardCounterManager.CardCounter20b();
			
			CardCounterManager.counter20c += SaveCardDeck2.instantiated2Card20cList.Count;
			CardCounterManager.CardCounter20c();
			
			CardCounterManager.counter21 += SaveCardDeck2.instantiated2Card21List.Count;
			CardCounterManager.CardCounter21();
			
			CardCounterManager.counter21a += SaveCardDeck2.instantiated2Card21aList.Count;
			CardCounterManager.CardCounter21a();
			
			CardCounterManager.counter21b += SaveCardDeck2.instantiated2Card21bList.Count;
			CardCounterManager.CardCounter21b();
			
			CardCounterManager.counter21c += SaveCardDeck2.instantiated2Card21cList.Count;
			CardCounterManager.CardCounter21c();
			
			CardCounterManager.counter22 += SaveCardDeck2.instantiated2Card22List.Count;
			CardCounterManager.CardCounter22();
			
			CardCounterManager.counter22a += SaveCardDeck2.instantiated2Card22aList.Count;
			CardCounterManager.CardCounter22a();
			
			CardCounterManager.counter22b += SaveCardDeck2.instantiated2Card22bList.Count;
			CardCounterManager.CardCounter22b();
			
			CardCounterManager.counter22c += SaveCardDeck2.instantiated2Card22cList.Count;
			CardCounterManager.CardCounter22c();
			
			CardCounterManager.counter23 += SaveCardDeck2.instantiated2Card23List.Count;
			CardCounterManager.CardCounter23();
			
			CardCounterManager.counter23a += SaveCardDeck2.instantiated2Card23aList.Count;
			CardCounterManager.CardCounter23a();
			
			CardCounterManager.counter23b += SaveCardDeck2.instantiated2Card23bList.Count;
			CardCounterManager.CardCounter23b();
			
			CardCounterManager.counter23c += SaveCardDeck2.instantiated2Card23cList.Count;
			CardCounterManager.CardCounter23c();
			
			CardCounterManager.counter24 += SaveCardDeck2.instantiated2Card24List.Count;
			CardCounterManager.CardCounter24();
			
			CardCounterManager.counter24a += SaveCardDeck2.instantiated2Card24aList.Count;
			CardCounterManager.CardCounter24a();
			
			CardCounterManager.counter24b += SaveCardDeck2.instantiated2Card24bList.Count;
			CardCounterManager.CardCounter24b();
			
			CardCounterManager.counter24c += SaveCardDeck2.instantiated2Card24cList.Count;
			CardCounterManager.CardCounter24c();
			
			CardCounterManager.counter25 += SaveCardDeck2.instantiated2Card25List.Count;
			CardCounterManager.CardCounter25();
			
			CardCounterManager.counter25a += SaveCardDeck2.instantiated2Card25aList.Count;
			CardCounterManager.CardCounter25a();
			
			CardCounterManager.counter25b += SaveCardDeck2.instantiated2Card25bList.Count;
			CardCounterManager.CardCounter25b();
			
			CardCounterManager.counter25c += SaveCardDeck2.instantiated2Card25cList.Count;
			CardCounterManager.CardCounter25c();
			
			CardCounterManager.counter26 += SaveCardDeck2.instantiated2Card26List.Count;
			CardCounterManager.CardCounter26();
			
			CardCounterManager.counter26a += SaveCardDeck2.instantiated2Card26aList.Count;
			CardCounterManager.CardCounter26a();
			
			CardCounterManager.counter26b += SaveCardDeck2.instantiated2Card26bList.Count;
			CardCounterManager.CardCounter26b();
			
			CardCounterManager.counter26c += SaveCardDeck2.instantiated2Card26cList.Count;
			CardCounterManager.CardCounter26c();
			
			CardCounterManager.counter27 += SaveCardDeck2.instantiated2Card27List.Count;
			CardCounterManager.CardCounter27();
			
			CardCounterManager.counter27a += SaveCardDeck2.instantiated2Card27aList.Count;
			CardCounterManager.CardCounter27a();
			
			CardCounterManager.counter27b += SaveCardDeck2.instantiated2Card27bList.Count;
			CardCounterManager.CardCounter27b();
			
			CardCounterManager.counter27c += SaveCardDeck2.instantiated2Card27cList.Count;
			CardCounterManager.CardCounter27c();
			
			CardCounterManager.counter28 += SaveCardDeck2.instantiated2Card28List.Count;
			CardCounterManager.CardCounter28();
			
			CardCounterManager.counter28a += SaveCardDeck2.instantiated2Card28aList.Count;
			CardCounterManager.CardCounter28a();
			
			CardCounterManager.counter28b += SaveCardDeck2.instantiated2Card28bList.Count;
			CardCounterManager.CardCounter28b();
			
			CardCounterManager.counter28c += SaveCardDeck2.instantiated2Card28cList.Count;
			CardCounterManager.CardCounter28c();
			
			CardCounterManager.counter29 += SaveCardDeck2.instantiated2Card29List.Count;
			CardCounterManager.CardCounter29();
			
			CardCounterManager.counter29a += SaveCardDeck2.instantiated2Card29aList.Count;
			CardCounterManager.CardCounter29a();
			
			CardCounterManager.counter29b += SaveCardDeck2.instantiated2Card29bList.Count;
			CardCounterManager.CardCounter29b();
			
			CardCounterManager.counter29c += SaveCardDeck2.instantiated2Card29cList.Count;
			CardCounterManager.CardCounter29c();
			
			CardCounterManager.counter30 += SaveCardDeck2.instantiated2Card30List.Count;
			CardCounterManager.CardCounter30();
			
			CardCounterManager.counter30a += SaveCardDeck2.instantiated2Card30aList.Count;
			CardCounterManager.CardCounter30a();
			
			CardCounterManager.counter30b += SaveCardDeck2.instantiated2Card30bList.Count;
			CardCounterManager.CardCounter30b();
			
			CardCounterManager.counter30c += SaveCardDeck2.instantiated2Card30cList.Count;
			CardCounterManager.CardCounter30c();
			
			CardCounterManager.counter31 += SaveCardDeck2.instantiated2Card31List.Count;
			CardCounterManager.CardCounter31();
			
			CardCounterManager.counter31a += SaveCardDeck2.instantiated2Card31aList.Count;
			CardCounterManager.CardCounter31a();
			
			CardCounterManager.counter31b += SaveCardDeck2.instantiated2Card31bList.Count;
			CardCounterManager.CardCounter31b();
			
			CardCounterManager.counter31c += SaveCardDeck2.instantiated2Card31cList.Count;
			CardCounterManager.CardCounter31c();
			
			CardCounterManager.counter32 += SaveCardDeck2.instantiated2Card32List.Count;
			CardCounterManager.CardCounter32();
			
			CardCounterManager.counter32a += SaveCardDeck2.instantiated2Card32aList.Count;
			CardCounterManager.CardCounter32a();
			
			CardCounterManager.counter32b += SaveCardDeck2.instantiated2Card32bList.Count;
			CardCounterManager.CardCounter32b();
			
			CardCounterManager.counter32c += SaveCardDeck2.instantiated2Card32cList.Count;
			CardCounterManager.CardCounter32c();
			
			CardCounterManager.counter33 += SaveCardDeck2.instantiated2Card33List.Count;
			CardCounterManager.CardCounter33();
			
			CardCounterManager.counter33a += SaveCardDeck2.instantiated2Card33aList.Count;
			CardCounterManager.CardCounter33a();
			
			CardCounterManager.counter33b += SaveCardDeck2.instantiated2Card33bList.Count;
			CardCounterManager.CardCounter33b();
			
			CardCounterManager.counter33c += SaveCardDeck2.instantiated2Card33cList.Count;
			CardCounterManager.CardCounter33c();
			
			CardCounterManager.counter34 += SaveCardDeck2.instantiated2Card34List.Count;
			CardCounterManager.CardCounter34();
			
			CardCounterManager.counter34a += SaveCardDeck2.instantiated2Card34aList.Count;
			CardCounterManager.CardCounter34a();
			
			CardCounterManager.counter34b += SaveCardDeck2.instantiated2Card34bList.Count;
			CardCounterManager.CardCounter34b();
			
			CardCounterManager.counter34c += SaveCardDeck2.instantiated2Card34cList.Count;
			CardCounterManager.CardCounter34c();
			
			CardCounterManager.counter35 += SaveCardDeck2.instantiated2Card35List.Count;
			CardCounterManager.CardCounter35();
			
			CardCounterManager.counter35a += SaveCardDeck2.instantiated2Card35aList.Count;
			CardCounterManager.CardCounter35a();
			
			CardCounterManager.counter35b += SaveCardDeck2.instantiated2Card35bList.Count;
			CardCounterManager.CardCounter35b();
			
			CardCounterManager.counter35c += SaveCardDeck2.instantiated2Card35cList.Count;
			CardCounterManager.CardCounter35c();
			
			CardCounterManager.counter36 += SaveCardDeck2.instantiated2Card36List.Count;
			CardCounterManager.CardCounter36();
			
			CardCounterManager.counter36a += SaveCardDeck2.instantiated2Card36aList.Count;
			CardCounterManager.CardCounter36a();
			
			CardCounterManager.counter36b += SaveCardDeck2.instantiated2Card36bList.Count;
			CardCounterManager.CardCounter36b();
			
			CardCounterManager.counter36c += SaveCardDeck2.instantiated2Card36cList.Count;
			CardCounterManager.CardCounter36c();
			
			CardCounterManager.counter37 += SaveCardDeck2.instantiated2Card37List.Count;
			CardCounterManager.CardCounter37();
			
			CardCounterManager.counter37a += SaveCardDeck2.instantiated2Card37aList.Count;
			CardCounterManager.CardCounter37a();
			
			CardCounterManager.counter37b += SaveCardDeck2.instantiated2Card37bList.Count;
			CardCounterManager.CardCounter37b();
			
			CardCounterManager.counter37c += SaveCardDeck2.instantiated2Card37cList.Count;
			CardCounterManager.CardCounter37c();
			
			CardCounterManager.counter38 += SaveCardDeck2.instantiated2Card38List.Count;
			CardCounterManager.CardCounter38();
			
			CardCounterManager.counter38a += SaveCardDeck2.instantiated2Card38aList.Count;
			CardCounterManager.CardCounter38a();
			
			CardCounterManager.counter38b += SaveCardDeck2.instantiated2Card38bList.Count;
			CardCounterManager.CardCounter38b();
			
			CardCounterManager.counter38c += SaveCardDeck2.instantiated2Card38cList.Count;
			CardCounterManager.CardCounter38c();
			
			CardCounterManager.counter39 += SaveCardDeck2.instantiated2Card39List.Count;
			CardCounterManager.CardCounter39();
			
			CardCounterManager.counter39a += SaveCardDeck2.instantiated2Card39aList.Count;
			CardCounterManager.CardCounter39a();
			
			CardCounterManager.counter39b += SaveCardDeck2.instantiated2Card39bList.Count;
			CardCounterManager.CardCounter39b();
			
			CardCounterManager.counter39c += SaveCardDeck2.instantiated2Card39cList.Count;
			CardCounterManager.CardCounter39c();
			
			CardCounterManager.counter40 += SaveCardDeck2.instantiated2Card40List.Count;
			CardCounterManager.CardCounter40();
			
			CardCounterManager.counter40a += SaveCardDeck2.instantiated2Card40aList.Count;
			CardCounterManager.CardCounter40a();
			
			CardCounterManager.counter40b += SaveCardDeck2.instantiated2Card40bList.Count;
			CardCounterManager.CardCounter40b();
			
			CardCounterManager.counter40c += SaveCardDeck2.instantiated2Card40cList.Count;
			CardCounterManager.CardCounter40c();
			
			CardCounterManager.counter41 += SaveCardDeck2.instantiated2Card41List.Count;
			CardCounterManager.CardCounter41();
			
			CardCounterManager.counter41a += SaveCardDeck2.instantiated2Card41aList.Count;
			CardCounterManager.CardCounter41a();
			
			CardCounterManager.counter41b += SaveCardDeck2.instantiated2Card41bList.Count;
			CardCounterManager.CardCounter41b();
			
			CardCounterManager.counter41c += SaveCardDeck2.instantiated2Card41cList.Count;
			CardCounterManager.CardCounter41c();
			
			CardCounterManager.counter42 += SaveCardDeck2.instantiated2Card42List.Count;
			CardCounterManager.CardCounter42();
			
			CardCounterManager.counter42a += SaveCardDeck2.instantiated2Card42aList.Count;
			CardCounterManager.CardCounter42a();
			
			CardCounterManager.counter42b += SaveCardDeck2.instantiated2Card42bList.Count;
			CardCounterManager.CardCounter42b();
			
			CardCounterManager.counter42c += SaveCardDeck2.instantiated2Card42cList.Count;
			CardCounterManager.CardCounter42c();
			
			CardCounterManager.counter43 += SaveCardDeck2.instantiated2Card43List.Count;
			CardCounterManager.CardCounter43();
			
			CardCounterManager.counter43a += SaveCardDeck2.instantiated2Card43aList.Count;
			CardCounterManager.CardCounter43a();
			
			CardCounterManager.counter43b += SaveCardDeck2.instantiated2Card43bList.Count;
			CardCounterManager.CardCounter43b();
			
			CardCounterManager.counter43c += SaveCardDeck2.instantiated2Card43cList.Count;
			CardCounterManager.CardCounter43c();
			
			CardCounterManager.counter44 += SaveCardDeck2.instantiated2Card44List.Count;
			CardCounterManager.CardCounter44();
			
			CardCounterManager.counter44a += SaveCardDeck2.instantiated2Card44aList.Count;
			CardCounterManager.CardCounter44a();
			
			CardCounterManager.counter44b += SaveCardDeck2.instantiated2Card44bList.Count;
			CardCounterManager.CardCounter44b();
			
			CardCounterManager.counter44c += SaveCardDeck2.instantiated2Card44cList.Count;
			CardCounterManager.CardCounter44c();
			
			CardCounterManager.counter45 += SaveCardDeck2.instantiated2Card45List.Count;
			CardCounterManager.CardCounter45();
			
			CardCounterManager.counter45a += SaveCardDeck2.instantiated2Card45aList.Count;
			CardCounterManager.CardCounter45a();
			
			CardCounterManager.counter45b += SaveCardDeck2.instantiated2Card45bList.Count;
			CardCounterManager.CardCounter45b();
			
			CardCounterManager.counter45c += SaveCardDeck2.instantiated2Card45cList.Count;
			CardCounterManager.CardCounter45c();
			
			CardCounterManager.counter46 += SaveCardDeck2.instantiated2Card46List.Count;
			CardCounterManager.CardCounter46();
			
			CardCounterManager.counter46a += SaveCardDeck2.instantiated2Card46aList.Count;
			CardCounterManager.CardCounter46a();
			
			CardCounterManager.counter46b += SaveCardDeck2.instantiated2Card46bList.Count;
			CardCounterManager.CardCounter46b();
			
			CardCounterManager.counter46c += SaveCardDeck2.instantiated2Card46cList.Count;
			CardCounterManager.CardCounter46c();
			
			CardCounterManager.counter47 += SaveCardDeck2.instantiated2Card47List.Count;
			CardCounterManager.CardCounter47();
			
			CardCounterManager.counter47a += SaveCardDeck2.instantiated2Card47aList.Count;
			CardCounterManager.CardCounter47a();
			
			CardCounterManager.counter47b += SaveCardDeck2.instantiated2Card47bList.Count;
			CardCounterManager.CardCounter47b();
			
			CardCounterManager.counter47c += SaveCardDeck2.instantiated2Card47cList.Count;
			CardCounterManager.CardCounter47c();
			
			CardCounterManager.counter48 += SaveCardDeck2.instantiated2Card48List.Count;
			CardCounterManager.CardCounter48();
			
			CardCounterManager.counter48a += SaveCardDeck2.instantiated2Card48aList.Count;
			CardCounterManager.CardCounter48a();
			
			CardCounterManager.counter48b += SaveCardDeck2.instantiated2Card48bList.Count;
			CardCounterManager.CardCounter48b();
			
			CardCounterManager.counter48c += SaveCardDeck2.instantiated2Card48cList.Count;
			CardCounterManager.CardCounter48c();
			
			CardCounterManager.counter49 += SaveCardDeck2.instantiated2Card49List.Count;
			CardCounterManager.CardCounter49();
			
			CardCounterManager.counter49a += SaveCardDeck2.instantiated2Card49aList.Count;
			CardCounterManager.CardCounter49a();
			
			CardCounterManager.counter49b += SaveCardDeck2.instantiated2Card49bList.Count;
			CardCounterManager.CardCounter49b();
			
			CardCounterManager.counter49c += SaveCardDeck2.instantiated2Card49cList.Count;
			CardCounterManager.CardCounter49c();
			
			CardCounterManager.counter50 += SaveCardDeck2.instantiated2Card50List.Count;
			CardCounterManager.CardCounter50();
			
			CardCounterManager.counter50a += SaveCardDeck2.instantiated2Card50aList.Count;
			CardCounterManager.CardCounter50a();
			
			CardCounterManager.counter50b += SaveCardDeck2.instantiated2Card50bList.Count;
			CardCounterManager.CardCounter50b();
			
			CardCounterManager.counter50c += SaveCardDeck2.instantiated2Card50cList.Count;
			CardCounterManager.CardCounter50c();
			
			CardCounterManager.counter51 += SaveCardDeck2.instantiated2Card51List.Count;
			CardCounterManager.CardCounter51();
			
			CardCounterManager.counter51a += SaveCardDeck2.instantiated2Card51aList.Count;
			CardCounterManager.CardCounter51a();
			
			CardCounterManager.counter51b += SaveCardDeck2.instantiated2Card51bList.Count;
			CardCounterManager.CardCounter51b();
			
			CardCounterManager.counter51c += SaveCardDeck2.instantiated2Card51cList.Count;
			CardCounterManager.CardCounter51c();
			
			CardCounterManager.counter52 += SaveCardDeck2.instantiated2Card52List.Count;
			CardCounterManager.CardCounter52();
			
			CardCounterManager.counter52a += SaveCardDeck2.instantiated2Card52aList.Count;
			CardCounterManager.CardCounter52a();
			
			CardCounterManager.counter52b += SaveCardDeck2.instantiated2Card52bList.Count;
			CardCounterManager.CardCounter52b();
			
			CardCounterManager.counter52c += SaveCardDeck2.instantiated2Card52cList.Count;
			CardCounterManager.CardCounter52c();
			
			CardCounterManager.counter53 += SaveCardDeck2.instantiated2Card53List.Count;
			CardCounterManager.CardCounter53();
			
			CardCounterManager.counter53a += SaveCardDeck2.instantiated2Card53aList.Count;
			CardCounterManager.CardCounter53a();
			
			CardCounterManager.counter53b += SaveCardDeck2.instantiated2Card53bList.Count;
			CardCounterManager.CardCounter53b();
			
			CardCounterManager.counter53c += SaveCardDeck2.instantiated2Card53cList.Count;
			CardCounterManager.CardCounter53c();
			
			CardCounterManager.counter54 += SaveCardDeck2.instantiated2Card54List.Count;
			CardCounterManager.CardCounter54();
			
			CardCounterManager.counter54a += SaveCardDeck2.instantiated2Card54aList.Count;
			CardCounterManager.CardCounter54a();
			
			CardCounterManager.counter54b += SaveCardDeck2.instantiated2Card54bList.Count;
			CardCounterManager.CardCounter54b();
			
			CardCounterManager.counter54c += SaveCardDeck2.instantiated2Card54cList.Count;
			CardCounterManager.CardCounter54c();
			
			CardCounterManager.counter55 += SaveCardDeck2.instantiated2Card55List.Count;
			CardCounterManager.CardCounter55();
			
			CardCounterManager.counter55a += SaveCardDeck2.instantiated2Card55aList.Count;
			CardCounterManager.CardCounter55a();
			
			CardCounterManager.counter55b += SaveCardDeck2.instantiated2Card55bList.Count;
			CardCounterManager.CardCounter55b();
			
			CardCounterManager.counter55c += SaveCardDeck2.instantiated2Card55cList.Count;
			CardCounterManager.CardCounter55c();
			
			CardCounterManager.counter56 += SaveCardDeck2.instantiated2Card56List.Count;
			CardCounterManager.CardCounter56();
			
			CardCounterManager.counter56a += SaveCardDeck2.instantiated2Card56aList.Count;
			CardCounterManager.CardCounter56a();
			
			CardCounterManager.counter56b += SaveCardDeck2.instantiated2Card56bList.Count;
			CardCounterManager.CardCounter56b();
			
			CardCounterManager.counter56c += SaveCardDeck2.instantiated2Card56cList.Count;
			CardCounterManager.CardCounter56c();
			
			CardCounterManager.counter57 += SaveCardDeck2.instantiated2Card57List.Count;
			CardCounterManager.CardCounter57();
			
			CardCounterManager.counter57a += SaveCardDeck2.instantiated2Card57aList.Count;
			CardCounterManager.CardCounter57a();
			
			CardCounterManager.counter57b += SaveCardDeck2.instantiated2Card57bList.Count;
			CardCounterManager.CardCounter57b();
			
			CardCounterManager.counter57c += SaveCardDeck2.instantiated2Card57cList.Count;
			CardCounterManager.CardCounter57c();
			
			CardCounterManager.counter58 += SaveCardDeck2.instantiated2Card58List.Count;
			CardCounterManager.CardCounter58();
			
			CardCounterManager.counter58a += SaveCardDeck2.instantiated2Card58aList.Count;
			CardCounterManager.CardCounter58a();
			
			CardCounterManager.counter58b += SaveCardDeck2.instantiated2Card58bList.Count;
			CardCounterManager.CardCounter58b();
			
			CardCounterManager.counter58c += SaveCardDeck2.instantiated2Card58cList.Count;
			CardCounterManager.CardCounter58c();
			
			CardCounterManager.counter59 += SaveCardDeck2.instantiated2Card59List.Count;
			CardCounterManager.CardCounter59();
			
			CardCounterManager.counter59a += SaveCardDeck2.instantiated2Card59aList.Count;
			CardCounterManager.CardCounter59a();
			
			CardCounterManager.counter59b += SaveCardDeck2.instantiated2Card59bList.Count;
			CardCounterManager.CardCounter59b();
			
			CardCounterManager.counter59c += SaveCardDeck2.instantiated2Card59cList.Count;
			CardCounterManager.CardCounter59c();
			
			CardCounterManager.counter60 += SaveCardDeck2.instantiated2Card60List.Count;
			CardCounterManager.CardCounter60();
			
			CardCounterManager.counter60a += SaveCardDeck2.instantiated2Card60aList.Count;
			CardCounterManager.CardCounter60a();
			
			CardCounterManager.counter60b += SaveCardDeck2.instantiated2Card60bList.Count;
			CardCounterManager.CardCounter60b();
			
			CardCounterManager.counter60c += SaveCardDeck2.instantiated2Card60cList.Count;
			CardCounterManager.CardCounter60c();
		
		}
		
		
		
		void FindDeck3Cards(){
			
			foreach(GameObject card in deck3Cards){
				
				if(card.name == "instantiated3Card1"){
						
					SaveCardDeck3.instantiated3Card1List.Add(card);	
				}
				
				else if(card.name == "instantiated3Card1a"){
						
					SaveCardDeck3.instantiated3Card1aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card1b"){
						
					SaveCardDeck3.instantiated3Card1bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card1c"){
						
					SaveCardDeck3.instantiated3Card1cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card2"){
						
					SaveCardDeck3.instantiated3Card2List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card2a"){
						
					SaveCardDeck3.instantiated3Card2aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card2b"){
						
					SaveCardDeck3.instantiated3Card2bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card2c"){
						
					SaveCardDeck3.instantiated3Card2cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card3"){
						
					SaveCardDeck3.instantiated3Card3List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card3a"){
						
					SaveCardDeck3.instantiated3Card3aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card3b"){
						
					SaveCardDeck3.instantiated3Card3bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card3c"){
						
					SaveCardDeck3.instantiated3Card3cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card4"){
						
					SaveCardDeck3.instantiated3Card4List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card4a"){
						
					SaveCardDeck3.instantiated3Card4aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card4b"){
						
					SaveCardDeck3.instantiated3Card4bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card4c"){
						
					SaveCardDeck3.instantiated3Card4cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card5"){
						
					SaveCardDeck3.instantiated3Card5List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card5a"){
						
					SaveCardDeck3.instantiated3Card5aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card5b"){
						
					SaveCardDeck3.instantiated3Card5bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card5c"){
						
					SaveCardDeck3.instantiated3Card5cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card6"){
						
					SaveCardDeck3.instantiated3Card6List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card6a"){
						
					SaveCardDeck3.instantiated3Card6aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card6b"){
						
					SaveCardDeck3.instantiated3Card6bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card6c"){
						
					SaveCardDeck3.instantiated3Card6cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card7"){
						
					SaveCardDeck3.instantiated3Card7List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card7a"){
						
					SaveCardDeck3.instantiated3Card7aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card7b"){
						
					SaveCardDeck3.instantiated3Card7bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card7c"){
						
					SaveCardDeck3.instantiated3Card7cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card8"){
						
					SaveCardDeck3.instantiated3Card8List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card8a"){
						
					SaveCardDeck3.instantiated3Card8aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card8b"){
						
					SaveCardDeck3.instantiated3Card8bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card8c"){
						
					SaveCardDeck3.instantiated3Card8cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card9"){
						
					SaveCardDeck3.instantiated3Card9List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card9a"){
						
					SaveCardDeck3.instantiated3Card9aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card9b"){
						
					SaveCardDeck3.instantiated3Card9bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card9c"){
						
					SaveCardDeck3.instantiated3Card9cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card10"){
						
					SaveCardDeck3.instantiated3Card10List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card10a"){
						
					SaveCardDeck3.instantiated3Card10aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card10b"){
						
					SaveCardDeck3.instantiated3Card10bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card10c"){
						
					SaveCardDeck3.instantiated3Card10cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card11"){
						
					SaveCardDeck3.instantiated3Card11List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card11a"){
						
					SaveCardDeck3.instantiated3Card11aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card11b"){
						
					SaveCardDeck3.instantiated3Card11bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card11c"){
						
					SaveCardDeck3.instantiated3Card11cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card12"){
						
					SaveCardDeck3.instantiated3Card12List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card12a"){
						
					SaveCardDeck3.instantiated3Card12aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card12b"){
						
					SaveCardDeck3.instantiated3Card12bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card12c"){
						
					SaveCardDeck3.instantiated3Card12cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card13"){
						
					SaveCardDeck3.instantiated3Card13List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card13a"){
						
					SaveCardDeck3.instantiated3Card13aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card13b"){
						
					SaveCardDeck3.instantiated3Card13bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card13c"){
						
					SaveCardDeck3.instantiated3Card13cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card14"){
						
					SaveCardDeck3.instantiated3Card14List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card14a"){
						
					SaveCardDeck3.instantiated3Card14aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card14b"){
						
					SaveCardDeck3.instantiated3Card14bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card14c"){
						
					SaveCardDeck3.instantiated3Card14cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card15"){
						
					SaveCardDeck3.instantiated3Card15List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card15a"){
						
					SaveCardDeck3.instantiated3Card15aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card15b"){
						
					SaveCardDeck3.instantiated3Card15bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card15c"){
						
					SaveCardDeck3.instantiated3Card15cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card16"){
						
					SaveCardDeck3.instantiated3Card16List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card16a"){
						
					SaveCardDeck3.instantiated3Card16aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card16b"){
						
					SaveCardDeck3.instantiated3Card16bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card16c"){
						
					SaveCardDeck3.instantiated3Card16cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card17"){
						
					SaveCardDeck3.instantiated3Card17List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card17a"){
						
					SaveCardDeck3.instantiated3Card17aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card17b"){
						
					SaveCardDeck3.instantiated3Card17bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card17c"){
						
					SaveCardDeck3.instantiated3Card17cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card18"){
						
					SaveCardDeck3.instantiated3Card18List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card18a"){
						
					SaveCardDeck3.instantiated3Card18aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card18b"){
						
					SaveCardDeck3.instantiated3Card18bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card18c"){
						
					SaveCardDeck3.instantiated3Card18cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card19"){
						
					SaveCardDeck3.instantiated3Card19List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card19a"){
						
					SaveCardDeck3.instantiated3Card19aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card19b"){
						
					SaveCardDeck3.instantiated3Card19bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card19c"){
						
					SaveCardDeck3.instantiated3Card19cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card20"){
						
					SaveCardDeck3.instantiated3Card20List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card20a"){
						
					SaveCardDeck3.instantiated3Card20aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card20b"){
						
					SaveCardDeck3.instantiated3Card20bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card20c"){
						
					SaveCardDeck3.instantiated3Card20cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card21"){
						
					SaveCardDeck3.instantiated3Card21List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card21a"){
						
					SaveCardDeck3.instantiated3Card21aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card21b"){
						
					SaveCardDeck3.instantiated3Card21bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card21c"){
						
					SaveCardDeck3.instantiated3Card21cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card22"){
						
					SaveCardDeck3.instantiated3Card22List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card22a"){
						
					SaveCardDeck3.instantiated3Card22aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card22b"){
						
					SaveCardDeck3.instantiated3Card22bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card22c"){
						
					SaveCardDeck3.instantiated3Card22cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card23"){
						
					SaveCardDeck3.instantiated3Card23List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card23a"){
						
					SaveCardDeck3.instantiated3Card23aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card23b"){
						
					SaveCardDeck3.instantiated3Card23bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card23c"){
						
					SaveCardDeck3.instantiated3Card23cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card24"){
						
					SaveCardDeck3.instantiated3Card24List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card24a"){
						
					SaveCardDeck3.instantiated3Card24aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card24b"){
						
					SaveCardDeck3.instantiated3Card24bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card24c"){
						
					SaveCardDeck3.instantiated3Card24cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card25"){
						
					SaveCardDeck3.instantiated3Card25List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card25a"){
						
					SaveCardDeck3.instantiated3Card25aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card25b"){
						
					SaveCardDeck3.instantiated3Card25bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card25c"){
						
					SaveCardDeck3.instantiated3Card25cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card26"){
						
					SaveCardDeck3.instantiated3Card26List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card26a"){
						
					SaveCardDeck3.instantiated3Card26aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card26b"){
						
					SaveCardDeck3.instantiated3Card26bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card26c"){
						
					SaveCardDeck3.instantiated3Card26cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card27"){
						
					SaveCardDeck3.instantiated3Card27List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card27a"){
						
					SaveCardDeck3.instantiated3Card27aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card27b"){
						
					SaveCardDeck3.instantiated3Card27bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card27c"){
						
					SaveCardDeck3.instantiated3Card27cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card28"){
						
					SaveCardDeck3.instantiated3Card28List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card28a"){
						
					SaveCardDeck3.instantiated3Card28aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card28b"){
						
					SaveCardDeck3.instantiated3Card28bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card28c"){
						
					SaveCardDeck3.instantiated3Card28cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card29"){
						
					SaveCardDeck3.instantiated3Card29List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card29a"){
						
					SaveCardDeck3.instantiated3Card29aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card29b"){
						
					SaveCardDeck3.instantiated3Card29bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card29c"){
						
					SaveCardDeck3.instantiated3Card29cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card30"){
						
					SaveCardDeck3.instantiated3Card30List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card30a"){
						
					SaveCardDeck3.instantiated3Card30aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card30b"){
						
					SaveCardDeck3.instantiated3Card30bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card30c"){
						
					SaveCardDeck3.instantiated3Card30cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card31"){
						
					SaveCardDeck3.instantiated3Card31List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card31a"){
						
					SaveCardDeck3.instantiated3Card31aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card31b"){
						
					SaveCardDeck3.instantiated3Card31bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card31c"){
						
					SaveCardDeck3.instantiated3Card31cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card32"){
						
					SaveCardDeck3.instantiated3Card32List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card32a"){
						
					SaveCardDeck3.instantiated3Card32aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card32b"){
						
					SaveCardDeck3.instantiated3Card32bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card32c"){
						
					SaveCardDeck3.instantiated3Card32cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card33"){
						
					SaveCardDeck3.instantiated3Card33List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card33a"){
						
					SaveCardDeck3.instantiated3Card33aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card33b"){
						
					SaveCardDeck3.instantiated3Card33bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card33c"){
						
					SaveCardDeck3.instantiated3Card33cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card34"){
						
					SaveCardDeck3.instantiated3Card34List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card34a"){
						
					SaveCardDeck3.instantiated3Card34aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card34b"){
						
					SaveCardDeck3.instantiated3Card34bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card34c"){
						
					SaveCardDeck3.instantiated3Card34cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card35"){
						
					SaveCardDeck3.instantiated3Card35List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card35a"){
						
					SaveCardDeck3.instantiated3Card35aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card35b"){
						
					SaveCardDeck3.instantiated3Card35bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card35c"){
						
					SaveCardDeck3.instantiated3Card35cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card36"){
						
					SaveCardDeck3.instantiated3Card36List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card36a"){
						
					SaveCardDeck3.instantiated3Card36aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card36b"){
						
					SaveCardDeck3.instantiated3Card36bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card36c"){
						
					SaveCardDeck3.instantiated3Card36cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card37"){
						
					SaveCardDeck3.instantiated3Card37List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card37a"){
						
					SaveCardDeck3.instantiated3Card37aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card37b"){
						
					SaveCardDeck3.instantiated3Card37bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card37c"){
						
					SaveCardDeck3.instantiated3Card37cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card38"){
						
					SaveCardDeck3.instantiated3Card38List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card38a"){
						
					SaveCardDeck3.instantiated3Card38aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card38b"){
						
					SaveCardDeck3.instantiated3Card38bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card38c"){
						
					SaveCardDeck3.instantiated3Card38cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card39"){
						
					SaveCardDeck3.instantiated3Card39List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card39a"){
						
					SaveCardDeck3.instantiated3Card39aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card39b"){
						
					SaveCardDeck3.instantiated3Card39bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card39c"){
						
					SaveCardDeck3.instantiated3Card39cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card40"){
						
					SaveCardDeck3.instantiated3Card40List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card40a"){
						
					SaveCardDeck3.instantiated3Card40aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card40b"){
						
					SaveCardDeck3.instantiated3Card40bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card40c"){
						
					SaveCardDeck3.instantiated3Card40cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card41"){
						
					SaveCardDeck3.instantiated3Card41List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card41a"){
						
					SaveCardDeck3.instantiated3Card41aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card41b"){
						
					SaveCardDeck3.instantiated3Card41bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card41c"){
						
					SaveCardDeck3.instantiated3Card41cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card42"){
						
					SaveCardDeck3.instantiated3Card42List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card42a"){
						
					SaveCardDeck3.instantiated3Card42aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card42b"){
						
					SaveCardDeck3.instantiated3Card42bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card42c"){
						
					SaveCardDeck3.instantiated3Card42cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card43"){
						
					SaveCardDeck3.instantiated3Card43List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card43a"){
						
					SaveCardDeck3.instantiated3Card43aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card43b"){
						
					SaveCardDeck3.instantiated3Card43bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card43c"){
						
					SaveCardDeck3.instantiated3Card43cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card44"){
						
					SaveCardDeck3.instantiated3Card44List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card44a"){
						
					SaveCardDeck3.instantiated3Card44aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card44b"){
						
					SaveCardDeck3.instantiated3Card44bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card44c"){
						
					SaveCardDeck3.instantiated3Card44cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card45"){
						
					SaveCardDeck3.instantiated3Card45List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card45a"){
						
					SaveCardDeck3.instantiated3Card45aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card45b"){
						
					SaveCardDeck3.instantiated3Card45bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card45c"){
						
					SaveCardDeck3.instantiated3Card45cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card46"){
						
					SaveCardDeck3.instantiated3Card46List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card46a"){
						
					SaveCardDeck3.instantiated3Card46aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card46b"){
						
					SaveCardDeck3.instantiated3Card46bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card46c"){
						
					SaveCardDeck3.instantiated3Card46cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card47"){
						
					SaveCardDeck3.instantiated3Card47List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card47a"){
						
					SaveCardDeck3.instantiated3Card47aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card47b"){
						
					SaveCardDeck3.instantiated3Card47bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card47c"){
						
					SaveCardDeck3.instantiated3Card47cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card48"){
						
					SaveCardDeck3.instantiated3Card48List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card48a"){
						
					SaveCardDeck3.instantiated3Card48aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card48b"){
						
					SaveCardDeck3.instantiated3Card48bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card48c"){
						
					SaveCardDeck3.instantiated3Card48cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card49"){
						
					SaveCardDeck3.instantiated3Card49List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card49a"){
						
					SaveCardDeck3.instantiated3Card49aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card49b"){
						
					SaveCardDeck3.instantiated3Card49bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card49c"){
						
					SaveCardDeck3.instantiated3Card49cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card50"){
						
					SaveCardDeck3.instantiated3Card50List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card50a"){
						
					SaveCardDeck3.instantiated3Card50aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card50b"){
						
					SaveCardDeck3.instantiated3Card50bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card50c"){
						
					SaveCardDeck3.instantiated3Card50cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card51"){
						
					SaveCardDeck3.instantiated3Card51List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card51a"){
						
					SaveCardDeck3.instantiated3Card51aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card51b"){
						
					SaveCardDeck3.instantiated3Card51bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card51c"){
						
					SaveCardDeck3.instantiated3Card51cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card52"){
						
					SaveCardDeck3.instantiated3Card52List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card52a"){
						
					SaveCardDeck3.instantiated3Card52aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card52b"){
						
					SaveCardDeck3.instantiated3Card52bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card52c"){
						
					SaveCardDeck3.instantiated3Card52cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card53"){
						
					SaveCardDeck3.instantiated3Card53List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card53a"){
						
					SaveCardDeck3.instantiated3Card53aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card53b"){
						
					SaveCardDeck3.instantiated3Card53bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card53c"){
						
					SaveCardDeck3.instantiated3Card53cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card54"){
						
					SaveCardDeck3.instantiated3Card54List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card54a"){
						
					SaveCardDeck3.instantiated3Card54aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card54b"){
						
					SaveCardDeck3.instantiated3Card54bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card54c"){
						
					SaveCardDeck3.instantiated3Card54cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card55"){
						
					SaveCardDeck3.instantiated3Card55List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card55a"){
						
					SaveCardDeck3.instantiated3Card55aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card55b"){
						
					SaveCardDeck3.instantiated3Card55bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card55c"){
						
					SaveCardDeck3.instantiated3Card55cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card56"){
						
					SaveCardDeck3.instantiated3Card56List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card56a"){
						
					SaveCardDeck3.instantiated3Card56aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card56b"){
						
					SaveCardDeck3.instantiated3Card56bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card56c"){
						
					SaveCardDeck3.instantiated3Card56cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card57"){
						
					SaveCardDeck3.instantiated3Card57List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card57a"){
						
					SaveCardDeck3.instantiated3Card57aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card57b"){
						
					SaveCardDeck3.instantiated3Card57bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card57c"){
						
					SaveCardDeck3.instantiated3Card57cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card58"){
						
					SaveCardDeck3.instantiated3Card58List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card58a"){
						
					SaveCardDeck3.instantiated3Card58aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card58b"){
						
					SaveCardDeck3.instantiated3Card58bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card58c"){
						
					SaveCardDeck3.instantiated3Card58cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card59"){
						
					SaveCardDeck3.instantiated3Card59List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card59a"){
						
					SaveCardDeck3.instantiated3Card59aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card59b"){
						
					SaveCardDeck3.instantiated3Card59bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card59c"){
						
					SaveCardDeck3.instantiated3Card59cList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card60"){
						
					SaveCardDeck3.instantiated3Card60List.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card60a"){
						
					SaveCardDeck3.instantiated3Card60aList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card60b"){
						
					SaveCardDeck3.instantiated3Card60bList.Add(card);
					
				}
				
				else if(card.name == "instantiated3Card60c"){
						
					SaveCardDeck3.instantiated3Card60cList.Add(card);
					
				}
				
		
			}
			CardCounterManager.counter1 += SaveCardDeck3.instantiated3Card1List.Count;
			print("I3C1L: " + SaveCardDeck3.instantiated3Card1List.Count);
			CardCounterManager.CardCounter1();
			
			CardCounterManager.counter1a += SaveCardDeck3.instantiated3Card1aList.Count;
			CardCounterManager.CardCounter1a();
			
			CardCounterManager.counter1b += SaveCardDeck3.instantiated3Card1bList.Count;
			CardCounterManager.CardCounter1b();
			
			CardCounterManager.counter1c += SaveCardDeck3.instantiated3Card1cList.Count;
			CardCounterManager.CardCounter1c();
			
			CardCounterManager.counter2 += SaveCardDeck3.instantiated3Card2List.Count;
			CardCounterManager.CardCounter2();
			
			CardCounterManager.counter2a += SaveCardDeck3.instantiated3Card2aList.Count;
			CardCounterManager.CardCounter2a();
			
			CardCounterManager.counter2b += SaveCardDeck3.instantiated3Card2bList.Count;
			CardCounterManager.CardCounter2b();
			
			CardCounterManager.counter2c += SaveCardDeck3.instantiated3Card2cList.Count;
			CardCounterManager.CardCounter2c();
			
			CardCounterManager.counter3 += SaveCardDeck3.instantiated3Card3List.Count;
			CardCounterManager.CardCounter3();
			
			CardCounterManager.counter3a += SaveCardDeck3.instantiated3Card3aList.Count;
			CardCounterManager.CardCounter3a();
			
			CardCounterManager.counter3b += SaveCardDeck3.instantiated3Card3bList.Count;
			CardCounterManager.CardCounter3b();
			
			CardCounterManager.counter3c += SaveCardDeck3.instantiated3Card3cList.Count;
			CardCounterManager.CardCounter3c();
			
			CardCounterManager.counter4 += SaveCardDeck3.instantiated3Card4List.Count;
			CardCounterManager.CardCounter4();
			
			CardCounterManager.counter4a += SaveCardDeck3.instantiated3Card4aList.Count;
			CardCounterManager.CardCounter4a();
			
			CardCounterManager.counter4b += SaveCardDeck3.instantiated3Card4bList.Count;
			CardCounterManager.CardCounter4b();
			
			CardCounterManager.counter4c += SaveCardDeck3.instantiated3Card4cList.Count;
			CardCounterManager.CardCounter4c();
			
			CardCounterManager.counter5 += SaveCardDeck3.instantiated3Card5List.Count;
			CardCounterManager.CardCounter5();
			
			CardCounterManager.counter5a += SaveCardDeck3.instantiated3Card5aList.Count;
			CardCounterManager.CardCounter5a();
			
			CardCounterManager.counter5b += SaveCardDeck3.instantiated3Card5bList.Count;
			CardCounterManager.CardCounter5b();
			
			CardCounterManager.counter5c += SaveCardDeck3.instantiated3Card5cList.Count;
			CardCounterManager.CardCounter5c();
			
			CardCounterManager.counter6 += SaveCardDeck3.instantiated3Card6List.Count;
			CardCounterManager.CardCounter6();
			
			CardCounterManager.counter6a += SaveCardDeck3.instantiated3Card6aList.Count;
			CardCounterManager.CardCounter6a();
			
			CardCounterManager.counter6b += SaveCardDeck3.instantiated3Card6bList.Count;
			CardCounterManager.CardCounter6b();
			
			CardCounterManager.counter6c += SaveCardDeck3.instantiated3Card6cList.Count;
			CardCounterManager.CardCounter6c();
			
			CardCounterManager.counter7 += SaveCardDeck3.instantiated3Card7List.Count;
			CardCounterManager.CardCounter7();
			
			CardCounterManager.counter7a += SaveCardDeck3.instantiated3Card7aList.Count;
			CardCounterManager.CardCounter7a();
			
			CardCounterManager.counter7b += SaveCardDeck3.instantiated3Card7bList.Count;
			CardCounterManager.CardCounter7b();
			
			CardCounterManager.counter7c += SaveCardDeck3.instantiated3Card7cList.Count;
			CardCounterManager.CardCounter7c();
			
			CardCounterManager.counter8 += SaveCardDeck3.instantiated3Card8List.Count;
			CardCounterManager.CardCounter8();
			
			CardCounterManager.counter8a += SaveCardDeck3.instantiated3Card8aList.Count;
			CardCounterManager.CardCounter8a();
			
			CardCounterManager.counter8b += SaveCardDeck3.instantiated3Card8bList.Count;
			CardCounterManager.CardCounter8b();
			
			CardCounterManager.counter8c += SaveCardDeck3.instantiated3Card8cList.Count;
			CardCounterManager.CardCounter8c();
			
			CardCounterManager.counter9 += SaveCardDeck3.instantiated3Card9List.Count;
			CardCounterManager.CardCounter9();
			
			CardCounterManager.counter9a += SaveCardDeck3.instantiated3Card9aList.Count;
			CardCounterManager.CardCounter9a();
			
			CardCounterManager.counter9b += SaveCardDeck3.instantiated3Card9bList.Count;
			CardCounterManager.CardCounter9b();
			
			CardCounterManager.counter9c += SaveCardDeck3.instantiated3Card9cList.Count;
			CardCounterManager.CardCounter9c();
			
			CardCounterManager.counter10 += SaveCardDeck3.instantiated3Card10List.Count;
			CardCounterManager.CardCounter10();
			
			CardCounterManager.counter10a += SaveCardDeck3.instantiated3Card10aList.Count;
			CardCounterManager.CardCounter10a();
			
			CardCounterManager.counter10b += SaveCardDeck3.instantiated3Card10bList.Count;
			CardCounterManager.CardCounter10b();
			
			CardCounterManager.counter10c += SaveCardDeck3.instantiated3Card10cList.Count;
			CardCounterManager.CardCounter10c();
			
			CardCounterManager.counter11 += SaveCardDeck3.instantiated3Card11List.Count;
			CardCounterManager.CardCounter11();
			
			CardCounterManager.counter11a += SaveCardDeck3.instantiated3Card11aList.Count;
			CardCounterManager.CardCounter11a();
			
			CardCounterManager.counter11b += SaveCardDeck3.instantiated3Card11bList.Count;
			CardCounterManager.CardCounter11b();
			
			CardCounterManager.counter11c += SaveCardDeck3.instantiated3Card11cList.Count;
			CardCounterManager.CardCounter11c();
			
			CardCounterManager.counter12 += SaveCardDeck3.instantiated3Card12List.Count;
			CardCounterManager.CardCounter12();
			
			CardCounterManager.counter12a += SaveCardDeck3.instantiated3Card12aList.Count;
			CardCounterManager.CardCounter12a();
			
			CardCounterManager.counter12b += SaveCardDeck3.instantiated3Card12bList.Count;
			CardCounterManager.CardCounter12b();
			
			CardCounterManager.counter12c += SaveCardDeck3.instantiated3Card12cList.Count;
			CardCounterManager.CardCounter12c();
			
			CardCounterManager.counter13 += SaveCardDeck3.instantiated3Card13List.Count;
			CardCounterManager.CardCounter13();
			
			CardCounterManager.counter13a += SaveCardDeck3.instantiated3Card13aList.Count;
			CardCounterManager.CardCounter13a();
			
			CardCounterManager.counter13b += SaveCardDeck3.instantiated3Card13bList.Count;
			CardCounterManager.CardCounter13b();
			
			CardCounterManager.counter13c += SaveCardDeck3.instantiated3Card13cList.Count;
			CardCounterManager.CardCounter13c();
			
			CardCounterManager.counter14 += SaveCardDeck3.instantiated3Card14List.Count;
			CardCounterManager.CardCounter14();
			
			CardCounterManager.counter14a += SaveCardDeck3.instantiated3Card14aList.Count;
			CardCounterManager.CardCounter14a();
			
			CardCounterManager.counter14b += SaveCardDeck3.instantiated3Card14bList.Count;
			CardCounterManager.CardCounter14b();
			
			CardCounterManager.counter14c += SaveCardDeck3.instantiated3Card14cList.Count;
			CardCounterManager.CardCounter14c();
			
			CardCounterManager.counter15 += SaveCardDeck3.instantiated3Card15List.Count;
			CardCounterManager.CardCounter15();
			
			CardCounterManager.counter15a += SaveCardDeck3.instantiated3Card15aList.Count;
			CardCounterManager.CardCounter15a();
			
			CardCounterManager.counter15b += SaveCardDeck3.instantiated3Card15bList.Count;
			CardCounterManager.CardCounter15b();
			
			CardCounterManager.counter15c += SaveCardDeck3.instantiated3Card15cList.Count;
			CardCounterManager.CardCounter15c();
			
			CardCounterManager.counter16 += SaveCardDeck3.instantiated3Card16List.Count;
			CardCounterManager.CardCounter16();
			
			CardCounterManager.counter16a += SaveCardDeck3.instantiated3Card16aList.Count;
			CardCounterManager.CardCounter16a();
			
			CardCounterManager.counter16b += SaveCardDeck3.instantiated3Card16bList.Count;
			CardCounterManager.CardCounter16b();
			
			CardCounterManager.counter16c += SaveCardDeck3.instantiated3Card16cList.Count;
			CardCounterManager.CardCounter16c();
			
			CardCounterManager.counter17 += SaveCardDeck3.instantiated3Card17List.Count;
			CardCounterManager.CardCounter17();
			
			CardCounterManager.counter17a += SaveCardDeck3.instantiated3Card17aList.Count;
			CardCounterManager.CardCounter17a();
			
			CardCounterManager.counter7b += SaveCardDeck3.instantiated3Card17bList.Count;
			CardCounterManager.CardCounter17b();
			
			CardCounterManager.counter17c += SaveCardDeck3.instantiated3Card17cList.Count;
			CardCounterManager.CardCounter17c();
			
			CardCounterManager.counter18 += SaveCardDeck3.instantiated3Card18List.Count;
			CardCounterManager.CardCounter18();
			
			CardCounterManager.counter18a += SaveCardDeck3.instantiated3Card18aList.Count;
			CardCounterManager.CardCounter18a();
			
			CardCounterManager.counter18b += SaveCardDeck3.instantiated3Card18bList.Count;
			CardCounterManager.CardCounter18b();
			
			CardCounterManager.counter18c += SaveCardDeck3.instantiated3Card18cList.Count;
			CardCounterManager.CardCounter18c();
			
			CardCounterManager.counter19 += SaveCardDeck3.instantiated3Card19List.Count;
			CardCounterManager.CardCounter19();
			
			CardCounterManager.counter19a += SaveCardDeck3.instantiated3Card19aList.Count;
			CardCounterManager.CardCounter19a();
			
			CardCounterManager.counter19b += SaveCardDeck3.instantiated3Card19bList.Count;
			CardCounterManager.CardCounter19b();
			
			CardCounterManager.counter19c += SaveCardDeck3.instantiated3Card19cList.Count;
			CardCounterManager.CardCounter19c();
			
			CardCounterManager.counter20 += SaveCardDeck3.instantiated3Card20List.Count;
			CardCounterManager.CardCounter20();
			
			CardCounterManager.counter20a += SaveCardDeck3.instantiated3Card20aList.Count;
			CardCounterManager.CardCounter20a();
			
			CardCounterManager.counter20b += SaveCardDeck3.instantiated3Card20bList.Count;
			CardCounterManager.CardCounter20b();
			
			CardCounterManager.counter20c += SaveCardDeck3.instantiated3Card20cList.Count;
			CardCounterManager.CardCounter20c();
			
			CardCounterManager.counter21 += SaveCardDeck3.instantiated3Card21List.Count;
			CardCounterManager.CardCounter21();
			
			CardCounterManager.counter21a += SaveCardDeck3.instantiated3Card21aList.Count;
			CardCounterManager.CardCounter21a();
			
			CardCounterManager.counter21b += SaveCardDeck3.instantiated3Card21bList.Count;
			CardCounterManager.CardCounter21b();
			
			CardCounterManager.counter21c += SaveCardDeck3.instantiated3Card21cList.Count;
			CardCounterManager.CardCounter21c();
			
			CardCounterManager.counter22 += SaveCardDeck3.instantiated3Card22List.Count;
			CardCounterManager.CardCounter22();
			
			CardCounterManager.counter22a += SaveCardDeck3.instantiated3Card22aList.Count;
			CardCounterManager.CardCounter22a();
			
			CardCounterManager.counter22b += SaveCardDeck3.instantiated3Card22bList.Count;
			CardCounterManager.CardCounter22b();
			
			CardCounterManager.counter22c += SaveCardDeck3.instantiated3Card22cList.Count;
			CardCounterManager.CardCounter22c();
			
			CardCounterManager.counter23 += SaveCardDeck3.instantiated3Card23List.Count;
			CardCounterManager.CardCounter23();
			
			CardCounterManager.counter23a += SaveCardDeck3.instantiated3Card23aList.Count;
			CardCounterManager.CardCounter23a();
			
			CardCounterManager.counter23b += SaveCardDeck3.instantiated3Card23bList.Count;
			CardCounterManager.CardCounter23b();
			
			CardCounterManager.counter23c += SaveCardDeck3.instantiated3Card23cList.Count;
			CardCounterManager.CardCounter23c();
			
			CardCounterManager.counter24 += SaveCardDeck3.instantiated3Card24List.Count;
			CardCounterManager.CardCounter24();
			
			CardCounterManager.counter24a += SaveCardDeck3.instantiated3Card24aList.Count;
			CardCounterManager.CardCounter24a();
			
			CardCounterManager.counter24b += SaveCardDeck3.instantiated3Card24bList.Count;
			CardCounterManager.CardCounter24b();
			
			CardCounterManager.counter24c += SaveCardDeck3.instantiated3Card24cList.Count;
			CardCounterManager.CardCounter24c();
			
			CardCounterManager.counter25 += SaveCardDeck3.instantiated3Card25List.Count;
			CardCounterManager.CardCounter25();
			
			CardCounterManager.counter25a += SaveCardDeck3.instantiated3Card25aList.Count;
			CardCounterManager.CardCounter25a();
			
			CardCounterManager.counter25b += SaveCardDeck3.instantiated3Card25bList.Count;
			CardCounterManager.CardCounter25b();
			
			CardCounterManager.counter25c += SaveCardDeck3.instantiated3Card25cList.Count;
			CardCounterManager.CardCounter25c();
			
			CardCounterManager.counter26 += SaveCardDeck3.instantiated3Card26List.Count;
			CardCounterManager.CardCounter26();
			
			CardCounterManager.counter26a += SaveCardDeck3.instantiated3Card26aList.Count;
			CardCounterManager.CardCounter26a();
			
			CardCounterManager.counter26b += SaveCardDeck3.instantiated3Card26bList.Count;
			CardCounterManager.CardCounter26b();
			
			CardCounterManager.counter26c += SaveCardDeck3.instantiated3Card26cList.Count;
			CardCounterManager.CardCounter26c();
			
			CardCounterManager.counter27 += SaveCardDeck3.instantiated3Card27List.Count;
			CardCounterManager.CardCounter27();
			
			CardCounterManager.counter27a += SaveCardDeck3.instantiated3Card27aList.Count;
			CardCounterManager.CardCounter27a();
			
			CardCounterManager.counter27b += SaveCardDeck3.instantiated3Card27bList.Count;
			CardCounterManager.CardCounter27b();
			
			CardCounterManager.counter27c += SaveCardDeck3.instantiated3Card27cList.Count;
			CardCounterManager.CardCounter27c();
			
			CardCounterManager.counter28 += SaveCardDeck3.instantiated3Card28List.Count;
			CardCounterManager.CardCounter28();
			
			CardCounterManager.counter28a += SaveCardDeck3.instantiated3Card28aList.Count;
			CardCounterManager.CardCounter28a();
			
			CardCounterManager.counter28b += SaveCardDeck3.instantiated3Card28bList.Count;
			CardCounterManager.CardCounter28b();
			
			CardCounterManager.counter28c += SaveCardDeck3.instantiated3Card28cList.Count;
			CardCounterManager.CardCounter28c();
			
			CardCounterManager.counter29 += SaveCardDeck3.instantiated3Card29List.Count;
			CardCounterManager.CardCounter29();
			
			CardCounterManager.counter29a += SaveCardDeck3.instantiated3Card29aList.Count;
			CardCounterManager.CardCounter29a();
			
			CardCounterManager.counter29b += SaveCardDeck3.instantiated3Card29bList.Count;
			CardCounterManager.CardCounter29b();
			
			CardCounterManager.counter29c += SaveCardDeck3.instantiated3Card29cList.Count;
			CardCounterManager.CardCounter29c();
			
			CardCounterManager.counter30 += SaveCardDeck3.instantiated3Card30List.Count;
			CardCounterManager.CardCounter30();
			
			CardCounterManager.counter30a += SaveCardDeck3.instantiated3Card30aList.Count;
			CardCounterManager.CardCounter30a();
			
			CardCounterManager.counter30b += SaveCardDeck3.instantiated3Card30bList.Count;
			CardCounterManager.CardCounter30b();
			
			CardCounterManager.counter30c += SaveCardDeck3.instantiated3Card30cList.Count;
			CardCounterManager.CardCounter30c();
			
			CardCounterManager.counter31 += SaveCardDeck3.instantiated3Card31List.Count;
			CardCounterManager.CardCounter31();
			
			CardCounterManager.counter31a += SaveCardDeck3.instantiated3Card31aList.Count;
			CardCounterManager.CardCounter31a();
			
			CardCounterManager.counter31b += SaveCardDeck3.instantiated3Card31bList.Count;
			CardCounterManager.CardCounter31b();
			
			CardCounterManager.counter31c += SaveCardDeck3.instantiated3Card31cList.Count;
			CardCounterManager.CardCounter31c();
			
			CardCounterManager.counter32 += SaveCardDeck3.instantiated3Card32List.Count;
			CardCounterManager.CardCounter32();
			
			CardCounterManager.counter32a += SaveCardDeck3.instantiated3Card32aList.Count;
			CardCounterManager.CardCounter32a();
			
			CardCounterManager.counter32b += SaveCardDeck3.instantiated3Card32bList.Count;
			CardCounterManager.CardCounter32b();
			
			CardCounterManager.counter32c += SaveCardDeck3.instantiated3Card32cList.Count;
			CardCounterManager.CardCounter32c();
			
			CardCounterManager.counter33 += SaveCardDeck3.instantiated3Card33List.Count;
			CardCounterManager.CardCounter33();
			
			CardCounterManager.counter33a += SaveCardDeck3.instantiated3Card33aList.Count;
			CardCounterManager.CardCounter33a();
			
			CardCounterManager.counter33b += SaveCardDeck3.instantiated3Card33bList.Count;
			CardCounterManager.CardCounter33b();
			
			CardCounterManager.counter33c += SaveCardDeck3.instantiated3Card33cList.Count;
			CardCounterManager.CardCounter33c();
			
			CardCounterManager.counter34 += SaveCardDeck3.instantiated3Card34List.Count;
			CardCounterManager.CardCounter34();
			
			CardCounterManager.counter34a += SaveCardDeck3.instantiated3Card34aList.Count;
			CardCounterManager.CardCounter34a();
			
			CardCounterManager.counter34b += SaveCardDeck3.instantiated3Card34bList.Count;
			CardCounterManager.CardCounter34b();
			
			CardCounterManager.counter34c += SaveCardDeck3.instantiated3Card34cList.Count;
			CardCounterManager.CardCounter34c();
			
			CardCounterManager.counter35 += SaveCardDeck3.instantiated3Card35List.Count;
			CardCounterManager.CardCounter35();
			
			CardCounterManager.counter35a += SaveCardDeck3.instantiated3Card35aList.Count;
			CardCounterManager.CardCounter35a();
			
			CardCounterManager.counter35b += SaveCardDeck3.instantiated3Card35bList.Count;
			CardCounterManager.CardCounter35b();
			
			CardCounterManager.counter35c += SaveCardDeck3.instantiated3Card35cList.Count;
			CardCounterManager.CardCounter35c();
			
			CardCounterManager.counter36 += SaveCardDeck3.instantiated3Card36List.Count;
			CardCounterManager.CardCounter36();
			
			CardCounterManager.counter36a += SaveCardDeck3.instantiated3Card36aList.Count;
			CardCounterManager.CardCounter36a();
			
			CardCounterManager.counter36b += SaveCardDeck3.instantiated3Card36bList.Count;
			CardCounterManager.CardCounter36b();
			
			CardCounterManager.counter36c += SaveCardDeck3.instantiated3Card36cList.Count;
			CardCounterManager.CardCounter36c();
			
			CardCounterManager.counter37 += SaveCardDeck3.instantiated3Card37List.Count;
			CardCounterManager.CardCounter37();
			
			CardCounterManager.counter37a += SaveCardDeck3.instantiated3Card37aList.Count;
			CardCounterManager.CardCounter37a();
			
			CardCounterManager.counter37b += SaveCardDeck3.instantiated3Card37bList.Count;
			CardCounterManager.CardCounter37b();
			
			CardCounterManager.counter37c += SaveCardDeck3.instantiated3Card37cList.Count;
			CardCounterManager.CardCounter37c();
			
			CardCounterManager.counter38 += SaveCardDeck3.instantiated3Card38List.Count;
			CardCounterManager.CardCounter38();
			
			CardCounterManager.counter38a += SaveCardDeck3.instantiated3Card38aList.Count;
			CardCounterManager.CardCounter38a();
			
			CardCounterManager.counter38b += SaveCardDeck3.instantiated3Card38bList.Count;
			CardCounterManager.CardCounter38b();
			
			CardCounterManager.counter38c += SaveCardDeck3.instantiated3Card38cList.Count;
			CardCounterManager.CardCounter38c();
			
			CardCounterManager.counter39 += SaveCardDeck3.instantiated3Card39List.Count;
			CardCounterManager.CardCounter39();
			
			CardCounterManager.counter39a += SaveCardDeck3.instantiated3Card39aList.Count;
			CardCounterManager.CardCounter39a();
			
			CardCounterManager.counter39b += SaveCardDeck3.instantiated3Card39bList.Count;
			CardCounterManager.CardCounter39b();
			
			CardCounterManager.counter39c += SaveCardDeck3.instantiated3Card39cList.Count;
			CardCounterManager.CardCounter39c();
			
			CardCounterManager.counter40 += SaveCardDeck3.instantiated3Card40List.Count;
			CardCounterManager.CardCounter40();
			
			CardCounterManager.counter40a += SaveCardDeck3.instantiated3Card40aList.Count;
			CardCounterManager.CardCounter40a();
			
			CardCounterManager.counter40b += SaveCardDeck3.instantiated3Card40bList.Count;
			CardCounterManager.CardCounter40b();
			
			CardCounterManager.counter40c += SaveCardDeck3.instantiated3Card40cList.Count;
			CardCounterManager.CardCounter40c();
			
			CardCounterManager.counter41 += SaveCardDeck3.instantiated3Card41List.Count;
			CardCounterManager.CardCounter41();
			
			CardCounterManager.counter41a += SaveCardDeck3.instantiated3Card41aList.Count;
			CardCounterManager.CardCounter41a();
			
			CardCounterManager.counter41b += SaveCardDeck3.instantiated3Card41bList.Count;
			CardCounterManager.CardCounter41b();
			
			CardCounterManager.counter41c += SaveCardDeck3.instantiated3Card41cList.Count;
			CardCounterManager.CardCounter41c();
			
			CardCounterManager.counter42 += SaveCardDeck3.instantiated3Card42List.Count;
			CardCounterManager.CardCounter42();
			
			CardCounterManager.counter42a += SaveCardDeck3.instantiated3Card42aList.Count;
			CardCounterManager.CardCounter42a();
			
			CardCounterManager.counter42b += SaveCardDeck3.instantiated3Card42bList.Count;
			CardCounterManager.CardCounter42b();
			
			CardCounterManager.counter42c += SaveCardDeck3.instantiated3Card42cList.Count;
			CardCounterManager.CardCounter42c();
			
			CardCounterManager.counter43 += SaveCardDeck3.instantiated3Card43List.Count;
			CardCounterManager.CardCounter43();
			
			CardCounterManager.counter43a += SaveCardDeck3.instantiated3Card43aList.Count;
			CardCounterManager.CardCounter43a();
			
			CardCounterManager.counter43b += SaveCardDeck3.instantiated3Card43bList.Count;
			CardCounterManager.CardCounter43b();
			
			CardCounterManager.counter43c += SaveCardDeck3.instantiated3Card43cList.Count;
			CardCounterManager.CardCounter43c();
			
			CardCounterManager.counter44 += SaveCardDeck3.instantiated3Card44List.Count;
			CardCounterManager.CardCounter44();
			
			CardCounterManager.counter44a += SaveCardDeck3.instantiated3Card44aList.Count;
			CardCounterManager.CardCounter44a();
			
			CardCounterManager.counter44b += SaveCardDeck3.instantiated3Card44bList.Count;
			CardCounterManager.CardCounter44b();
			
			CardCounterManager.counter44c += SaveCardDeck3.instantiated3Card44cList.Count;
			CardCounterManager.CardCounter44c();
			
			CardCounterManager.counter45 += SaveCardDeck3.instantiated3Card45List.Count;
			CardCounterManager.CardCounter45();
			
			CardCounterManager.counter45a += SaveCardDeck3.instantiated3Card45aList.Count;
			CardCounterManager.CardCounter45a();
			
			CardCounterManager.counter45b += SaveCardDeck3.instantiated3Card45bList.Count;
			CardCounterManager.CardCounter45b();
			
			CardCounterManager.counter45c += SaveCardDeck3.instantiated3Card45cList.Count;
			CardCounterManager.CardCounter45c();
			
			CardCounterManager.counter46 += SaveCardDeck3.instantiated3Card46List.Count;
			CardCounterManager.CardCounter46();
			
			CardCounterManager.counter46a += SaveCardDeck3.instantiated3Card46aList.Count;
			CardCounterManager.CardCounter46a();
			
			CardCounterManager.counter46b += SaveCardDeck3.instantiated3Card46bList.Count;
			CardCounterManager.CardCounter46b();
			
			CardCounterManager.counter46c += SaveCardDeck3.instantiated3Card46cList.Count;
			CardCounterManager.CardCounter46c();
			
			CardCounterManager.counter47 += SaveCardDeck3.instantiated3Card47List.Count;
			CardCounterManager.CardCounter47();
			
			CardCounterManager.counter47a += SaveCardDeck3.instantiated3Card47aList.Count;
			CardCounterManager.CardCounter47a();
			
			CardCounterManager.counter47b += SaveCardDeck3.instantiated3Card47bList.Count;
			CardCounterManager.CardCounter47b();
			
			CardCounterManager.counter47c += SaveCardDeck3.instantiated3Card47cList.Count;
			CardCounterManager.CardCounter47c();
			
			CardCounterManager.counter48 += SaveCardDeck3.instantiated3Card48List.Count;
			CardCounterManager.CardCounter48();
			
			CardCounterManager.counter48a += SaveCardDeck3.instantiated3Card48aList.Count;
			CardCounterManager.CardCounter48a();
			
			CardCounterManager.counter48b += SaveCardDeck3.instantiated3Card48bList.Count;
			CardCounterManager.CardCounter48b();
			
			CardCounterManager.counter48c += SaveCardDeck3.instantiated3Card48cList.Count;
			CardCounterManager.CardCounter48c();
			
			CardCounterManager.counter49 += SaveCardDeck3.instantiated3Card49List.Count;
			CardCounterManager.CardCounter49();
			
			CardCounterManager.counter49a += SaveCardDeck3.instantiated3Card49aList.Count;
			CardCounterManager.CardCounter49a();
			
			CardCounterManager.counter49b += SaveCardDeck3.instantiated3Card49bList.Count;
			CardCounterManager.CardCounter49b();
			
			CardCounterManager.counter49c += SaveCardDeck3.instantiated3Card49cList.Count;
			CardCounterManager.CardCounter49c();
			
			CardCounterManager.counter50 += SaveCardDeck3.instantiated3Card50List.Count;
			CardCounterManager.CardCounter50();
			
			CardCounterManager.counter50a += SaveCardDeck3.instantiated3Card50aList.Count;
			CardCounterManager.CardCounter50a();
			
			CardCounterManager.counter50b += SaveCardDeck3.instantiated3Card50bList.Count;
			CardCounterManager.CardCounter50b();
			
			CardCounterManager.counter50c += SaveCardDeck3.instantiated3Card50cList.Count;
			CardCounterManager.CardCounter50c();
			
			CardCounterManager.counter51 += SaveCardDeck3.instantiated3Card51List.Count;
			CardCounterManager.CardCounter51();
			
			CardCounterManager.counter51a += SaveCardDeck3.instantiated3Card51aList.Count;
			CardCounterManager.CardCounter51a();
			
			CardCounterManager.counter51b += SaveCardDeck3.instantiated3Card51bList.Count;
			CardCounterManager.CardCounter51b();
			
			CardCounterManager.counter51c += SaveCardDeck3.instantiated3Card51cList.Count;
			CardCounterManager.CardCounter51c();
			
			CardCounterManager.counter52 += SaveCardDeck3.instantiated3Card52List.Count;
			CardCounterManager.CardCounter52();
			
			CardCounterManager.counter52a += SaveCardDeck3.instantiated3Card52aList.Count;
			CardCounterManager.CardCounter52a();
			
			CardCounterManager.counter52b += SaveCardDeck3.instantiated3Card52bList.Count;
			CardCounterManager.CardCounter52b();
			
			CardCounterManager.counter52c += SaveCardDeck3.instantiated3Card52cList.Count;
			CardCounterManager.CardCounter52c();
			
			CardCounterManager.counter53 += SaveCardDeck3.instantiated3Card53List.Count;
			CardCounterManager.CardCounter53();
			
			CardCounterManager.counter53a += SaveCardDeck3.instantiated3Card53aList.Count;
			CardCounterManager.CardCounter53a();
			
			CardCounterManager.counter53b += SaveCardDeck3.instantiated3Card53bList.Count;
			CardCounterManager.CardCounter53b();
			
			CardCounterManager.counter53c += SaveCardDeck3.instantiated3Card53cList.Count;
			CardCounterManager.CardCounter53c();
			
			CardCounterManager.counter54 += SaveCardDeck3.instantiated3Card54List.Count;
			CardCounterManager.CardCounter54();
			
			CardCounterManager.counter54a += SaveCardDeck3.instantiated3Card54aList.Count;
			CardCounterManager.CardCounter54a();
			
			CardCounterManager.counter54b += SaveCardDeck3.instantiated3Card54bList.Count;
			CardCounterManager.CardCounter54b();
			
			CardCounterManager.counter54c += SaveCardDeck3.instantiated3Card54cList.Count;
			CardCounterManager.CardCounter54c();
			
			CardCounterManager.counter55 += SaveCardDeck3.instantiated3Card55List.Count;
			CardCounterManager.CardCounter55();
			
			CardCounterManager.counter55a += SaveCardDeck3.instantiated3Card55aList.Count;
			CardCounterManager.CardCounter55a();
			
			CardCounterManager.counter55b += SaveCardDeck3.instantiated3Card55bList.Count;
			CardCounterManager.CardCounter55b();
			
			CardCounterManager.counter55c += SaveCardDeck3.instantiated3Card55cList.Count;
			CardCounterManager.CardCounter55c();
			
			CardCounterManager.counter56 += SaveCardDeck3.instantiated3Card56List.Count;
			CardCounterManager.CardCounter56();
			
			CardCounterManager.counter56a += SaveCardDeck3.instantiated3Card56aList.Count;
			CardCounterManager.CardCounter56a();
			
			CardCounterManager.counter56b += SaveCardDeck3.instantiated3Card56bList.Count;
			CardCounterManager.CardCounter56b();
			
			CardCounterManager.counter56c += SaveCardDeck3.instantiated3Card56cList.Count;
			CardCounterManager.CardCounter56c();
			
			CardCounterManager.counter57 += SaveCardDeck3.instantiated3Card57List.Count;
			CardCounterManager.CardCounter57();
			
			CardCounterManager.counter57a += SaveCardDeck3.instantiated3Card57aList.Count;
			CardCounterManager.CardCounter57a();
			
			CardCounterManager.counter57b += SaveCardDeck3.instantiated3Card57bList.Count;
			CardCounterManager.CardCounter57b();
			
			CardCounterManager.counter57c += SaveCardDeck3.instantiated3Card57cList.Count;
			CardCounterManager.CardCounter57c();
			
			CardCounterManager.counter58 += SaveCardDeck3.instantiated3Card58List.Count;
			CardCounterManager.CardCounter58();
			
			CardCounterManager.counter58a += SaveCardDeck3.instantiated3Card58aList.Count;
			CardCounterManager.CardCounter58a();
			
			CardCounterManager.counter58b += SaveCardDeck3.instantiated3Card58bList.Count;
			CardCounterManager.CardCounter58b();
			
			CardCounterManager.counter58c += SaveCardDeck3.instantiated3Card58cList.Count;
			CardCounterManager.CardCounter58c();
			
			CardCounterManager.counter59 += SaveCardDeck3.instantiated3Card59List.Count;
			CardCounterManager.CardCounter59();
			
			CardCounterManager.counter59a += SaveCardDeck3.instantiated3Card59aList.Count;
			CardCounterManager.CardCounter59a();
			
			CardCounterManager.counter59b += SaveCardDeck3.instantiated3Card59bList.Count;
			CardCounterManager.CardCounter59b();
			
			CardCounterManager.counter59c += SaveCardDeck3.instantiated3Card59cList.Count;
			CardCounterManager.CardCounter59c();
			
			CardCounterManager.counter60 += SaveCardDeck3.instantiated3Card60List.Count;
			CardCounterManager.CardCounter60();
			
			CardCounterManager.counter60a += SaveCardDeck3.instantiated3Card60aList.Count;
			CardCounterManager.CardCounter60a();
			
			CardCounterManager.counter60b += SaveCardDeck3.instantiated3Card60bList.Count;
			CardCounterManager.CardCounter60b();
			
			CardCounterManager.counter60c += SaveCardDeck3.instantiated3Card60cList.Count;
			CardCounterManager.CardCounter60c();
		
		} */
		
		
		
		
		
		
	}

}

